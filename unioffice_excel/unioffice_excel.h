

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 7.00.0500 */
/* at Sun Dec 27 11:41:33 2009
 */
/* Compiler settings for unioffice_excel.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#undef DialogBox

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __unioffice_excel_h__
#define __unioffice_excel_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef ___Application_FWD_DEFINED__
#define ___Application_FWD_DEFINED__
typedef interface _Application _Application;
#endif 	/* ___Application_FWD_DEFINED__ */


#ifndef __Workbooks_FWD_DEFINED__
#define __Workbooks_FWD_DEFINED__
typedef interface Workbooks Workbooks;
#endif 	/* __Workbooks_FWD_DEFINED__ */


#ifndef ___Workbook_FWD_DEFINED__
#define ___Workbook_FWD_DEFINED__
typedef interface _Workbook _Workbook;
#endif 	/* ___Workbook_FWD_DEFINED__ */


#ifndef __IWorkbookEvents_FWD_DEFINED__
#define __IWorkbookEvents_FWD_DEFINED__
typedef interface IWorkbookEvents IWorkbookEvents;
#endif 	/* __IWorkbookEvents_FWD_DEFINED__ */


#ifndef __Sheets_FWD_DEFINED__
#define __Sheets_FWD_DEFINED__
typedef interface Sheets Sheets;
#endif 	/* __Sheets_FWD_DEFINED__ */


#ifndef __INames_FWD_DEFINED__
#define __INames_FWD_DEFINED__
typedef interface INames INames;
#endif 	/* __INames_FWD_DEFINED__ */


#ifndef __IName_FWD_DEFINED__
#define __IName_FWD_DEFINED__
typedef interface IName IName;
#endif 	/* __IName_FWD_DEFINED__ */


#ifndef __IBorders_FWD_DEFINED__
#define __IBorders_FWD_DEFINED__
typedef interface IBorders IBorders;
#endif 	/* __IBorders_FWD_DEFINED__ */


#ifndef __IBorder_FWD_DEFINED__
#define __IBorder_FWD_DEFINED__
typedef interface IBorder IBorder;
#endif 	/* __IBorder_FWD_DEFINED__ */


#ifndef __IInterior_FWD_DEFINED__
#define __IInterior_FWD_DEFINED__
typedef interface IInterior IInterior;
#endif 	/* __IInterior_FWD_DEFINED__ */


#ifndef __IOutline_FWD_DEFINED__
#define __IOutline_FWD_DEFINED__
typedef interface IOutline IOutline;
#endif 	/* __IOutline_FWD_DEFINED__ */


#ifndef __IPageSetup_FWD_DEFINED__
#define __IPageSetup_FWD_DEFINED__
typedef interface IPageSetup IPageSetup;
#endif 	/* __IPageSetup_FWD_DEFINED__ */


#ifndef ___IFont_FWD_DEFINED__
#define ___IFont_FWD_DEFINED__
typedef interface _IFont _IFont;
#endif 	/* ___IFont_FWD_DEFINED__ */


#ifndef __IRange_FWD_DEFINED__
#define __IRange_FWD_DEFINED__
typedef interface IRange IRange;
#endif 	/* __IRange_FWD_DEFINED__ */


#ifndef ___Worksheet_FWD_DEFINED__
#define ___Worksheet_FWD_DEFINED__
typedef interface _Worksheet _Worksheet;
#endif 	/* ___Worksheet_FWD_DEFINED__ */


#ifndef __IWorksheets_FWD_DEFINED__
#define __IWorksheets_FWD_DEFINED__
typedef interface IWorksheets IWorksheets;
#endif 	/* __IWorksheets_FWD_DEFINED__ */


#ifndef __AppEvents_FWD_DEFINED__
#define __AppEvents_FWD_DEFINED__
typedef interface AppEvents AppEvents;
#endif 	/* __AppEvents_FWD_DEFINED__ */


#ifndef __WorkbookEvents_FWD_DEFINED__
#define __WorkbookEvents_FWD_DEFINED__
typedef interface WorkbookEvents WorkbookEvents;
#endif 	/* __WorkbookEvents_FWD_DEFINED__ */


#ifndef __PivotCaches_FWD_DEFINED__
#define __PivotCaches_FWD_DEFINED__
typedef interface PivotCaches PivotCaches;
#endif 	/* __PivotCaches_FWD_DEFINED__ */


#ifndef __Names_FWD_DEFINED__
#define __Names_FWD_DEFINED__
typedef interface Names Names;
#endif 	/* __Names_FWD_DEFINED__ */


#ifndef __Name_FWD_DEFINED__
#define __Name_FWD_DEFINED__
typedef interface Name Name;
#endif 	/* __Name_FWD_DEFINED__ */


#ifndef __Borders_FWD_DEFINED__
#define __Borders_FWD_DEFINED__
typedef interface Borders Borders;
#endif 	/* __Borders_FWD_DEFINED__ */


#ifndef __Border_FWD_DEFINED__
#define __Border_FWD_DEFINED__
typedef interface Border Border;
#endif 	/* __Border_FWD_DEFINED__ */


#ifndef __Interior_FWD_DEFINED__
#define __Interior_FWD_DEFINED__
typedef interface Interior Interior;
#endif 	/* __Interior_FWD_DEFINED__ */


#ifndef __Outline_FWD_DEFINED__
#define __Outline_FWD_DEFINED__
typedef interface Outline Outline;
#endif 	/* __Outline_FWD_DEFINED__ */


#ifndef __PageSetup_FWD_DEFINED__
#define __PageSetup_FWD_DEFINED__
typedef interface PageSetup PageSetup;
#endif 	/* __PageSetup_FWD_DEFINED__ */


#ifndef __Font_FWD_DEFINED__
#define __Font_FWD_DEFINED__
typedef interface Font Font;
#endif 	/* __Font_FWD_DEFINED__ */


#ifndef __Range_FWD_DEFINED__
#define __Range_FWD_DEFINED__
typedef interface Range Range;
#endif 	/* __Range_FWD_DEFINED__ */


#ifndef __DocEvents_FWD_DEFINED__
#define __DocEvents_FWD_DEFINED__
typedef interface DocEvents DocEvents;
#endif 	/* __DocEvents_FWD_DEFINED__ */


#ifndef __Worksheets_FWD_DEFINED__
#define __Worksheets_FWD_DEFINED__
typedef interface Worksheets Worksheets;
#endif 	/* __Worksheets_FWD_DEFINED__ */


#ifndef __Worksheet_FWD_DEFINED__
#define __Worksheet_FWD_DEFINED__

#ifdef __cplusplus
typedef class Worksheet Worksheet;
#else
typedef struct Worksheet Worksheet;
#endif /* __cplusplus */

#endif 	/* __Worksheet_FWD_DEFINED__ */


#ifndef __Application_FWD_DEFINED__
#define __Application_FWD_DEFINED__

#ifdef __cplusplus
typedef class Application Application;
#else
typedef struct Application Application;
#endif /* __cplusplus */

#endif 	/* __Application_FWD_DEFINED__ */


#ifndef __Workbook_FWD_DEFINED__
#define __Workbook_FWD_DEFINED__

#ifdef __cplusplus
typedef class Workbook Workbook;
#else
typedef struct Workbook Workbook;
#endif /* __cplusplus */

#endif 	/* __Workbook_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __Office_LIBRARY_DEFINED__
#define __Office_LIBRARY_DEFINED__

/* library Office */
/* [helpstring][version][uuid] */ 

typedef long single;

typedef IDispatch Chart;

typedef IDispatch DialogSheet;

typedef IDispatch MenuBar;

typedef IDispatch Window;

typedef IDispatch AddIns;

typedef IDispatch Assistant;

typedef IDispatch CommandBars;

typedef IDispatch MenuBars;

typedef IDispatch Modules;

typedef IDispatch Menu;

typedef IDispatch Toolbars;

typedef IDispatch Windows;

typedef IDispatch WorksheetFunction;

typedef IDispatch AutoCorrect;

typedef IDispatch Dialogs;

typedef IDispatch FileSearch;

typedef IDispatch IFind;

typedef IDispatch RecentFiles;

typedef IDispatch ODBCErrors;

typedef IDispatch OLEDBErrors;

typedef IDispatch COMAddIns;

typedef IDispatch DefaultWebOptions;

typedef IDispatch LanguageSettings;

typedef IDispatch PivotTable;

typedef IDispatch AnswerWizard;

typedef IDispatch CellFormat;

typedef IDispatch UsedObjects;

typedef IDispatch Watches;

typedef IDispatch FileDialog;

typedef IDispatch AutoRecover;

typedef IDispatch ErrorCheckingOptions;

typedef IDispatch SmartTagRecognizers;

typedef IDispatch NewFile;

typedef IDispatch SpellingOptions;

typedef IDispatch Speech;

typedef IDispatch RTD;

typedef IDispatch IAssistance;

typedef IDispatch MultiThreadedCalculation;

typedef IDispatch HyperLink;

typedef IDispatch XmlMap;

typedef IDispatch Mailer;

typedef IDispatch RoutingSlip;

typedef IDispatch Styles;

typedef IDispatch CustomViews;

typedef IDispatch PublishObjects;

typedef IDispatch WebOptions;

typedef IDispatch HTMLProject;

typedef IDispatch SmartTagOptions;

typedef IDispatch Permission;

typedef IDispatch SharedWorkspace;

typedef IDispatch Sync;

typedef IDispatch XmlNamespaces;

typedef IDispatch XmlMaps;

typedef IDispatch SmartDocument;

typedef IDispatch DocumentLibraryVersions;

typedef IDispatch MetaProperties;

typedef IDispatch Connections;

typedef IDispatch SignatureSet;

typedef IDispatch ServerPolicy;

typedef IDispatch DocumentInspectors;

typedef IDispatch WorkflowTasks;

typedef IDispatch WorkflowTemplates;

typedef IDispatch ServerViewableItems;

typedef IDispatch TableStyles;

typedef IDispatch CustomXMLParts;

typedef IDispatch Research;

typedef IDispatch OfficeTheme;

typedef IDispatch IconSets;

typedef IDispatch PivotCache;

typedef IDispatch HPageBreaks;

typedef IDispatch vPageBreaks;

typedef IDispatch Graphic;

typedef IDispatch Pages;

typedef IDispatch Page;

typedef IDispatch Areas;

typedef IDispatch Characters;

typedef IDispatch PivotField;

typedef IDispatch PivotItem;

typedef IDispatch QueryTable;

typedef IDispatch SoundNote;

typedef IDispatch Validation;

typedef IDispatch Comment;

typedef IDispatch Phonetic;

typedef IDispatch Phonetics;

typedef IDispatch FormatConditions;

typedef IDispatch HyperLinks;

typedef IDispatch PivotCell;

typedef IDispatch Errors;

typedef IDispatch SmartTags;

typedef IDispatch ListObject;

typedef IDispatch XPath;

typedef IDispatch Actions;

typedef IDispatch Shapes;

typedef IDispatch QueryTables;

typedef IDispatch Comments;

typedef IDispatch AutoFilter;

typedef IDispatch Scripts;

typedef IDispatch Tab;

typedef IDispatch MsoEnvelope;

typedef IDispatch CustomProperties;

typedef IDispatch Protection;

typedef IDispatch ListObjects;

typedef IDispatch Sort;


































typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0001
    {	msoEncodingThai	= 874,
	msoEncodingJapaneseShiftJIS	= 932,
	msoEncodingSimplifiedChineseGBK	= 936,
	msoEncodingKorean	= 949,
	msoEncodingTraditionalChineseBig5	= 950,
	msoEncodingUnicodeLittleEndian	= 1200,
	msoEncodingUnicodeBigEndian	= 1201,
	msoEncodingCentralEuropean	= 1250,
	msoEncodingCyrillic	= 1251,
	msoEncodingWestern	= 1252,
	msoEncodingGreek	= 1253,
	msoEncodingTurkish	= 1254,
	msoEncodingHebrew	= 1255,
	msoEncodingArabic	= 1256,
	msoEncodingBaltic	= 1257,
	msoEncodingVietnamese	= 1258,
	msoEncodingAutoDetect	= 50001,
	msoEncodingJapaneseAutoDetect	= 50932,
	msoEncodingSimplifiedChineseAutoDetect	= 50936,
	msoEncodingKoreanAutoDetect	= 50949,
	msoEncodingTraditionalChineseAutoDetect	= 50950,
	msoEncodingCyrillicAutoDetect	= 51251,
	msoEncodingGreekAutoDetect	= 51253,
	msoEncodingArabicAutoDetect	= 51256,
	msoEncodingISO88591Latin1	= 28591,
	msoEncodingISO88592CentralEurope	= 28592,
	msoEncodingISO88593Latin3	= 28593,
	msoEncodingISO88594Baltic	= 28594,
	msoEncodingISO88595Cyrillic	= 28595,
	msoEncodingISO88596Arabic	= 28596,
	msoEncodingISO88597Greek	= 28597,
	msoEncodingISO88598Hebrew	= 28598,
	msoEncodingISO88599Turkish	= 28599,
	msoEncodingISO885915Latin9	= 28605,
	msoEncodingISO88598HebrewLogical	= 38598,
	msoEncodingISO2022JPNoHalfwidthKatakana	= 50220,
	msoEncodingISO2022JPJISX02021984	= 50221,
	msoEncodingISO2022JPJISX02011989	= 50222,
	msoEncodingISO2022KR	= 50225,
	msoEncodingISO2022CNTraditionalChinese	= 50227,
	msoEncodingISO2022CNSimplifiedChinese	= 50229,
	msoEncodingMacRoman	= 10000,
	msoEncodingMacJapanese	= 10001,
	msoEncodingMacTraditionalChineseBig5	= 10002,
	msoEncodingMacKorean	= 10003,
	msoEncodingMacArabic	= 10004,
	msoEncodingMacHebrew	= 10005,
	msoEncodingMacGreek1	= 10006,
	msoEncodingMacCyrillic	= 10007,
	msoEncodingMacSimplifiedChineseGB2312	= 10008,
	msoEncodingMacRomania	= 10010,
	msoEncodingMacUkraine	= 10017,
	msoEncodingMacLatin2	= 10029,
	msoEncodingMacIcelandic	= 10079,
	msoEncodingMacTurkish	= 10081,
	msoEncodingMacCroatia	= 10082,
	msoEncodingEBCDICUSCanada	= 37,
	msoEncodingEBCDICInternational	= 500,
	msoEncodingEBCDICMultilingualROECELatin2	= 870,
	msoEncodingEBCDICGreekModern	= 875,
	msoEncodingEBCDICTurkishLatin5	= 1026,
	msoEncodingEBCDICGermany	= 20273,
	msoEncodingEBCDICDenmarkNorway	= 20277,
	msoEncodingEBCDICFinlandSweden	= 20278,
	msoEncodingEBCDICItaly	= 20280,
	msoEncodingEBCDICLatinAmericaSpain	= 20284,
	msoEncodingEBCDICUnitedKingdom	= 20285,
	msoEncodingEBCDICJapaneseKatakanaExtended	= 20290,
	msoEncodingEBCDICFrance	= 20297,
	msoEncodingEBCDICArabic	= 20420,
	msoEncodingEBCDICGreek	= 20423,
	msoEncodingEBCDICHebrew	= 20424,
	msoEncodingEBCDICKoreanExtended	= 20833,
	msoEncodingEBCDICThai	= 20838,
	msoEncodingEBCDICIcelandic	= 20871,
	msoEncodingEBCDICTurkish	= 20905,
	msoEncodingEBCDICRussian	= 20880,
	msoEncodingEBCDICSerbianBulgarian	= 21025,
	msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese	= 50930,
	msoEncodingEBCDICUSCanadaAndJapanese	= 50931,
	msoEncodingEBCDICKoreanExtendedAndKorean	= 50933,
	msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese	= 50935,
	msoEncodingEBCDICUSCanadaAndTraditionalChinese	= 50937,
	msoEncodingEBCDICJapaneseLatinExtendedAndJapanese	= 50939,
	msoEncodingOEMUnitedStates	= 437,
	msoEncodingOEMGreek437G	= 737,
	msoEncodingOEMBaltic	= 775,
	msoEncodingOEMMultilingualLatinI	= 850,
	msoEncodingOEMMultilingualLatinII	= 852,
	msoEncodingOEMCyrillic	= 855,
	msoEncodingOEMTurkish	= 857,
	msoEncodingOEMPortuguese	= 860,
	msoEncodingOEMIcelandic	= 861,
	msoEncodingOEMHebrew	= 862,
	msoEncodingOEMCanadianFrench	= 863,
	msoEncodingOEMArabic	= 864,
	msoEncodingOEMNordic	= 865,
	msoEncodingOEMCyrillicII	= 866,
	msoEncodingOEMModernGreek	= 869,
	msoEncodingEUCJapanese	= 51932,
	msoEncodingEUCChineseSimplifiedChinese	= 51936,
	msoEncodingEUCKorean	= 51949,
	msoEncodingEUCTaiwaneseTraditionalChinese	= 51950,
	msoEncodingISCIIDevanagari	= 57002,
	msoEncodingISCIIBengali	= 57003,
	msoEncodingISCIITamil	= 57004,
	msoEncodingISCIITelugu	= 57005,
	msoEncodingISCIIAssamese	= 57006,
	msoEncodingISCIIOriya	= 57007,
	msoEncodingISCIIKannada	= 57008,
	msoEncodingISCIIMalayalam	= 57009,
	msoEncodingISCIIGujarati	= 57010,
	msoEncodingISCIIPunjabi	= 57011,
	msoEncodingArabicASMO	= 708,
	msoEncodingArabicTransparentASMO	= 720,
	msoEncodingKoreanJohab	= 1361,
	msoEncodingTaiwanCNS	= 20000,
	msoEncodingTaiwanTCA	= 20001,
	msoEncodingTaiwanEten	= 20002,
	msoEncodingTaiwanIBM5550	= 20003,
	msoEncodingTaiwanTeleText	= 20004,
	msoEncodingTaiwanWang	= 20005,
	msoEncodingIA5IRV	= 20105,
	msoEncodingIA5German	= 20106,
	msoEncodingIA5Swedish	= 20107,
	msoEncodingIA5Norwegian	= 20108,
	msoEncodingUSASCII	= 20127,
	msoEncodingT61	= 20261,
	msoEncodingISO6937NonSpacingAccent	= 20269,
	msoEncodingKOI8R	= 20866,
	msoEncodingExtAlphaLowercase	= 21027,
	msoEncodingKOI8U	= 21866,
	msoEncodingEuropa3	= 29001,
	msoEncodingHZGBSimplifiedChinese	= 52936,
	msoEncodingSimplifiedChineseGB18030	= 54936,
	msoEncodingUTF7	= 65000,
	msoEncodingUTF8	= 65001
    } 	MsoEncoding;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0002
    {	msoSyncEventDownloadInitiated	= 0,
	msoSyncEventDownloadSucceeded	= 1,
	msoSyncEventDownloadFailed	= 2,
	msoSyncEventUploadInitiated	= 3,
	msoSyncEventUploadSucceeded	= 4,
	msoSyncEventUploadFailed	= 5,
	msoSyncEventDownloadNoChange	= 6,
	msoSyncEventOffline	= 7
    } 	MsoSyncEventType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0003
    {	msoFeatureInstallNone	= 0,
	msoFeatureInstallOnDemand	= 1,
	msoFeatureInstallOnDemandWithUI	= 2
    } 	MsoFeatureInstall;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0004
    {	msoAutomationSecurityLow	= 1,
	msoAutomationSecurityByUI	= 2,
	msoAutomationSecurityForceDisable	= 3
    } 	MsoAutomationSecurity;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0005
    {	msoFileDialogOpen	= 1,
	msoFileDialogSaveAs	= 2,
	msoFileDialogFilePicker	= 3,
	msoFileDialogFolderPicker	= 4
    } 	MsoFileDialogType;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0006
    {	xlXmlExportSuccess	= 0,
	xlXmlExportValidationFailed	= 1
    } 	XlXmlExportResult;

typedef /* [public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0007
    {	xlXmlImportSuccess	= 0,
	xlXmlImportElementsTruncated	= 1,
	xlXmlImportValidationFailed	= 2
    } 	XlXmlImportResult;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0008
    {	xlGenerateTableRefA1	= 0,
	xlGenerateTableRefStruct	= 1
    } 	XlGenerateTableRefs;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0009
    {	xlDone	= 0,
	xlCalculating	= 1,
	xlPending	= 2
    } 	XlCalculationState;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0010
    {	xlNoKey	= 0,
	xlEscKey	= 1,
	xlAnyKey	= 2
    } 	XlCalculationInterruptKey;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0011
    {	xlCreatorCode	= 0x5843454c
    } 	XlCreator;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0012
    {	xlMicrosoftAccess	= 4,
	xlMicrosoftFoxPro	= 5,
	xlMicrosoftMail	= 3,
	xlMicrosoftPowerPoint	= 2,
	xlMicrosoftProject	= 6,
	xlMicrosoftSchedulePlus	= 7,
	xlMicrosoftWord	= 1
    } 	XlMSApplication;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0013
    {	xlCalculationAutomatic	= 0xffffeff7,
	xlCalculationManual	= 0xffffefd9,
	xlCalculationSemiautomatic	= 2
    } 	XlCalculation;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0014
    {	xlCommandUnderlinesAutomatic	= 0xffffeff7,
	xlCommandUnderlinesOff	= 0xffffefce,
	xlCommandUnderlinesOn	= 1
    } 	XlCommandUnderlines;

typedef /* [public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0015
    {	xlA1	= 1,
	xlR1C1	= 0xffffefca
    } 	XlReferenceStyle;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0016
    {	xlIBeam	= 3,
	xlDefault	= 0xffffefd1,
	xlNorthwestArrow	= 1,
	xlWait	= 2
    } 	XlMousePointer;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0017
    {	xlCopy	= 1,
	xlCut	= 2
    } 	XlCutCopyMode;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0018
    {	xlNoIndicator	= 0,
	xlCommentIndicatorOnly	= 0xffffffff,
	xlCommentAndIndicator	= 1
    } 	XlCommentDisplayMode;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0019
    {	xlDisabled	= 0,
	xlErrorHandler	= 2,
	xlInterrupt	= 1
    } 	XlEnableCancelKey;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0020
    {	xlMAPI	= 1,
	xlNoMailSystem	= 0,
	xlPowerTalk	= 2
    } 	XlMailSystem;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0021
    {	xlDown	= 0xffffefe7,
	xlToLeft	= 0xffffefc1,
	xlToRight	= 0xffffefbf,
	xlUp	= 0xffffefbe
    } 	XlDirection;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0022
    {	xlAddIn	= 18,
	xlCSV	= 6,
	xlCSVMac	= 22,
	xlCSVMSDOS	= 24,
	xlCSVWindows	= 23,
	xlDBF2	= 7,
	xlDBF3	= 8,
	xlDBF4	= 11,
	xlDIF	= 9,
	xlExcel2	= 16,
	xlExcel2FarEast	= 27,
	xlExcel3	= 29,
	xlExcel4	= 33,
	xlExcel5	= 39,
	xlExcel7	= 39,
	xlExcel9795	= 43,
	xlExcel4Workbook	= 35,
	xlIntlAddIn	= 26,
	xlIntlMacro	= 25,
	xlWorkbookNormal	= 0xffffefd1,
	xlSYLK	= 2,
	xlTemplate	= 17,
	xlCurrentPlatformText	= 0xffffefc2,
	xlTextMac	= 19,
	xlTextMSDOS	= 21,
	xlTextPrinter	= 36,
	xlTextWindows	= 20,
	xlWJ2WD1	= 14,
	xlWK1	= 5,
	xlWK1ALL	= 31,
	xlWK1FMT	= 30,
	xlWK3	= 15,
	xlWK4	= 38,
	xlWK3FM3	= 32,
	xlWKS	= 4,
	xlWorks2FarEast	= 28,
	xlWQ1	= 34,
	xlWJ3	= 40,
	xlWJ3FJ3	= 41,
	xlUnicodeText	= 42,
	xlHtml	= 44,
	xlWebArchive	= 45,
	xlXMLSpreadsheet	= 46,
	xlExcel12	= 50,
	xlOpenXMLWorkbook	= 51,
	xlOpenXMLWorkbookMacroEnabled	= 52,
	xlOpenXMLTemplateMacroEnabled	= 53,
	xlTemplate8	= 17,
	xlOpenXMLTemplate	= 54,
	xlAddIn8	= 18,
	xlOpenXMLAddIn	= 55,
	xlExcel8	= 56,
	xlWorkbookDefault	= 51
    } 	XlFileFormat;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0023
    {	xlMaximized	= 0xffffefd7,
	xlMinimized	= 0xffffefd4,
	xlNormal	= 0xffffefd1
    } 	XlWindowState;

typedef /* [public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0024
    {	xlTextQualifierDoubleQuote	= 1,
	xlTextQualifierNone	= 0xffffefd2,
	xlTextQualifierSingleQuote	= 2
    } 	XlTextQualifier;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0025
    {	xlReadOnly	= 3,
	xlReadWrite	= 2
    } 	XlFileAccess;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0026
    {	xlLinkTypeExcelLinks	= 1,
	xlLinkTypeOLELinks	= 2
    } 	XlLinkType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0027
    {	xlLocalSessionChanges	= 2,
	xlOtherSessionChanges	= 3,
	xlUserResolution	= 1
    } 	XlSaveConflictResolution;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0028
    {	xlDisplayShapes	= 0xffffeff8,
	xlHide	= 3,
	xlPlaceholders	= 2
    } 	XlDisplayDrawingObjects;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0029
    {	xlEditionDate	= 2,
	xlUpdateState	= 1,
	xlLinkInfoStatus	= 3
    } 	XlLinkInfo;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0030
    {	xlAutoActivate	= 3,
	xlAutoClose	= 2,
	xlAutoDeactivate	= 4,
	xlAutoOpen	= 1
    } 	XlRunAutoMacro;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0031
    {	xlExclusive	= 3,
	xlNoChange	= 1,
	xlShared	= 2
    } 	XlSaveAsAccessMode;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0032
    {	xlPriorityHigh	= 0xffffefe1,
	xlPriorityLow	= 0xffffefda,
	xlPriorityNormal	= 0xffffefd1
    } 	XlPriority;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0033
    {	xlUpdateLinksUserSetting	= 1,
	xlUpdateLinksNever	= 2,
	xlUpdateLinksAlways	= 3
    } 	XlUpdateLinks;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0034
    {	xlRDIComments	= 1,
	xlRDIRemovePersonalInformation	= 4,
	xlRDIEmailHeader	= 5,
	xlRDIRoutingSlip	= 6,
	xlRDISendForReview	= 7,
	xlRDIDocumentProperties	= 8,
	xlRDIDocumentWorkspace	= 10,
	xlRDIInkAnnotations	= 11,
	xlRDIScenarioComments	= 12,
	xlRDIPublishInfo	= 13,
	xlRDIDocumentServerProperties	= 14,
	xlRDIDocumentManagementPolicy	= 15,
	xlRDIContentType	= 16,
	xlRDIDefinedNameComments	= 18,
	xlRDIInactiveDataConnections	= 19,
	xlRDIPrinterPath	= 20,
	xlRDIAll	= 99
    } 	XlRemoveDocInfoType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0035
    {	xlTypePDF	= 0,
	xlTypeXPS	= 1
    } 	XlFixedFormatType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0036
    {	xlScenario	= 4,
	xlConsolidation	= 3,
	xlDatabase	= 1,
	xlExternal	= 2,
	xlPivotTable	= 0xffffefcc
    } 	XlPivotTableSourceType;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0037
    {	xlFillWithAll	= 0xffffeff8,
	xlFillWithContents	= 2,
	xlFillWithFormats	= 0xffffefe6
    } 	XlFillWith;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0038
    {	xlCommand	= 2,
	xlFunction	= 1,
	xlNotXLM	= 3
    } 	XlXLMMacroType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0039
    {	xlInsideHorizontal	= 12,
	xlInsideVertical	= 11,
	xlDiagonalDown	= 5,
	xlDiagonalUp	= 6,
	xlEdgeBottom	= 9,
	xlEdgeLeft	= 7,
	xlEdgeRight	= 10,
	xlEdgeTop	= 8
    } 	XlBordersIndex;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0040
    {	xlSummaryAbove	= 0,
	xlSummaryBelow	= 1
    } 	XlSummaryRow;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0041
    {	xlSummaryOnLeft	= 0xffffefdd,
	xlSummaryOnRight	= 0xffffefc8
    } 	XlSummaryColumn;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0042
    {	xlFitToPage	= 2,
	xlFullPage	= 3,
	xlScreenSize	= 1
    } 	XlObjectSize;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0043
    {	xlDownThenOver	= 1,
	xlOverThenDown	= 2
    } 	XlOrder;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0044
    {	xlLandscape	= 2,
	xlPortrait	= 1
    } 	XlPageOrientation;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0045
    {	xlPaper10x14	= 16,
	xlPaper11x17	= 17,
	xlPaperA3	= 8,
	xlPaperA4	= 9,
	xlPaperA4Small	= 10,
	xlPaperA5	= 11,
	xlPaperB4	= 12,
	xlPaperB5	= 13,
	xlPaperCsheet	= 24,
	xlPaperDsheet	= 25,
	xlPaperEnvelope10	= 20,
	xlPaperEnvelope11	= 21,
	xlPaperEnvelope12	= 22,
	xlPaperEnvelope14	= 23,
	xlPaperEnvelope9	= 19,
	xlPaperEnvelopeB4	= 33,
	xlPaperEnvelopeB5	= 34,
	xlPaperEnvelopeB6	= 35,
	xlPaperEnvelopeC3	= 29,
	xlPaperEnvelopeC4	= 30,
	xlPaperEnvelopeC5	= 28,
	xlPaperEnvelopeC6	= 31,
	xlPaperEnvelopeC65	= 32,
	xlPaperEnvelopeDL	= 27,
	xlPaperEnvelopeItaly	= 36,
	xlPaperEnvelopeMonarch	= 37,
	xlPaperEnvelopePersonal	= 38,
	xlPaperEsheet	= 26,
	xlPaperExecutive	= 7,
	xlPaperFanfoldLegalGerman	= 41,
	xlPaperFanfoldStdGerman	= 40,
	xlPaperFanfoldUS	= 39,
	xlPaperFolio	= 14,
	xlPaperLedger	= 4,
	xlPaperLegal	= 5,
	xlPaperLetter	= 1,
	xlPaperLetterSmall	= 2,
	xlPaperNote	= 18,
	xlPaperQuarto	= 15,
	xlPaperStatement	= 6,
	xlPaperTabloid	= 3,
	xlPaperUser	= 256
    } 	XlPaperSize;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0046
    {	xlPrintSheetEnd	= 1,
	xlPrintInPlace	= 16,
	xlPrintNoComments	= 0xffffefd2
    } 	XlPrintLocation;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0047
    {	xlPrintErrorsDisplayed	= 0,
	xlPrintErrorsBlank	= 1,
	xlPrintErrorsDash	= 2,
	xlPrintErrorsNA	= 3
    } 	XlPrintErrors;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0048
    {	xlThemeFontNone	= 0,
	xlThemeFontMajor	= 1,
	xlThemeFontMinor	= 2
    } 	XlThemeFont;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0049
    {	xlFilterCopy	= 2,
	xlFilterInPlace	= 1
    } 	XlFilterAction;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0050
    {	xlColumnThenRow	= 2,
	xlRowThenColumn	= 1
    } 	XlApplyNamesOrder;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0051
    {	xlFillCopy	= 1,
	xlFillDays	= 5,
	xlFillDefault	= 0,
	xlFillFormats	= 3,
	xlFillMonths	= 7,
	xlFillSeries	= 2,
	xlFillValues	= 4,
	xlFillWeekdays	= 6,
	xlFillYears	= 8,
	xlGrowthTrend	= 10,
	xlLinearTrend	= 9
    } 	XlAutoFillType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0052
    {	xlAnd	= 1,
	xlBottom10Items	= 4,
	xlBottom10Percent	= 6,
	xlOr	= 2,
	xlTop10Items	= 3,
	xlTop10Percent	= 5,
	xlFilterValues	= 7,
	xlFilterCellColor	= 8,
	xlFilterFontColor	= 9,
	xlFilterIcon	= 10,
	xlFilterDynamic	= 11,
	xlFilterNoFill	= 12,
	xlFilterAutomaticFontColor	= 13,
	xlFilterNoIcon	= 14
    } 	XlAutoFilterOperator;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0053
    {	xlRangeAutoFormat3DEffects1	= 13,
	xlRangeAutoFormat3DEffects2	= 14,
	xlRangeAutoFormatAccounting1	= 4,
	xlRangeAutoFormatAccounting2	= 5,
	xlRangeAutoFormatAccounting3	= 6,
	xlRangeAutoFormatAccounting4	= 17,
	xlRangeAutoFormatClassic1	= 1,
	xlRangeAutoFormatClassic2	= 2,
	xlRangeAutoFormatClassic3	= 3,
	xlRangeAutoFormatColor1	= 7,
	xlRangeAutoFormatColor2	= 8,
	xlRangeAutoFormatColor3	= 9,
	xlRangeAutoFormatList1	= 10,
	xlRangeAutoFormatList2	= 11,
	xlRangeAutoFormatList3	= 12,
	xlRangeAutoFormatLocalFormat1	= 15,
	xlRangeAutoFormatLocalFormat2	= 16,
	xlRangeAutoFormatLocalFormat3	= 19,
	xlRangeAutoFormatLocalFormat4	= 20,
	xlRangeAutoFormatReport1	= 21,
	xlRangeAutoFormatReport2	= 22,
	xlRangeAutoFormatReport3	= 23,
	xlRangeAutoFormatReport4	= 24,
	xlRangeAutoFormatReport5	= 25,
	xlRangeAutoFormatReport6	= 26,
	xlRangeAutoFormatReport7	= 27,
	xlRangeAutoFormatReport8	= 28,
	xlRangeAutoFormatReport9	= 29,
	xlRangeAutoFormatReport10	= 30,
	xlRangeAutoFormatClassicPivotTable	= 31,
	xlRangeAutoFormatTable1	= 32,
	xlRangeAutoFormatTable2	= 33,
	xlRangeAutoFormatTable3	= 34,
	xlRangeAutoFormatTable4	= 35,
	xlRangeAutoFormatTable5	= 36,
	xlRangeAutoFormatTable6	= 37,
	xlRangeAutoFormatTable7	= 38,
	xlRangeAutoFormatTable8	= 39,
	xlRangeAutoFormatTable9	= 40,
	xlRangeAutoFormatTable10	= 41,
	xlRangeAutoFormatPTNone	= 42,
	xlRangeAutoFormatNone	= 0xffffefd2,
	xlRangeAutoFormatSimple	= 0xffffefc6
    } 	XlRangeAutoFormat;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0054
    {	xlHairline	= 1,
	xlMedium	= 0xffffefd6,
	xlThick	= 4,
	xlThin	= 2
    } 	XlBorderWeight;

typedef /* [public][uuid] */  DECLSPEC_UUID("9B1665EA-5EA9-4D9B-9B61-D6D1E7C087E2") 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0055
    {	xlUnderlineStyleDouble	= 0xffffefe9,
	xlUnderlineStyleDoubleAccounting	= 5,
	xlUnderlineStyleNone	= 0xffffefd2,
	xlUnderlineStyleSingle	= 2,
	xlUnderlineStyleSingleAccounting	= 4
    } 	XlUnderlineStyle;

typedef /* [public][public][public][uuid] */  DECLSPEC_UUID("F6BA0ED9-B530-466E-83D5-325653CC1068") 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0056
    {	xlColorIndexAutomatic	= 0xffffeff7,
	xlColorIndexNone	= 0xffffefd2
    } 	XlColorIndex;

typedef /* [public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0057
    {	xlPrinter	= 2,
	xlScreen	= 1
    } 	XlPictureAppearance;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0058
    {	xlBitmap	= 2,
	xlPicture	= 0xffffefcd
    } 	XlCopyPictureFormat;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0059
    {	xlAutoFill	= 4,
	xlChronological	= 3,
	xlGrowth	= 2,
	xlDataSeriesLinear	= 0xffffefdc
    } 	XlDataSeriesType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0060
    {	xlDay	= 1,
	xlMonth	= 3,
	xlWeekday	= 2,
	xlYear	= 4
    } 	XlDataSeriesDate;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0061
    {	xlPublisher	= 1,
	xlSubscriber	= 2
    } 	XlEditionType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0062
    {	xlAutomaticUpdate	= 4,
	xlCancel	= 1,
	xlChangeAttributes	= 6,
	xlManualUpdate	= 5,
	xlOpenSource	= 3,
	xlSelect	= 3,
	xlSendPublisher	= 2,
	xlUpdateSubscriber	= 2
    } 	XlEditionOptionsOption;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0063
    {	xlNext	= 1,
	xlPrevious	= 2
    } 	XlSearchDirection;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0064
    {	xlNoLabels	= 0xffffefd2,
	xlRowLabels	= 1,
	xlColumnLabels	= 2,
	xlMixedLabels	= 3
    } 	XlFormulaLabel;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0065
    {	xlColumnHeader	= 0xffffeff2,
	xlColumnItem	= 5,
	xlDataHeader	= 3,
	xlDataItem	= 7,
	xlPageHeader	= 2,
	xlPageItem	= 6,
	xlRowHeader	= 0xffffefc7,
	xlRowItem	= 4,
	xlTableBody	= 8
    } 	XlLocationInTable;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0066
    {	xlPasteAll	= 0xffffeff8,
	xlPasteAllUsingSourceTheme	= 13,
	xlPasteAllExceptBorders	= 7,
	xlPasteFormats	= 0xffffefe6,
	xlPasteFormulas	= 0xffffefe5,
	xlPasteComments	= 0xffffefd0,
	xlPasteValues	= 0xffffefbd,
	xlPasteColumnWidths	= 8,
	xlPasteValidation	= 6,
	xlPasteFormulasAndNumberFormats	= 11,
	xlPasteValuesAndNumberFormats	= 12
    } 	XlPasteType;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0067
    {	xlPasteSpecialOperationAdd	= 2,
	xlPasteSpecialOperationDivide	= 5,
	xlPasteSpecialOperationMultiply	= 4,
	xlPasteSpecialOperationNone	= 0xffffefd2,
	xlPasteSpecialOperationSubtract	= 3
    } 	XlPasteSpecialOperation;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0068
    {	xlAscending	= 1,
	xlDescending	= 2
    } 	XlSortOrder;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0069
    {	xlGuess	= 0,
	xlNo	= 2,
	xlYes	= 1
    } 	XlYesNoGuess;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0070
    {	xlSortRows	= 2,
	xlSortColumns	= 1
    } 	XlSortOrientation;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0071
    {	xlPinYin	= 1,
	xlStroke	= 2
    } 	XlSortMethod;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0072
    {	xlSortNormal	= 0,
	xlSortTextAsNumbers	= 1
    } 	XlSortDataOption;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0073
    {	xlCellTypeBlanks	= 4,
	xlCellTypeConstants	= 2,
	xlCellTypeFormulas	= 0xffffefe5,
	xlCellTypeLastCell	= 11,
	xlCellTypeComments	= 0xffffefd0,
	xlCellTypeVisible	= 12,
	xlCellTypeAllFormatConditions	= 0xffffefb4,
	xlCellTypeSameFormatConditions	= 0xffffefb3,
	xlCellTypeAllValidation	= 0xffffefb2,
	xlCellTypeSameValidation	= 0xffffefb1
    } 	XlCellType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0074
    {	xlSubscribeToPicture	= 0xffffefcd,
	xlSubscribeToText	= 0xffffefc2
    } 	XlSubscribeToFormat;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0075
    {	xlAverage	= 0xffffeff6,
	xlCount	= 0xffffeff0,
	xlCountNums	= 0xffffefef,
	xlMax	= 0xffffefd8,
	xlMin	= 0xffffefd5,
	xlProduct	= 0xffffefcb,
	xlStDev	= 0xffffefc5,
	xlStDevP	= 0xffffefc4,
	xlSum	= 0xffffefc3,
	xlVar	= 0xffffefbc,
	xlVarP	= 0xffffefbb,
	xlUnknown	= 1000
    } 	XlConsolidationFunction;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0076
    {	xlDelimited	= 1,
	xlFixedWidth	= 2
    } 	XlTextParsingType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0077
    {	xlSheetVisible	= 0xffffffff,
	xlSheetHidden	= 0,
	xlSheetVeryHidden	= 2
    } 	XlSheetVisibility;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0078
    {	xlNoRestrictions	= 0,
	xlUnlockedCells	= 1,
	xlNoSelection	= 0xffffefd2
    } 	XlEnableSelection;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_unioffice_excel_0000_0000_0079
    {	xlChart	= 0xffffeff3,
	xlDialogSheet	= 0xffffefec,
	xlExcel4IntlMacroSheet	= 4,
	xlExcel4MacroSheet	= 3,
	xlWorksheet	= 0xffffefb9
    } 	XlSheetType;


EXTERN_C const IID LIBID_Office;

#ifndef ___Application_INTERFACE_DEFINED__
#define ___Application_INTERFACE_DEFINED__

/* interface _Application */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Application;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208D5-0000-0000-C000-000000000046")
    _Application : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveCell( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveChart( 
            /* [retval][out] */ Chart **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveDialog( 
            /* [retval][out] */ DialogSheet **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveMenuBar( 
            /* [retval][out] */ MenuBar **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActivePrinter( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ActivePrinter( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveSheet( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveWindow( 
            /* [retval][out] */ Window **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveWorkbook( 
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AddIns( 
            /* [retval][out] */ AddIns **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Assistant( 
            /* [retval][out] */ Assistant **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Calculate( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Cells( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Charts( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ CommandBars **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DDEAppReturnCode( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DDEExecute( 
            /* [in] */ long Channel,
            /* [in] */ BSTR String,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DDEInitiate( 
            /* [in] */ BSTR App,
            /* [in] */ BSTR Topic,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DDEPoke( 
            /* [in] */ long Channel,
            /* [in] */ VARIANT Item,
            /* [in] */ VARIANT Data,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DDERequest( 
            /* [in] */ long Channel,
            /* [in] */ BSTR Item,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DDETerminate( 
            /* [in] */ long Channel,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_DialogSheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Evaluate( 
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Evaluate( 
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ExecuteExcel4Macro( 
            /* [in] */ BSTR String,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Intersect( 
            /* [in] */ Range	*Arg1,
            /* [in] */ Range	*Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MenuBars( 
            /* [retval][out] */ MenuBars **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Modules( 
            /* [retval][out] */ Modules **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Names( 
            /* [retval][out] */ Names	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Range( 
            /* [in] */ VARIANT Cell1,
            /* [optional][in] */ VARIANT Cell2,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rows( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Run( 
            /* [optional][in] */ VARIANT Macro,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Run2( 
            /* [optional][in] */ VARIANT Macro,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Selection( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SendKeys( 
            /* [in] */ VARIANT Keys,
            /* [optional][in] */ VARIANT Wait,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShortcutMenus( 
            /* [in] */ long Index,
            /* [retval][out] */ Menu **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ThisWorkbook( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Toolbars( 
            /* [retval][out] */ Toolbars **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Union( 
            /* [in] */ Range	*Arg1,
            /* [in] */ Range	*Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Windows( 
            /* [retval][out] */ Windows **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Workbooks( 
            /* [retval][out] */ Workbooks **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WorksheetFunction( 
            /* [retval][out] */ WorksheetFunction **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Worksheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Excel4IntlMacroSheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Excel4MacroSheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ActivateMicrosoftApp( 
            /* [in] */ XlMSApplication Index,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE AddChartAutoFormat( 
            /* [in] */ VARIANT Chart,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Description,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddCustomList( 
            /* [in] */ VARIANT ListArray,
            /* [optional][in] */ VARIANT ByRow,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AlertBeforeOverwriting( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AlertBeforeOverwriting( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AltStartupPath( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AltStartupPath( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AskToUpdateLinks( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AskToUpdateLinks( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableAnimations( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableAnimations( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoCorrect( 
            /* [retval][out] */ AutoCorrect **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Build( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalculateBeforeSave( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CalculateBeforeSave( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Calculation( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlCalculation *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Calculation( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlCalculation RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caller( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanPlaySounds( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CanRecordSounds( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Caption( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Caption( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CellDragAndDrop( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CellDragAndDrop( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CentimetersToPoints( 
            /* [in] */ double Centimeters,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckSpelling( 
            /* [in] */ BSTR Word,
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ClipboardFormats( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayClipboardWindow( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayClipboardWindow( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_ColorButtons( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_ColorButtons( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandUnderlines( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlCommandUnderlines *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CommandUnderlines( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlCommandUnderlines RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConstrainNumeric( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConstrainNumeric( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ConvertFormula( 
            /* [in] */ VARIANT Formula,
            /* [in] */ XlReferenceStyle FromReferenceStyle,
            /* [optional][in] */ VARIANT ToReferenceStyle,
            /* [optional][in] */ VARIANT ToAbsolute,
            /* [optional][in] */ VARIANT RelativeTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CopyObjectsWithCells( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CopyObjectsWithCells( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Cursor( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlMousePointer *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Cursor( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlMousePointer RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomListCount( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CutCopyMode( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlCutCopyMode *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CutCopyMode( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlCutCopyMode RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DataEntryMode( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DataEntryMode( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy1( 
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy2( 
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy3( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy4( 
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy5( 
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy6( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy7( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy8( 
            /* [optional][in] */ VARIANT Arg1,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy9( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy10( 
            /* [optional][in] */ VARIANT arg,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy11( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__Default( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultFilePath( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultFilePath( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE DeleteChartAutoFormat( 
            /* [in] */ BSTR Name,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteCustomList( 
            /* [in] */ long ListNum,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Dialogs( 
            /* [retval][out] */ Dialogs **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayAlerts( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayAlerts( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayFormulaBar( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayFormulaBar( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayFullScreen( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayFullScreen( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayNoteIndicator( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayNoteIndicator( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayCommentIndicator( 
            /* [retval][out] */ XlCommentDisplayMode *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayCommentIndicator( 
            /* [in] */ XlCommentDisplayMode RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayExcel4Menus( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayExcel4Menus( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayRecentFiles( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayRecentFiles( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayScrollBars( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayScrollBars( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayStatusBar( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayStatusBar( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DoubleClick( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EditDirectlyInCell( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EditDirectlyInCell( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableAutoComplete( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableAutoComplete( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableCancelKey( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlEnableCancelKey *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableCancelKey( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlEnableCancelKey RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableSound( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableSound( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableTipWizard( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableTipWizard( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileConverters( 
            /* [optional][in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileSearch( 
            /* [retval][out] */ FileSearch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileFind( 
            /* [retval][out] */ IFind **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _FindFile( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FixedDecimal( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FixedDecimal( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FixedDecimalPlaces( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FixedDecimalPlaces( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCustomListContents( 
            /* [in] */ long ListNum,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetCustomListNum( 
            /* [in] */ VARIANT ListArray,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetOpenFilename( 
            /* [optional][in] */ VARIANT FileFilter,
            /* [optional][in] */ VARIANT FilterIndex,
            /* [optional][in] */ VARIANT Title,
            /* [optional][in] */ VARIANT ButtonText,
            /* [optional][in] */ VARIANT MultiSelect,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetSaveAsFilename( 
            /* [optional][in] */ VARIANT InitialFilename,
            /* [optional][in] */ VARIANT FileFilter,
            /* [optional][in] */ VARIANT FilterIndex,
            /* [optional][in] */ VARIANT Title,
            /* [optional][in] */ VARIANT ButtonText,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Goto( 
            /* [optional][in] */ VARIANT Reference,
            /* [optional][in] */ VARIANT Scroll,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Height( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Height( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Help( 
            /* [optional][in] */ VARIANT HelpFile,
            /* [optional][in] */ VARIANT HelpContextID,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IgnoreRemoteRequests( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IgnoreRemoteRequests( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE InchesToPoints( 
            /* [in] */ double Inches,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE InputBox( 
            /* [in] */ BSTR Prompt,
            /* [optional][in] */ VARIANT Title,
            /* [optional][in] */ VARIANT Default,
            /* [optional][in] */ VARIANT Left,
            /* [optional][in] */ VARIANT Top,
            /* [optional][in] */ VARIANT HelpFile,
            /* [optional][in] */ VARIANT HelpContextID,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Interactive( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Interactive( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_International( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Iteration( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Iteration( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_LargeButtons( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_LargeButtons( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Left( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Left( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LibraryPath( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MacroOptions( 
            /* [optional][in] */ VARIANT Macro,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT HasMenu,
            /* [optional][in] */ VARIANT MenuText,
            /* [optional][in] */ VARIANT HasShortcutKey,
            /* [optional][in] */ VARIANT ShortcutKey,
            /* [optional][in] */ VARIANT Category,
            /* [optional][in] */ VARIANT StatusBar,
            /* [optional][in] */ VARIANT HelpContextID,
            /* [optional][in] */ VARIANT HelpFile,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MailLogoff( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MailLogon( 
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT DownloadNewMail,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailSession( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailSystem( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlMailSystem *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MathCoprocessorAvailable( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxChange( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxChange( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MaxIterations( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MaxIterations( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MemoryFree( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MemoryTotal( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_MemoryUsed( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MouseAvailable( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveAfterReturn( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MoveAfterReturn( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MoveAfterReturnDirection( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlDirection *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MoveAfterReturnDirection( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlDirection RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecentFiles( 
            /* [retval][out] */ RecentFiles **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE NextLetter( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NetworkTemplatesPath( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ODBCErrors( 
            /* [retval][out] */ ODBCErrors **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ODBCTimeout( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ODBCTimeout( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnCalculate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnCalculate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnData( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnData( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnDoubleClick( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnDoubleClick( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnEntry( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnEntry( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OnKey( 
            /* [in] */ BSTR Key,
            /* [optional][in] */ VARIANT Procedure,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OnRepeat( 
            /* [in] */ BSTR Text,
            /* [in] */ BSTR Procedure,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSheetActivate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSheetActivate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSheetDeactivate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSheetDeactivate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OnTime( 
            /* [in] */ VARIANT EarliestTime,
            /* [in] */ BSTR Procedure,
            /* [optional][in] */ VARIANT LatestTime,
            /* [optional][in] */ VARIANT Schedule,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OnUndo( 
            /* [in] */ BSTR Text,
            /* [in] */ BSTR Procedure,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnWindow( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnWindow( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OperatingSystem( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OrganizationName( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PathSeparator( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PreviousSelections( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PivotTableSelection( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PivotTableSelection( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PromptForSummaryInfo( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PromptForSummaryInfo( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Quit( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RecordMacro( 
            /* [optional][in] */ VARIANT BasicCode,
            /* [optional][in] */ VARIANT XlmCode,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RecordRelative( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReferenceStyle( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlReferenceStyle *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReferenceStyle( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlReferenceStyle RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RegisteredFunctions( 
            /* [optional][in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RegisterXLL( 
            /* [in] */ BSTR Filename,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Repeat( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ResetTipWizard( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RollZoom( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RollZoom( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [optional][in] */ VARIANT Filename,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveWorkspace( 
            /* [optional][in] */ VARIANT Filename,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScreenUpdating( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScreenUpdating( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE SetDefaultChart( 
            /* [optional][in] */ VARIANT FormatName,
            /* [optional][in] */ VARIANT Gallery) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SheetsInNewWorkbook( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SheetsInNewWorkbook( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowChartTipNames( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowChartTipNames( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowChartTipValues( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowChartTipValues( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardFont( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StandardFont( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardFontSize( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StandardFontSize( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StartupPath( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StatusBar( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StatusBar( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TemplatesPath( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowToolTips( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowToolTips( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Top( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Top( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultSaveFormat( 
            /* [retval][out] */ XlFileFormat *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultSaveFormat( 
            /* [in] */ XlFileFormat RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransitionMenuKey( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TransitionMenuKey( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransitionMenuKeyAction( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TransitionMenuKeyAction( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransitionNavigKeys( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TransitionNavigKeys( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Undo( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UsableHeight( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UsableWidth( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserControl( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UserControl( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserName( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UserName( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VBE( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Volatile( 
            /* [optional][in] */ VARIANT Volatile,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Wait( 
            /* [in] */ VARIANT Time,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Width( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Width( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowsForPens( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WindowState( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlWindowState *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WindowState( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlWindowState RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_UILanguage( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_UILanguage( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultSheetDirection( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultSheetDirection( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CursorMovement( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CursorMovement( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ControlCharacters( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ControlCharacters( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _WSFunction( 
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableEvents( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableEvents( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayInfoWindow( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayInfoWindow( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Wait( 
            /* [in] */ VARIANT Time,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ExtendList( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ExtendList( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_OLEDBErrors( 
            /* [retval][out] */ OLEDBErrors **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetPhonetic( 
            /* [optional][in] */ VARIANT Text,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_COMAddIns( 
            /* [retval][out] */ COMAddIns **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultWebOptions( 
            /* [retval][out] */ DefaultWebOptions **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProductCode( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserLibraryPath( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoPercentEntry( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoPercentEntry( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageSettings( 
            /* [retval][out] */ LanguageSettings **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Dummy101( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy12( 
            /* [in] */ PivotTable *p1,
            /* [in] */ PivotTable *p2) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AnswerWizard( 
            /* [retval][out] */ AnswerWizard **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CalculateFull( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FindFile( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalculationVersion( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowWindowsInTaskbar( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowWindowsInTaskbar( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FeatureInstall( 
            /* [retval][out] */ MsoFeatureInstall *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FeatureInstall( 
            /* [in] */ MsoFeatureInstall RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Ready( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy13( 
            /* [in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FindFormat( 
            /* [retval][out] */ CellFormat **RHS) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_FindFormat( 
            /* [in] */ CellFormat *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReplaceFormat( 
            /* [retval][out] */ CellFormat **RHS) = 0;
        
        virtual /* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE putref_ReplaceFormat( 
            /* [in] */ CellFormat *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UsedObjects( 
            /* [retval][out] */ UsedObjects **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalculationState( 
            /* [retval][out] */ XlCalculationState *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalculationInterruptKey( 
            /* [retval][out] */ XlCalculationInterruptKey *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CalculationInterruptKey( 
            /* [in] */ XlCalculationInterruptKey RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Watches( 
            /* [retval][out] */ Watches **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayFunctionToolTips( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayFunctionToolTips( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutomationSecurity( 
            /* [retval][out] */ MsoAutomationSecurity *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutomationSecurity( 
            /* [in] */ MsoAutomationSecurity RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileDialog( 
            /* [in] */ MsoFileDialogType fileDialogType,
            /* [retval][out] */ FileDialog **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy14( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CalculateFullRebuild( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayPasteOptions( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayPasteOptions( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayInsertOptions( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayInsertOptions( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GenerateGetPivotData( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_GenerateGetPivotData( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoRecover( 
            /* [retval][out] */ AutoRecover **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hwnd( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hinstance( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckAbort( 
            /* [optional][in] */ VARIANT KeepAbort) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ErrorCheckingOptions( 
            /* [retval][out] */ ErrorCheckingOptions **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFormatAsYouTypeReplaceHyperlinks( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoFormatAsYouTypeReplaceHyperlinks( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SmartTagRecognizers( 
            /* [retval][out] */ SmartTagRecognizers **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_NewWorkbook( 
            /* [retval][out] */ NewFile **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SpellingOptions( 
            /* [retval][out] */ SpellingOptions **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Speech( 
            /* [retval][out] */ Speech **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MapPaperSize( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MapPaperSize( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowStartupDialog( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowStartupDialog( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DecimalSeparator( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DecimalSeparator( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ThousandsSeparator( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ThousandsSeparator( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UseSystemSeparators( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UseSystemSeparators( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ThisCell( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RTD( 
            /* [retval][out] */ RTD **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayDocumentActionTaskPane( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayDocumentActionTaskPane( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DisplayXMLSourcePane( 
            /* [optional][in] */ VARIANT XmlMap) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ArbitraryXMLSupportAvailable( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Support( 
            /* [in] */ IDispatch *Object,
            /* [in] */ long ID,
            /* [optional][in] */ VARIANT arg,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy20( 
            /* [in] */ long grfCompareFunctions,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MeasurementUnit( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_MeasurementUnit( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowSelectionFloaties( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowSelectionFloaties( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowMenuFloaties( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowMenuFloaties( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowDevTools( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowDevTools( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableLivePreview( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableLivePreview( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayDocumentInformationPanel( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayDocumentInformationPanel( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AlwaysUseClearType( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AlwaysUseClearType( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WarnOnFunctionNameConflict( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WarnOnFunctionNameConflict( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FormulaBarHeight( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_FormulaBarHeight( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayFormulaAutoComplete( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayFormulaAutoComplete( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_GenerateTableRefs( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlGenerateTableRefs *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_GenerateTableRefs( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlGenerateTableRefs RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Assistance( 
            /* [retval][out] */ IAssistance **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CalculateUntilAsyncQueriesDone( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableLargeOperationAlert( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableLargeOperationAlert( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_LargeOperationCellThousandCount( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_LargeOperationCellThousandCount( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DeferAsyncQueries( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DeferAsyncQueries( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiThreadedCalculation( 
            /* [retval][out] */ MultiThreadedCalculation **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SharePointVersion( 
            /* [in] */ BSTR bstrUrl,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveEncryptionSession( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HighQualityModeForGraphics( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HighQualityModeForGraphics( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _ApplicationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Application * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Application * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Application * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Application * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Application * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Application * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Application * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Application * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _Application * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Application * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveCell )( 
            _Application * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveChart )( 
            _Application * This,
            /* [retval][out] */ Chart **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveDialog )( 
            _Application * This,
            /* [retval][out] */ DialogSheet **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveMenuBar )( 
            _Application * This,
            /* [retval][out] */ MenuBar **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActivePrinter )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ActivePrinter )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSheet )( 
            _Application * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveWindow )( 
            _Application * This,
            /* [retval][out] */ Window **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveWorkbook )( 
            _Application * This,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddIns )( 
            _Application * This,
            /* [retval][out] */ AddIns **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Assistant )( 
            _Application * This,
            /* [retval][out] */ Assistant **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Calculate )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Cells )( 
            _Application * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Charts )( 
            _Application * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            _Application * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            _Application * This,
            /* [retval][out] */ CommandBars **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DDEAppReturnCode )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DDEExecute )( 
            _Application * This,
            /* [in] */ long Channel,
            /* [in] */ BSTR String,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DDEInitiate )( 
            _Application * This,
            /* [in] */ BSTR App,
            /* [in] */ BSTR Topic,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DDEPoke )( 
            _Application * This,
            /* [in] */ long Channel,
            /* [in] */ VARIANT Item,
            /* [in] */ VARIANT Data,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DDERequest )( 
            _Application * This,
            /* [in] */ long Channel,
            /* [in] */ BSTR Item,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DDETerminate )( 
            _Application * This,
            /* [in] */ long Channel,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DialogSheets )( 
            _Application * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Evaluate )( 
            _Application * This,
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *_Evaluate )( 
            _Application * This,
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ExecuteExcel4Macro )( 
            _Application * This,
            /* [in] */ BSTR String,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Intersect )( 
            _Application * This,
            /* [in] */ Range	*Arg1,
            /* [in] */ Range	*Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MenuBars )( 
            _Application * This,
            /* [retval][out] */ MenuBars **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Modules )( 
            _Application * This,
            /* [retval][out] */ Modules **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Names )( 
            _Application * This,
            /* [retval][out] */ Names	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Range )( 
            _Application * This,
            /* [in] */ VARIANT Cell1,
            /* [optional][in] */ VARIANT Cell2,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rows )( 
            _Application * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Run )( 
            _Application * This,
            /* [optional][in] */ VARIANT Macro,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *_Run2 )( 
            _Application * This,
            /* [optional][in] */ VARIANT Macro,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Selection )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SendKeys )( 
            _Application * This,
            /* [in] */ VARIANT Keys,
            /* [optional][in] */ VARIANT Wait,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sheets )( 
            _Application * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShortcutMenus )( 
            _Application * This,
            /* [in] */ long Index,
            /* [retval][out] */ Menu **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ThisWorkbook )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Toolbars )( 
            _Application * This,
            /* [retval][out] */ Toolbars **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Union )( 
            _Application * This,
            /* [in] */ Range	*Arg1,
            /* [in] */ Range	*Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Windows )( 
            _Application * This,
            /* [retval][out] */ Windows **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Workbooks )( 
            _Application * This,
            /* [retval][out] */ Workbooks **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WorksheetFunction )( 
            _Application * This,
            /* [retval][out] */ WorksheetFunction **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Worksheets )( 
            _Application * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Excel4IntlMacroSheets )( 
            _Application * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Excel4MacroSheets )( 
            _Application * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ActivateMicrosoftApp )( 
            _Application * This,
            /* [in] */ XlMSApplication Index,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *AddChartAutoFormat )( 
            _Application * This,
            /* [in] */ VARIANT Chart,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Description,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddCustomList )( 
            _Application * This,
            /* [in] */ VARIANT ListArray,
            /* [optional][in] */ VARIANT ByRow,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlertBeforeOverwriting )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlertBeforeOverwriting )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AltStartupPath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AltStartupPath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AskToUpdateLinks )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AskToUpdateLinks )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableAnimations )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableAnimations )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoCorrect )( 
            _Application * This,
            /* [retval][out] */ AutoCorrect **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Build )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalculateBeforeSave )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CalculateBeforeSave )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Calculation )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlCalculation *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Calculation )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlCalculation RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caller )( 
            _Application * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanPlaySounds )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanRecordSounds )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Caption )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Caption )( 
            _Application * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CellDragAndDrop )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CellDragAndDrop )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CentimetersToPoints )( 
            _Application * This,
            /* [in] */ double Centimeters,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSpelling )( 
            _Application * This,
            /* [in] */ BSTR Word,
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ClipboardFormats )( 
            _Application * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayClipboardWindow )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayClipboardWindow )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ColorButtons )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ColorButtons )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandUnderlines )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlCommandUnderlines *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CommandUnderlines )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlCommandUnderlines RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConstrainNumeric )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConstrainNumeric )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ConvertFormula )( 
            _Application * This,
            /* [in] */ VARIANT Formula,
            /* [in] */ XlReferenceStyle FromReferenceStyle,
            /* [optional][in] */ VARIANT ToReferenceStyle,
            /* [optional][in] */ VARIANT ToAbsolute,
            /* [optional][in] */ VARIANT RelativeTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CopyObjectsWithCells )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CopyObjectsWithCells )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Cursor )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlMousePointer *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Cursor )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlMousePointer RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomListCount )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CutCopyMode )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlCutCopyMode *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CutCopyMode )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlCutCopyMode RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DataEntryMode )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DataEntryMode )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy1 )( 
            _Application * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy2 )( 
            _Application * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy3 )( 
            _Application * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy4 )( 
            _Application * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy5 )( 
            _Application * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy6 )( 
            _Application * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy7 )( 
            _Application * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy8 )( 
            _Application * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy9 )( 
            _Application * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy10 )( 
            _Application * This,
            /* [optional][in] */ VARIANT arg,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy11 )( 
            _Application * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__Default )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultFilePath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultFilePath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteChartAutoFormat )( 
            _Application * This,
            /* [in] */ BSTR Name,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteCustomList )( 
            _Application * This,
            /* [in] */ long ListNum,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Dialogs )( 
            _Application * This,
            /* [retval][out] */ Dialogs **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayAlerts )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayAlerts )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayFormulaBar )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayFormulaBar )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayFullScreen )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayFullScreen )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayNoteIndicator )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayNoteIndicator )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayCommentIndicator )( 
            _Application * This,
            /* [retval][out] */ XlCommentDisplayMode *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayCommentIndicator )( 
            _Application * This,
            /* [in] */ XlCommentDisplayMode RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayExcel4Menus )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayExcel4Menus )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayRecentFiles )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayRecentFiles )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayScrollBars )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayScrollBars )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayStatusBar )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayStatusBar )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DoubleClick )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EditDirectlyInCell )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EditDirectlyInCell )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableAutoComplete )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableAutoComplete )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableCancelKey )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlEnableCancelKey *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableCancelKey )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlEnableCancelKey RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableSound )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableSound )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableTipWizard )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableTipWizard )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileConverters )( 
            _Application * This,
            /* [optional][in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileSearch )( 
            _Application * This,
            /* [retval][out] */ FileSearch **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileFind )( 
            _Application * This,
            /* [retval][out] */ IFind **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_FindFile )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FixedDecimal )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FixedDecimal )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FixedDecimalPlaces )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FixedDecimalPlaces )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomListContents )( 
            _Application * This,
            /* [in] */ long ListNum,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomListNum )( 
            _Application * This,
            /* [in] */ VARIANT ListArray,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetOpenFilename )( 
            _Application * This,
            /* [optional][in] */ VARIANT FileFilter,
            /* [optional][in] */ VARIANT FilterIndex,
            /* [optional][in] */ VARIANT Title,
            /* [optional][in] */ VARIANT ButtonText,
            /* [optional][in] */ VARIANT MultiSelect,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetSaveAsFilename )( 
            _Application * This,
            /* [optional][in] */ VARIANT InitialFilename,
            /* [optional][in] */ VARIANT FileFilter,
            /* [optional][in] */ VARIANT FilterIndex,
            /* [optional][in] */ VARIANT Title,
            /* [optional][in] */ VARIANT ButtonText,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Goto )( 
            _Application * This,
            /* [optional][in] */ VARIANT Reference,
            /* [optional][in] */ VARIANT Scroll,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Height )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Height )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Help )( 
            _Application * This,
            /* [optional][in] */ VARIANT HelpFile,
            /* [optional][in] */ VARIANT HelpContextID,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IgnoreRemoteRequests )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IgnoreRemoteRequests )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *InchesToPoints )( 
            _Application * This,
            /* [in] */ double Inches,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *InputBox )( 
            _Application * This,
            /* [in] */ BSTR Prompt,
            /* [optional][in] */ VARIANT Title,
            /* [optional][in] */ VARIANT Default,
            /* [optional][in] */ VARIANT Left,
            /* [optional][in] */ VARIANT Top,
            /* [optional][in] */ VARIANT HelpFile,
            /* [optional][in] */ VARIANT HelpContextID,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Interactive )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Interactive )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_International )( 
            _Application * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Iteration )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Iteration )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LargeButtons )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LargeButtons )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Left )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Left )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LibraryPath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MacroOptions )( 
            _Application * This,
            /* [optional][in] */ VARIANT Macro,
            /* [optional][in] */ VARIANT Description,
            /* [optional][in] */ VARIANT HasMenu,
            /* [optional][in] */ VARIANT MenuText,
            /* [optional][in] */ VARIANT HasShortcutKey,
            /* [optional][in] */ VARIANT ShortcutKey,
            /* [optional][in] */ VARIANT Category,
            /* [optional][in] */ VARIANT StatusBar,
            /* [optional][in] */ VARIANT HelpContextID,
            /* [optional][in] */ VARIANT HelpFile,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MailLogoff )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MailLogon )( 
            _Application * This,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT DownloadNewMail,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailSession )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailSystem )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlMailSystem *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MathCoprocessorAvailable )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxChange )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxChange )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MaxIterations )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MaxIterations )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MemoryFree )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MemoryTotal )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MemoryUsed )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MouseAvailable )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MoveAfterReturn )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MoveAfterReturn )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MoveAfterReturnDirection )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlDirection *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MoveAfterReturnDirection )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlDirection RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecentFiles )( 
            _Application * This,
            /* [retval][out] */ RecentFiles **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NextLetter )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NetworkTemplatesPath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ODBCErrors )( 
            _Application * This,
            /* [retval][out] */ ODBCErrors **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ODBCTimeout )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ODBCTimeout )( 
            _Application * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnCalculate )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnCalculate )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnData )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnData )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnDoubleClick )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnDoubleClick )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnEntry )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnEntry )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OnKey )( 
            _Application * This,
            /* [in] */ BSTR Key,
            /* [optional][in] */ VARIANT Procedure,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OnRepeat )( 
            _Application * This,
            /* [in] */ BSTR Text,
            /* [in] */ BSTR Procedure,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSheetActivate )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSheetActivate )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSheetDeactivate )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSheetDeactivate )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OnTime )( 
            _Application * This,
            /* [in] */ VARIANT EarliestTime,
            /* [in] */ BSTR Procedure,
            /* [optional][in] */ VARIANT LatestTime,
            /* [optional][in] */ VARIANT Schedule,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OnUndo )( 
            _Application * This,
            /* [in] */ BSTR Text,
            /* [in] */ BSTR Procedure,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnWindow )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnWindow )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OperatingSystem )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OrganizationName )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PathSeparator )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PreviousSelections )( 
            _Application * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PivotTableSelection )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PivotTableSelection )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PromptForSummaryInfo )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PromptForSummaryInfo )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Quit )( 
            _Application * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RecordMacro )( 
            _Application * This,
            /* [optional][in] */ VARIANT BasicCode,
            /* [optional][in] */ VARIANT XlmCode,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RecordRelative )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReferenceStyle )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlReferenceStyle *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReferenceStyle )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlReferenceStyle RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RegisteredFunctions )( 
            _Application * This,
            /* [optional][in] */ VARIANT Index1,
            /* [optional][in] */ VARIANT Index2,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RegisterXLL )( 
            _Application * This,
            /* [in] */ BSTR Filename,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Repeat )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ResetTipWizard )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RollZoom )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RollZoom )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _Application * This,
            /* [optional][in] */ VARIANT Filename,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveWorkspace )( 
            _Application * This,
            /* [optional][in] */ VARIANT Filename,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScreenUpdating )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScreenUpdating )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *SetDefaultChart )( 
            _Application * This,
            /* [optional][in] */ VARIANT FormatName,
            /* [optional][in] */ VARIANT Gallery);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SheetsInNewWorkbook )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SheetsInNewWorkbook )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowChartTipNames )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowChartTipNames )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowChartTipValues )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowChartTipValues )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardFont )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardFont )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardFontSize )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardFontSize )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartupPath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StatusBar )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StatusBar )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TemplatesPath )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowToolTips )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowToolTips )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Top )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Top )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultSaveFormat )( 
            _Application * This,
            /* [retval][out] */ XlFileFormat *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultSaveFormat )( 
            _Application * This,
            /* [in] */ XlFileFormat RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransitionMenuKey )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransitionMenuKey )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransitionMenuKeyAction )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransitionMenuKeyAction )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransitionNavigKeys )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransitionNavigKeys )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Undo )( 
            _Application * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UsableHeight )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UsableWidth )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserControl )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserControl )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserName )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VBE )( 
            _Application * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Volatile )( 
            _Application * This,
            /* [optional][in] */ VARIANT Volatile,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_Wait )( 
            _Application * This,
            /* [in] */ VARIANT Time,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Width )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Width )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowsForPens )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WindowState )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlWindowState *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WindowState )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlWindowState RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UILanguage )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UILanguage )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultSheetDirection )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultSheetDirection )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CursorMovement )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CursorMovement )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ControlCharacters )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ControlCharacters )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_WSFunction )( 
            _Application * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableEvents )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableEvents )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayInfoWindow )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayInfoWindow )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Wait )( 
            _Application * This,
            /* [in] */ VARIANT Time,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendList )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExtendList )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OLEDBErrors )( 
            _Application * This,
            /* [retval][out] */ OLEDBErrors **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetPhonetic )( 
            _Application * This,
            /* [optional][in] */ VARIANT Text,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_COMAddIns )( 
            _Application * This,
            /* [retval][out] */ COMAddIns **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultWebOptions )( 
            _Application * This,
            /* [retval][out] */ DefaultWebOptions **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserLibraryPath )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoPercentEntry )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoPercentEntry )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageSettings )( 
            _Application * This,
            /* [retval][out] */ LanguageSettings **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Dummy101 )( 
            _Application * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy12 )( 
            _Application * This,
            /* [in] */ PivotTable *p1,
            /* [in] */ PivotTable *p2);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AnswerWizard )( 
            _Application * This,
            /* [retval][out] */ AnswerWizard **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CalculateFull )( 
            _Application * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FindFile )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalculationVersion )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowWindowsInTaskbar )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowWindowsInTaskbar )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FeatureInstall )( 
            _Application * This,
            /* [retval][out] */ MsoFeatureInstall *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FeatureInstall )( 
            _Application * This,
            /* [in] */ MsoFeatureInstall RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Ready )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy13 )( 
            _Application * This,
            /* [in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FindFormat )( 
            _Application * This,
            /* [retval][out] */ CellFormat **RHS);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_FindFormat )( 
            _Application * This,
            /* [in] */ CellFormat *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReplaceFormat )( 
            _Application * This,
            /* [retval][out] */ CellFormat **RHS);
        
        /* [helpcontext][propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_ReplaceFormat )( 
            _Application * This,
            /* [in] */ CellFormat *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UsedObjects )( 
            _Application * This,
            /* [retval][out] */ UsedObjects **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalculationState )( 
            _Application * This,
            /* [retval][out] */ XlCalculationState *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalculationInterruptKey )( 
            _Application * This,
            /* [retval][out] */ XlCalculationInterruptKey *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CalculationInterruptKey )( 
            _Application * This,
            /* [in] */ XlCalculationInterruptKey RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Watches )( 
            _Application * This,
            /* [retval][out] */ Watches **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayFunctionToolTips )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayFunctionToolTips )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutomationSecurity )( 
            _Application * This,
            /* [retval][out] */ MsoAutomationSecurity *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutomationSecurity )( 
            _Application * This,
            /* [in] */ MsoAutomationSecurity RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileDialog )( 
            _Application * This,
            /* [in] */ MsoFileDialogType fileDialogType,
            /* [retval][out] */ FileDialog **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy14 )( 
            _Application * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CalculateFullRebuild )( 
            _Application * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayPasteOptions )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayPasteOptions )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayInsertOptions )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayInsertOptions )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateGetPivotData )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateGetPivotData )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoRecover )( 
            _Application * This,
            /* [retval][out] */ AutoRecover **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hwnd )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hinstance )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckAbort )( 
            _Application * This,
            /* [optional][in] */ VARIANT KeepAbort);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorCheckingOptions )( 
            _Application * This,
            /* [retval][out] */ ErrorCheckingOptions **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFormatAsYouTypeReplaceHyperlinks )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoFormatAsYouTypeReplaceHyperlinks )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SmartTagRecognizers )( 
            _Application * This,
            /* [retval][out] */ SmartTagRecognizers **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NewWorkbook )( 
            _Application * This,
            /* [retval][out] */ NewFile **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SpellingOptions )( 
            _Application * This,
            /* [retval][out] */ SpellingOptions **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Speech )( 
            _Application * This,
            /* [retval][out] */ Speech **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MapPaperSize )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MapPaperSize )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowStartupDialog )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowStartupDialog )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DecimalSeparator )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DecimalSeparator )( 
            _Application * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ThousandsSeparator )( 
            _Application * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ThousandsSeparator )( 
            _Application * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseSystemSeparators )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseSystemSeparators )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ThisCell )( 
            _Application * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RTD )( 
            _Application * This,
            /* [retval][out] */ RTD **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayDocumentActionTaskPane )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayDocumentActionTaskPane )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DisplayXMLSourcePane )( 
            _Application * This,
            /* [optional][in] */ VARIANT XmlMap);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArbitraryXMLSupportAvailable )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Support )( 
            _Application * This,
            /* [in] */ IDispatch *Object,
            /* [in] */ long ID,
            /* [optional][in] */ VARIANT arg,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy20 )( 
            _Application * This,
            /* [in] */ long grfCompareFunctions,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MeasurementUnit )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MeasurementUnit )( 
            _Application * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowSelectionFloaties )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowSelectionFloaties )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowMenuFloaties )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowMenuFloaties )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowDevTools )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowDevTools )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableLivePreview )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableLivePreview )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayDocumentInformationPanel )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayDocumentInformationPanel )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AlwaysUseClearType )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AlwaysUseClearType )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WarnOnFunctionNameConflict )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WarnOnFunctionNameConflict )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FormulaBarHeight )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FormulaBarHeight )( 
            _Application * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayFormulaAutoComplete )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayFormulaAutoComplete )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GenerateTableRefs )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlGenerateTableRefs *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GenerateTableRefs )( 
            _Application * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlGenerateTableRefs RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Assistance )( 
            _Application * This,
            /* [retval][out] */ IAssistance **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CalculateUntilAsyncQueriesDone )( 
            _Application * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableLargeOperationAlert )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableLargeOperationAlert )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LargeOperationCellThousandCount )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LargeOperationCellThousandCount )( 
            _Application * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DeferAsyncQueries )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DeferAsyncQueries )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiThreadedCalculation )( 
            _Application * This,
            /* [retval][out] */ MultiThreadedCalculation **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SharePointVersion )( 
            _Application * This,
            /* [in] */ BSTR bstrUrl,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveEncryptionSession )( 
            _Application * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HighQualityModeForGraphics )( 
            _Application * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HighQualityModeForGraphics )( 
            _Application * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        END_INTERFACE
    } _ApplicationVtbl;

    interface _Application
    {
        CONST_VTBL struct _ApplicationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Application_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Application_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Application_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Application_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Application_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Application_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Application_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Application_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define _Application_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define _Application_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define _Application_get_ActiveCell(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveCell(This,RHS) ) 

#define _Application_get_ActiveChart(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveChart(This,RHS) ) 

#define _Application_get_ActiveDialog(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveDialog(This,RHS) ) 

#define _Application_get_ActiveMenuBar(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveMenuBar(This,RHS) ) 

#define _Application_get_ActivePrinter(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ActivePrinter(This,lcid,RHS) ) 

#define _Application_put_ActivePrinter(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_ActivePrinter(This,lcid,RHS) ) 

#define _Application_get_ActiveSheet(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveSheet(This,RHS) ) 

#define _Application_get_ActiveWindow(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveWindow(This,RHS) ) 

#define _Application_get_ActiveWorkbook(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveWorkbook(This,RHS) ) 

#define _Application_get_AddIns(This,RHS)	\
    ( (This)->lpVtbl -> get_AddIns(This,RHS) ) 

#define _Application_get_Assistant(This,RHS)	\
    ( (This)->lpVtbl -> get_Assistant(This,RHS) ) 

#define _Application_Calculate(This,lcid)	\
    ( (This)->lpVtbl -> Calculate(This,lcid) ) 

#define _Application_get_Cells(This,RHS)	\
    ( (This)->lpVtbl -> get_Cells(This,RHS) ) 

#define _Application_get_Charts(This,RHS)	\
    ( (This)->lpVtbl -> get_Charts(This,RHS) ) 

#define _Application_get_Columns(This,RHS)	\
    ( (This)->lpVtbl -> get_Columns(This,RHS) ) 

#define _Application_get_CommandBars(This,RHS)	\
    ( (This)->lpVtbl -> get_CommandBars(This,RHS) ) 

#define _Application_get_DDEAppReturnCode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DDEAppReturnCode(This,lcid,RHS) ) 

#define _Application_DDEExecute(This,Channel,String,lcid)	\
    ( (This)->lpVtbl -> DDEExecute(This,Channel,String,lcid) ) 

#define _Application_DDEInitiate(This,App,Topic,lcid,RHS)	\
    ( (This)->lpVtbl -> DDEInitiate(This,App,Topic,lcid,RHS) ) 

#define _Application_DDEPoke(This,Channel,Item,Data,lcid)	\
    ( (This)->lpVtbl -> DDEPoke(This,Channel,Item,Data,lcid) ) 

#define _Application_DDERequest(This,Channel,Item,lcid,RHS)	\
    ( (This)->lpVtbl -> DDERequest(This,Channel,Item,lcid,RHS) ) 

#define _Application_DDETerminate(This,Channel,lcid)	\
    ( (This)->lpVtbl -> DDETerminate(This,Channel,lcid) ) 

#define _Application_get_DialogSheets(This,RHS)	\
    ( (This)->lpVtbl -> get_DialogSheets(This,RHS) ) 

#define _Application_Evaluate(This,Name,lcid,RHS)	\
    ( (This)->lpVtbl -> Evaluate(This,Name,lcid,RHS) ) 

#define _Application__Evaluate(This,Name,lcid,RHS)	\
    ( (This)->lpVtbl -> _Evaluate(This,Name,lcid,RHS) ) 

#define _Application_ExecuteExcel4Macro(This,String,lcid,RHS)	\
    ( (This)->lpVtbl -> ExecuteExcel4Macro(This,String,lcid,RHS) ) 

#define _Application_Intersect(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS)	\
    ( (This)->lpVtbl -> Intersect(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS) ) 

#define _Application_get_MenuBars(This,RHS)	\
    ( (This)->lpVtbl -> get_MenuBars(This,RHS) ) 

#define _Application_get_Modules(This,RHS)	\
    ( (This)->lpVtbl -> get_Modules(This,RHS) ) 

#define _Application_get_Names(This,RHS)	\
    ( (This)->lpVtbl -> get_Names(This,RHS) ) 

#define _Application_get_Range(This,Cell1,Cell2,RHS)	\
    ( (This)->lpVtbl -> get_Range(This,Cell1,Cell2,RHS) ) 

#define _Application_get_Rows(This,RHS)	\
    ( (This)->lpVtbl -> get_Rows(This,RHS) ) 

#define _Application_Run(This,Macro,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,RHS)	\
    ( (This)->lpVtbl -> Run(This,Macro,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,RHS) ) 

#define _Application__Run2(This,Macro,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS)	\
    ( (This)->lpVtbl -> _Run2(This,Macro,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS) ) 

#define _Application_get_Selection(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Selection(This,lcid,RHS) ) 

#define _Application_SendKeys(This,Keys,Wait,lcid)	\
    ( (This)->lpVtbl -> SendKeys(This,Keys,Wait,lcid) ) 

#define _Application_get_Sheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Sheets(This,RHS) ) 

#define _Application_get_ShortcutMenus(This,Index,RHS)	\
    ( (This)->lpVtbl -> get_ShortcutMenus(This,Index,RHS) ) 

#define _Application_get_ThisWorkbook(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ThisWorkbook(This,lcid,RHS) ) 

#define _Application_get_Toolbars(This,RHS)	\
    ( (This)->lpVtbl -> get_Toolbars(This,RHS) ) 

#define _Application_Union(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS)	\
    ( (This)->lpVtbl -> Union(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS) ) 

#define _Application_get_Windows(This,RHS)	\
    ( (This)->lpVtbl -> get_Windows(This,RHS) ) 

#define _Application_get_Workbooks(This,RHS)	\
    ( (This)->lpVtbl -> get_Workbooks(This,RHS) ) 

#define _Application_get_WorksheetFunction(This,RHS)	\
    ( (This)->lpVtbl -> get_WorksheetFunction(This,RHS) ) 

#define _Application_get_Worksheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Worksheets(This,RHS) ) 

#define _Application_get_Excel4IntlMacroSheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Excel4IntlMacroSheets(This,RHS) ) 

#define _Application_get_Excel4MacroSheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Excel4MacroSheets(This,RHS) ) 

#define _Application_ActivateMicrosoftApp(This,Index,lcid)	\
    ( (This)->lpVtbl -> ActivateMicrosoftApp(This,Index,lcid) ) 

#define _Application_AddChartAutoFormat(This,Chart,Name,Description,lcid)	\
    ( (This)->lpVtbl -> AddChartAutoFormat(This,Chart,Name,Description,lcid) ) 

#define _Application_AddCustomList(This,ListArray,ByRow,lcid)	\
    ( (This)->lpVtbl -> AddCustomList(This,ListArray,ByRow,lcid) ) 

#define _Application_get_AlertBeforeOverwriting(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_AlertBeforeOverwriting(This,lcid,RHS) ) 

#define _Application_put_AlertBeforeOverwriting(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_AlertBeforeOverwriting(This,lcid,RHS) ) 

#define _Application_get_AltStartupPath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_AltStartupPath(This,lcid,RHS) ) 

#define _Application_put_AltStartupPath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_AltStartupPath(This,lcid,RHS) ) 

#define _Application_get_AskToUpdateLinks(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_AskToUpdateLinks(This,lcid,RHS) ) 

#define _Application_put_AskToUpdateLinks(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_AskToUpdateLinks(This,lcid,RHS) ) 

#define _Application_get_EnableAnimations(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EnableAnimations(This,lcid,RHS) ) 

#define _Application_put_EnableAnimations(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EnableAnimations(This,lcid,RHS) ) 

#define _Application_get_AutoCorrect(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoCorrect(This,RHS) ) 

#define _Application_get_Build(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Build(This,lcid,RHS) ) 

#define _Application_get_CalculateBeforeSave(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CalculateBeforeSave(This,lcid,RHS) ) 

#define _Application_put_CalculateBeforeSave(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_CalculateBeforeSave(This,lcid,RHS) ) 

#define _Application_get_Calculation(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Calculation(This,lcid,RHS) ) 

#define _Application_put_Calculation(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Calculation(This,lcid,RHS) ) 

#define _Application_get_Caller(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Caller(This,Index,lcid,RHS) ) 

#define _Application_get_CanPlaySounds(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CanPlaySounds(This,lcid,RHS) ) 

#define _Application_get_CanRecordSounds(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CanRecordSounds(This,lcid,RHS) ) 

#define _Application_get_Caption(This,RHS)	\
    ( (This)->lpVtbl -> get_Caption(This,RHS) ) 

#define _Application_put_Caption(This,RHS)	\
    ( (This)->lpVtbl -> put_Caption(This,RHS) ) 

#define _Application_get_CellDragAndDrop(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CellDragAndDrop(This,lcid,RHS) ) 

#define _Application_put_CellDragAndDrop(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_CellDragAndDrop(This,lcid,RHS) ) 

#define _Application_CentimetersToPoints(This,Centimeters,lcid,RHS)	\
    ( (This)->lpVtbl -> CentimetersToPoints(This,Centimeters,lcid,RHS) ) 

#define _Application_CheckSpelling(This,Word,CustomDictionary,IgnoreUppercase,lcid,RHS)	\
    ( (This)->lpVtbl -> CheckSpelling(This,Word,CustomDictionary,IgnoreUppercase,lcid,RHS) ) 

#define _Application_get_ClipboardFormats(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ClipboardFormats(This,Index,lcid,RHS) ) 

#define _Application_get_DisplayClipboardWindow(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayClipboardWindow(This,lcid,RHS) ) 

#define _Application_put_DisplayClipboardWindow(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayClipboardWindow(This,lcid,RHS) ) 

#define _Application_get_ColorButtons(This,RHS)	\
    ( (This)->lpVtbl -> get_ColorButtons(This,RHS) ) 

#define _Application_put_ColorButtons(This,RHS)	\
    ( (This)->lpVtbl -> put_ColorButtons(This,RHS) ) 

#define _Application_get_CommandUnderlines(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CommandUnderlines(This,lcid,RHS) ) 

#define _Application_put_CommandUnderlines(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_CommandUnderlines(This,lcid,RHS) ) 

#define _Application_get_ConstrainNumeric(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ConstrainNumeric(This,lcid,RHS) ) 

#define _Application_put_ConstrainNumeric(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_ConstrainNumeric(This,lcid,RHS) ) 

#define _Application_ConvertFormula(This,Formula,FromReferenceStyle,ToReferenceStyle,ToAbsolute,RelativeTo,lcid,RHS)	\
    ( (This)->lpVtbl -> ConvertFormula(This,Formula,FromReferenceStyle,ToReferenceStyle,ToAbsolute,RelativeTo,lcid,RHS) ) 

#define _Application_get_CopyObjectsWithCells(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CopyObjectsWithCells(This,lcid,RHS) ) 

#define _Application_put_CopyObjectsWithCells(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_CopyObjectsWithCells(This,lcid,RHS) ) 

#define _Application_get_Cursor(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Cursor(This,lcid,RHS) ) 

#define _Application_put_Cursor(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Cursor(This,lcid,RHS) ) 

#define _Application_get_CustomListCount(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CustomListCount(This,lcid,RHS) ) 

#define _Application_get_CutCopyMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CutCopyMode(This,lcid,RHS) ) 

#define _Application_put_CutCopyMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_CutCopyMode(This,lcid,RHS) ) 

#define _Application_get_DataEntryMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DataEntryMode(This,lcid,RHS) ) 

#define _Application_put_DataEntryMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DataEntryMode(This,lcid,RHS) ) 

#define _Application_Dummy1(This,Arg1,Arg2,Arg3,Arg4,RHS)	\
    ( (This)->lpVtbl -> Dummy1(This,Arg1,Arg2,Arg3,Arg4,RHS) ) 

#define _Application_Dummy2(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,RHS)	\
    ( (This)->lpVtbl -> Dummy2(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,RHS) ) 

#define _Application_Dummy3(This,RHS)	\
    ( (This)->lpVtbl -> Dummy3(This,RHS) ) 

#define _Application_Dummy4(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,RHS)	\
    ( (This)->lpVtbl -> Dummy4(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,RHS) ) 

#define _Application_Dummy5(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,RHS)	\
    ( (This)->lpVtbl -> Dummy5(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,RHS) ) 

#define _Application_Dummy6(This,RHS)	\
    ( (This)->lpVtbl -> Dummy6(This,RHS) ) 

#define _Application_Dummy7(This,RHS)	\
    ( (This)->lpVtbl -> Dummy7(This,RHS) ) 

#define _Application_Dummy8(This,Arg1,RHS)	\
    ( (This)->lpVtbl -> Dummy8(This,Arg1,RHS) ) 

#define _Application_Dummy9(This,RHS)	\
    ( (This)->lpVtbl -> Dummy9(This,RHS) ) 

#define _Application_Dummy10(This,arg,RHS)	\
    ( (This)->lpVtbl -> Dummy10(This,arg,RHS) ) 

#define _Application_Dummy11(This)	\
    ( (This)->lpVtbl -> Dummy11(This) ) 

#define _Application_get__Default(This,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,RHS) ) 

#define _Application_get_DefaultFilePath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DefaultFilePath(This,lcid,RHS) ) 

#define _Application_put_DefaultFilePath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DefaultFilePath(This,lcid,RHS) ) 

#define _Application_DeleteChartAutoFormat(This,Name,lcid)	\
    ( (This)->lpVtbl -> DeleteChartAutoFormat(This,Name,lcid) ) 

#define _Application_DeleteCustomList(This,ListNum,lcid)	\
    ( (This)->lpVtbl -> DeleteCustomList(This,ListNum,lcid) ) 

#define _Application_get_Dialogs(This,RHS)	\
    ( (This)->lpVtbl -> get_Dialogs(This,RHS) ) 

#define _Application_get_DisplayAlerts(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayAlerts(This,lcid,RHS) ) 

#define _Application_put_DisplayAlerts(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayAlerts(This,lcid,RHS) ) 

#define _Application_get_DisplayFormulaBar(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayFormulaBar(This,lcid,RHS) ) 

#define _Application_put_DisplayFormulaBar(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayFormulaBar(This,lcid,RHS) ) 

#define _Application_get_DisplayFullScreen(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayFullScreen(This,lcid,RHS) ) 

#define _Application_put_DisplayFullScreen(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayFullScreen(This,lcid,RHS) ) 

#define _Application_get_DisplayNoteIndicator(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayNoteIndicator(This,RHS) ) 

#define _Application_put_DisplayNoteIndicator(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayNoteIndicator(This,RHS) ) 

#define _Application_get_DisplayCommentIndicator(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayCommentIndicator(This,RHS) ) 

#define _Application_put_DisplayCommentIndicator(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayCommentIndicator(This,RHS) ) 

#define _Application_get_DisplayExcel4Menus(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayExcel4Menus(This,lcid,RHS) ) 

#define _Application_put_DisplayExcel4Menus(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayExcel4Menus(This,lcid,RHS) ) 

#define _Application_get_DisplayRecentFiles(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayRecentFiles(This,RHS) ) 

#define _Application_put_DisplayRecentFiles(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayRecentFiles(This,RHS) ) 

#define _Application_get_DisplayScrollBars(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayScrollBars(This,lcid,RHS) ) 

#define _Application_put_DisplayScrollBars(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayScrollBars(This,lcid,RHS) ) 

#define _Application_get_DisplayStatusBar(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayStatusBar(This,lcid,RHS) ) 

#define _Application_put_DisplayStatusBar(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayStatusBar(This,lcid,RHS) ) 

#define _Application_DoubleClick(This,lcid)	\
    ( (This)->lpVtbl -> DoubleClick(This,lcid) ) 

#define _Application_get_EditDirectlyInCell(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EditDirectlyInCell(This,lcid,RHS) ) 

#define _Application_put_EditDirectlyInCell(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EditDirectlyInCell(This,lcid,RHS) ) 

#define _Application_get_EnableAutoComplete(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableAutoComplete(This,RHS) ) 

#define _Application_put_EnableAutoComplete(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableAutoComplete(This,RHS) ) 

#define _Application_get_EnableCancelKey(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EnableCancelKey(This,lcid,RHS) ) 

#define _Application_put_EnableCancelKey(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EnableCancelKey(This,lcid,RHS) ) 

#define _Application_get_EnableSound(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableSound(This,RHS) ) 

#define _Application_put_EnableSound(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableSound(This,RHS) ) 

#define _Application_get_EnableTipWizard(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EnableTipWizard(This,lcid,RHS) ) 

#define _Application_put_EnableTipWizard(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EnableTipWizard(This,lcid,RHS) ) 

#define _Application_get_FileConverters(This,Index1,Index2,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FileConverters(This,Index1,Index2,lcid,RHS) ) 

#define _Application_get_FileSearch(This,RHS)	\
    ( (This)->lpVtbl -> get_FileSearch(This,RHS) ) 

#define _Application_get_FileFind(This,RHS)	\
    ( (This)->lpVtbl -> get_FileFind(This,RHS) ) 

#define _Application__FindFile(This,lcid)	\
    ( (This)->lpVtbl -> _FindFile(This,lcid) ) 

#define _Application_get_FixedDecimal(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FixedDecimal(This,lcid,RHS) ) 

#define _Application_put_FixedDecimal(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_FixedDecimal(This,lcid,RHS) ) 

#define _Application_get_FixedDecimalPlaces(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FixedDecimalPlaces(This,lcid,RHS) ) 

#define _Application_put_FixedDecimalPlaces(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_FixedDecimalPlaces(This,lcid,RHS) ) 

#define _Application_GetCustomListContents(This,ListNum,lcid,RHS)	\
    ( (This)->lpVtbl -> GetCustomListContents(This,ListNum,lcid,RHS) ) 

#define _Application_GetCustomListNum(This,ListArray,lcid,RHS)	\
    ( (This)->lpVtbl -> GetCustomListNum(This,ListArray,lcid,RHS) ) 

#define _Application_GetOpenFilename(This,FileFilter,FilterIndex,Title,ButtonText,MultiSelect,lcid,RHS)	\
    ( (This)->lpVtbl -> GetOpenFilename(This,FileFilter,FilterIndex,Title,ButtonText,MultiSelect,lcid,RHS) ) 

#define _Application_GetSaveAsFilename(This,InitialFilename,FileFilter,FilterIndex,Title,ButtonText,lcid,RHS)	\
    ( (This)->lpVtbl -> GetSaveAsFilename(This,InitialFilename,FileFilter,FilterIndex,Title,ButtonText,lcid,RHS) ) 

#define _Application_Goto(This,Reference,Scroll,lcid)	\
    ( (This)->lpVtbl -> Goto(This,Reference,Scroll,lcid) ) 

#define _Application_get_Height(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Height(This,lcid,RHS) ) 

#define _Application_put_Height(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Height(This,lcid,RHS) ) 

#define _Application_Help(This,HelpFile,HelpContextID,lcid)	\
    ( (This)->lpVtbl -> Help(This,HelpFile,HelpContextID,lcid) ) 

#define _Application_get_IgnoreRemoteRequests(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_IgnoreRemoteRequests(This,lcid,RHS) ) 

#define _Application_put_IgnoreRemoteRequests(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_IgnoreRemoteRequests(This,lcid,RHS) ) 

#define _Application_InchesToPoints(This,Inches,lcid,RHS)	\
    ( (This)->lpVtbl -> InchesToPoints(This,Inches,lcid,RHS) ) 

#define _Application_InputBox(This,Prompt,Title,Default,Left,Top,HelpFile,HelpContextID,Type,lcid,RHS)	\
    ( (This)->lpVtbl -> InputBox(This,Prompt,Title,Default,Left,Top,HelpFile,HelpContextID,Type,lcid,RHS) ) 

#define _Application_get_Interactive(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Interactive(This,lcid,RHS) ) 

#define _Application_put_Interactive(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Interactive(This,lcid,RHS) ) 

#define _Application_get_International(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> get_International(This,Index,lcid,RHS) ) 

#define _Application_get_Iteration(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Iteration(This,lcid,RHS) ) 

#define _Application_put_Iteration(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Iteration(This,lcid,RHS) ) 

#define _Application_get_LargeButtons(This,RHS)	\
    ( (This)->lpVtbl -> get_LargeButtons(This,RHS) ) 

#define _Application_put_LargeButtons(This,RHS)	\
    ( (This)->lpVtbl -> put_LargeButtons(This,RHS) ) 

#define _Application_get_Left(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Left(This,lcid,RHS) ) 

#define _Application_put_Left(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Left(This,lcid,RHS) ) 

#define _Application_get_LibraryPath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_LibraryPath(This,lcid,RHS) ) 

#define _Application_MacroOptions(This,Macro,Description,HasMenu,MenuText,HasShortcutKey,ShortcutKey,Category,StatusBar,HelpContextID,HelpFile,lcid)	\
    ( (This)->lpVtbl -> MacroOptions(This,Macro,Description,HasMenu,MenuText,HasShortcutKey,ShortcutKey,Category,StatusBar,HelpContextID,HelpFile,lcid) ) 

#define _Application_MailLogoff(This,lcid)	\
    ( (This)->lpVtbl -> MailLogoff(This,lcid) ) 

#define _Application_MailLogon(This,Name,Password,DownloadNewMail,lcid)	\
    ( (This)->lpVtbl -> MailLogon(This,Name,Password,DownloadNewMail,lcid) ) 

#define _Application_get_MailSession(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MailSession(This,lcid,RHS) ) 

#define _Application_get_MailSystem(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MailSystem(This,lcid,RHS) ) 

#define _Application_get_MathCoprocessorAvailable(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MathCoprocessorAvailable(This,lcid,RHS) ) 

#define _Application_get_MaxChange(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MaxChange(This,lcid,RHS) ) 

#define _Application_put_MaxChange(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_MaxChange(This,lcid,RHS) ) 

#define _Application_get_MaxIterations(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MaxIterations(This,lcid,RHS) ) 

#define _Application_put_MaxIterations(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_MaxIterations(This,lcid,RHS) ) 

#define _Application_get_MemoryFree(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MemoryFree(This,lcid,RHS) ) 

#define _Application_get_MemoryTotal(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MemoryTotal(This,lcid,RHS) ) 

#define _Application_get_MemoryUsed(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MemoryUsed(This,lcid,RHS) ) 

#define _Application_get_MouseAvailable(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MouseAvailable(This,lcid,RHS) ) 

#define _Application_get_MoveAfterReturn(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MoveAfterReturn(This,lcid,RHS) ) 

#define _Application_put_MoveAfterReturn(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_MoveAfterReturn(This,lcid,RHS) ) 

#define _Application_get_MoveAfterReturnDirection(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MoveAfterReturnDirection(This,lcid,RHS) ) 

#define _Application_put_MoveAfterReturnDirection(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_MoveAfterReturnDirection(This,lcid,RHS) ) 

#define _Application_get_RecentFiles(This,RHS)	\
    ( (This)->lpVtbl -> get_RecentFiles(This,RHS) ) 

#define _Application_get_Name(This,RHS)	\
    ( (This)->lpVtbl -> get_Name(This,RHS) ) 

#define _Application_NextLetter(This,lcid,RHS)	\
    ( (This)->lpVtbl -> NextLetter(This,lcid,RHS) ) 

#define _Application_get_NetworkTemplatesPath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_NetworkTemplatesPath(This,lcid,RHS) ) 

#define _Application_get_ODBCErrors(This,RHS)	\
    ( (This)->lpVtbl -> get_ODBCErrors(This,RHS) ) 

#define _Application_get_ODBCTimeout(This,RHS)	\
    ( (This)->lpVtbl -> get_ODBCTimeout(This,RHS) ) 

#define _Application_put_ODBCTimeout(This,RHS)	\
    ( (This)->lpVtbl -> put_ODBCTimeout(This,RHS) ) 

#define _Application_get_OnCalculate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnCalculate(This,lcid,RHS) ) 

#define _Application_put_OnCalculate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnCalculate(This,lcid,RHS) ) 

#define _Application_get_OnData(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnData(This,lcid,RHS) ) 

#define _Application_put_OnData(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnData(This,lcid,RHS) ) 

#define _Application_get_OnDoubleClick(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnDoubleClick(This,lcid,RHS) ) 

#define _Application_put_OnDoubleClick(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnDoubleClick(This,lcid,RHS) ) 

#define _Application_get_OnEntry(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnEntry(This,lcid,RHS) ) 

#define _Application_put_OnEntry(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnEntry(This,lcid,RHS) ) 

#define _Application_OnKey(This,Key,Procedure,lcid)	\
    ( (This)->lpVtbl -> OnKey(This,Key,Procedure,lcid) ) 

#define _Application_OnRepeat(This,Text,Procedure,lcid)	\
    ( (This)->lpVtbl -> OnRepeat(This,Text,Procedure,lcid) ) 

#define _Application_get_OnSheetActivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSheetActivate(This,lcid,RHS) ) 

#define _Application_put_OnSheetActivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSheetActivate(This,lcid,RHS) ) 

#define _Application_get_OnSheetDeactivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSheetDeactivate(This,lcid,RHS) ) 

#define _Application_put_OnSheetDeactivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSheetDeactivate(This,lcid,RHS) ) 

#define _Application_OnTime(This,EarliestTime,Procedure,LatestTime,Schedule,lcid)	\
    ( (This)->lpVtbl -> OnTime(This,EarliestTime,Procedure,LatestTime,Schedule,lcid) ) 

#define _Application_OnUndo(This,Text,Procedure,lcid)	\
    ( (This)->lpVtbl -> OnUndo(This,Text,Procedure,lcid) ) 

#define _Application_get_OnWindow(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnWindow(This,lcid,RHS) ) 

#define _Application_put_OnWindow(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnWindow(This,lcid,RHS) ) 

#define _Application_get_OperatingSystem(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OperatingSystem(This,lcid,RHS) ) 

#define _Application_get_OrganizationName(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OrganizationName(This,lcid,RHS) ) 

#define _Application_get_Path(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Path(This,lcid,RHS) ) 

#define _Application_get_PathSeparator(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_PathSeparator(This,lcid,RHS) ) 

#define _Application_get_PreviousSelections(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> get_PreviousSelections(This,Index,lcid,RHS) ) 

#define _Application_get_PivotTableSelection(This,RHS)	\
    ( (This)->lpVtbl -> get_PivotTableSelection(This,RHS) ) 

#define _Application_put_PivotTableSelection(This,RHS)	\
    ( (This)->lpVtbl -> put_PivotTableSelection(This,RHS) ) 

#define _Application_get_PromptForSummaryInfo(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_PromptForSummaryInfo(This,lcid,RHS) ) 

#define _Application_put_PromptForSummaryInfo(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_PromptForSummaryInfo(This,lcid,RHS) ) 

#define _Application_Quit(This)	\
    ( (This)->lpVtbl -> Quit(This) ) 

#define _Application_RecordMacro(This,BasicCode,XlmCode,lcid)	\
    ( (This)->lpVtbl -> RecordMacro(This,BasicCode,XlmCode,lcid) ) 

#define _Application_get_RecordRelative(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_RecordRelative(This,lcid,RHS) ) 

#define _Application_get_ReferenceStyle(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ReferenceStyle(This,lcid,RHS) ) 

#define _Application_put_ReferenceStyle(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_ReferenceStyle(This,lcid,RHS) ) 

#define _Application_get_RegisteredFunctions(This,Index1,Index2,lcid,RHS)	\
    ( (This)->lpVtbl -> get_RegisteredFunctions(This,Index1,Index2,lcid,RHS) ) 

#define _Application_RegisterXLL(This,Filename,lcid,RHS)	\
    ( (This)->lpVtbl -> RegisterXLL(This,Filename,lcid,RHS) ) 

#define _Application_Repeat(This,lcid)	\
    ( (This)->lpVtbl -> Repeat(This,lcid) ) 

#define _Application_ResetTipWizard(This,lcid)	\
    ( (This)->lpVtbl -> ResetTipWizard(This,lcid) ) 

#define _Application_get_RollZoom(This,RHS)	\
    ( (This)->lpVtbl -> get_RollZoom(This,RHS) ) 

#define _Application_put_RollZoom(This,RHS)	\
    ( (This)->lpVtbl -> put_RollZoom(This,RHS) ) 

#define _Application_Save(This,Filename,lcid)	\
    ( (This)->lpVtbl -> Save(This,Filename,lcid) ) 

#define _Application_SaveWorkspace(This,Filename,lcid)	\
    ( (This)->lpVtbl -> SaveWorkspace(This,Filename,lcid) ) 

#define _Application_get_ScreenUpdating(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ScreenUpdating(This,lcid,RHS) ) 

#define _Application_put_ScreenUpdating(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_ScreenUpdating(This,lcid,RHS) ) 

#define _Application_SetDefaultChart(This,FormatName,Gallery)	\
    ( (This)->lpVtbl -> SetDefaultChart(This,FormatName,Gallery) ) 

#define _Application_get_SheetsInNewWorkbook(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_SheetsInNewWorkbook(This,lcid,RHS) ) 

#define _Application_put_SheetsInNewWorkbook(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_SheetsInNewWorkbook(This,lcid,RHS) ) 

#define _Application_get_ShowChartTipNames(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowChartTipNames(This,RHS) ) 

#define _Application_put_ShowChartTipNames(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowChartTipNames(This,RHS) ) 

#define _Application_get_ShowChartTipValues(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowChartTipValues(This,RHS) ) 

#define _Application_put_ShowChartTipValues(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowChartTipValues(This,RHS) ) 

#define _Application_get_StandardFont(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_StandardFont(This,lcid,RHS) ) 

#define _Application_put_StandardFont(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_StandardFont(This,lcid,RHS) ) 

#define _Application_get_StandardFontSize(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_StandardFontSize(This,lcid,RHS) ) 

#define _Application_put_StandardFontSize(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_StandardFontSize(This,lcid,RHS) ) 

#define _Application_get_StartupPath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_StartupPath(This,lcid,RHS) ) 

#define _Application_get_StatusBar(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_StatusBar(This,lcid,RHS) ) 

#define _Application_put_StatusBar(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_StatusBar(This,lcid,RHS) ) 

#define _Application_get_TemplatesPath(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_TemplatesPath(This,lcid,RHS) ) 

#define _Application_get_ShowToolTips(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowToolTips(This,RHS) ) 

#define _Application_put_ShowToolTips(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowToolTips(This,RHS) ) 

#define _Application_get_Top(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Top(This,lcid,RHS) ) 

#define _Application_put_Top(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Top(This,lcid,RHS) ) 

#define _Application_get_DefaultSaveFormat(This,RHS)	\
    ( (This)->lpVtbl -> get_DefaultSaveFormat(This,RHS) ) 

#define _Application_put_DefaultSaveFormat(This,RHS)	\
    ( (This)->lpVtbl -> put_DefaultSaveFormat(This,RHS) ) 

#define _Application_get_TransitionMenuKey(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_TransitionMenuKey(This,lcid,RHS) ) 

#define _Application_put_TransitionMenuKey(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_TransitionMenuKey(This,lcid,RHS) ) 

#define _Application_get_TransitionMenuKeyAction(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_TransitionMenuKeyAction(This,lcid,RHS) ) 

#define _Application_put_TransitionMenuKeyAction(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_TransitionMenuKeyAction(This,lcid,RHS) ) 

#define _Application_get_TransitionNavigKeys(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_TransitionNavigKeys(This,lcid,RHS) ) 

#define _Application_put_TransitionNavigKeys(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_TransitionNavigKeys(This,lcid,RHS) ) 

#define _Application_Undo(This,lcid)	\
    ( (This)->lpVtbl -> Undo(This,lcid) ) 

#define _Application_get_UsableHeight(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UsableHeight(This,lcid,RHS) ) 

#define _Application_get_UsableWidth(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UsableWidth(This,lcid,RHS) ) 

#define _Application_get_UserControl(This,RHS)	\
    ( (This)->lpVtbl -> get_UserControl(This,RHS) ) 

#define _Application_put_UserControl(This,RHS)	\
    ( (This)->lpVtbl -> put_UserControl(This,RHS) ) 

#define _Application_get_UserName(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UserName(This,lcid,RHS) ) 

#define _Application_put_UserName(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_UserName(This,lcid,RHS) ) 

#define _Application_get_Value(This,RHS)	\
    ( (This)->lpVtbl -> get_Value(This,RHS) ) 

#define _Application_get_VBE(This,RHS)	\
    ( (This)->lpVtbl -> get_VBE(This,RHS) ) 

#define _Application_get_Version(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Version(This,lcid,RHS) ) 

#define _Application_get_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Visible(This,lcid,RHS) ) 

#define _Application_put_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Visible(This,lcid,RHS) ) 

#define _Application_Volatile(This,Volatile,lcid)	\
    ( (This)->lpVtbl -> Volatile(This,Volatile,lcid) ) 

#define _Application__Wait(This,Time,lcid)	\
    ( (This)->lpVtbl -> _Wait(This,Time,lcid) ) 

#define _Application_get_Width(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Width(This,lcid,RHS) ) 

#define _Application_put_Width(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Width(This,lcid,RHS) ) 

#define _Application_get_WindowsForPens(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_WindowsForPens(This,lcid,RHS) ) 

#define _Application_get_WindowState(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_WindowState(This,lcid,RHS) ) 

#define _Application_put_WindowState(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_WindowState(This,lcid,RHS) ) 

#define _Application_get_UILanguage(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UILanguage(This,lcid,RHS) ) 

#define _Application_put_UILanguage(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_UILanguage(This,lcid,RHS) ) 

#define _Application_get_DefaultSheetDirection(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DefaultSheetDirection(This,lcid,RHS) ) 

#define _Application_put_DefaultSheetDirection(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DefaultSheetDirection(This,lcid,RHS) ) 

#define _Application_get_CursorMovement(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CursorMovement(This,lcid,RHS) ) 

#define _Application_put_CursorMovement(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_CursorMovement(This,lcid,RHS) ) 

#define _Application_get_ControlCharacters(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ControlCharacters(This,lcid,RHS) ) 

#define _Application_put_ControlCharacters(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_ControlCharacters(This,lcid,RHS) ) 

#define _Application__WSFunction(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS)	\
    ( (This)->lpVtbl -> _WSFunction(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,lcid,RHS) ) 

#define _Application_get_EnableEvents(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableEvents(This,RHS) ) 

#define _Application_put_EnableEvents(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableEvents(This,RHS) ) 

#define _Application_get_DisplayInfoWindow(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayInfoWindow(This,RHS) ) 

#define _Application_put_DisplayInfoWindow(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayInfoWindow(This,RHS) ) 

#define _Application_Wait(This,Time,lcid,RHS)	\
    ( (This)->lpVtbl -> Wait(This,Time,lcid,RHS) ) 

#define _Application_get_ExtendList(This,RHS)	\
    ( (This)->lpVtbl -> get_ExtendList(This,RHS) ) 

#define _Application_put_ExtendList(This,RHS)	\
    ( (This)->lpVtbl -> put_ExtendList(This,RHS) ) 

#define _Application_get_OLEDBErrors(This,RHS)	\
    ( (This)->lpVtbl -> get_OLEDBErrors(This,RHS) ) 

#define _Application_GetPhonetic(This,Text,RHS)	\
    ( (This)->lpVtbl -> GetPhonetic(This,Text,RHS) ) 

#define _Application_get_COMAddIns(This,RHS)	\
    ( (This)->lpVtbl -> get_COMAddIns(This,RHS) ) 

#define _Application_get_DefaultWebOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_DefaultWebOptions(This,RHS) ) 

#define _Application_get_ProductCode(This,RHS)	\
    ( (This)->lpVtbl -> get_ProductCode(This,RHS) ) 

#define _Application_get_UserLibraryPath(This,RHS)	\
    ( (This)->lpVtbl -> get_UserLibraryPath(This,RHS) ) 

#define _Application_get_AutoPercentEntry(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoPercentEntry(This,RHS) ) 

#define _Application_put_AutoPercentEntry(This,RHS)	\
    ( (This)->lpVtbl -> put_AutoPercentEntry(This,RHS) ) 

#define _Application_get_LanguageSettings(This,RHS)	\
    ( (This)->lpVtbl -> get_LanguageSettings(This,RHS) ) 

#define _Application_get_Dummy101(This,RHS)	\
    ( (This)->lpVtbl -> get_Dummy101(This,RHS) ) 

#define _Application_Dummy12(This,p1,p2)	\
    ( (This)->lpVtbl -> Dummy12(This,p1,p2) ) 

#define _Application_get_AnswerWizard(This,RHS)	\
    ( (This)->lpVtbl -> get_AnswerWizard(This,RHS) ) 

#define _Application_CalculateFull(This)	\
    ( (This)->lpVtbl -> CalculateFull(This) ) 

#define _Application_FindFile(This,lcid,RHS)	\
    ( (This)->lpVtbl -> FindFile(This,lcid,RHS) ) 

#define _Application_get_CalculationVersion(This,RHS)	\
    ( (This)->lpVtbl -> get_CalculationVersion(This,RHS) ) 

#define _Application_get_ShowWindowsInTaskbar(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowWindowsInTaskbar(This,RHS) ) 

#define _Application_put_ShowWindowsInTaskbar(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowWindowsInTaskbar(This,RHS) ) 

#define _Application_get_FeatureInstall(This,RHS)	\
    ( (This)->lpVtbl -> get_FeatureInstall(This,RHS) ) 

#define _Application_put_FeatureInstall(This,RHS)	\
    ( (This)->lpVtbl -> put_FeatureInstall(This,RHS) ) 

#define _Application_get_Ready(This,RHS)	\
    ( (This)->lpVtbl -> get_Ready(This,RHS) ) 

#define _Application_Dummy13(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,RHS)	\
    ( (This)->lpVtbl -> Dummy13(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,RHS) ) 

#define _Application_get_FindFormat(This,RHS)	\
    ( (This)->lpVtbl -> get_FindFormat(This,RHS) ) 

#define _Application_putref_FindFormat(This,RHS)	\
    ( (This)->lpVtbl -> putref_FindFormat(This,RHS) ) 

#define _Application_get_ReplaceFormat(This,RHS)	\
    ( (This)->lpVtbl -> get_ReplaceFormat(This,RHS) ) 

#define _Application_putref_ReplaceFormat(This,RHS)	\
    ( (This)->lpVtbl -> putref_ReplaceFormat(This,RHS) ) 

#define _Application_get_UsedObjects(This,RHS)	\
    ( (This)->lpVtbl -> get_UsedObjects(This,RHS) ) 

#define _Application_get_CalculationState(This,RHS)	\
    ( (This)->lpVtbl -> get_CalculationState(This,RHS) ) 

#define _Application_get_CalculationInterruptKey(This,RHS)	\
    ( (This)->lpVtbl -> get_CalculationInterruptKey(This,RHS) ) 

#define _Application_put_CalculationInterruptKey(This,RHS)	\
    ( (This)->lpVtbl -> put_CalculationInterruptKey(This,RHS) ) 

#define _Application_get_Watches(This,RHS)	\
    ( (This)->lpVtbl -> get_Watches(This,RHS) ) 

#define _Application_get_DisplayFunctionToolTips(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayFunctionToolTips(This,RHS) ) 

#define _Application_put_DisplayFunctionToolTips(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayFunctionToolTips(This,RHS) ) 

#define _Application_get_AutomationSecurity(This,RHS)	\
    ( (This)->lpVtbl -> get_AutomationSecurity(This,RHS) ) 

#define _Application_put_AutomationSecurity(This,RHS)	\
    ( (This)->lpVtbl -> put_AutomationSecurity(This,RHS) ) 

#define _Application_get_FileDialog(This,fileDialogType,RHS)	\
    ( (This)->lpVtbl -> get_FileDialog(This,fileDialogType,RHS) ) 

#define _Application_Dummy14(This)	\
    ( (This)->lpVtbl -> Dummy14(This) ) 

#define _Application_CalculateFullRebuild(This)	\
    ( (This)->lpVtbl -> CalculateFullRebuild(This) ) 

#define _Application_get_DisplayPasteOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayPasteOptions(This,RHS) ) 

#define _Application_put_DisplayPasteOptions(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayPasteOptions(This,RHS) ) 

#define _Application_get_DisplayInsertOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayInsertOptions(This,RHS) ) 

#define _Application_put_DisplayInsertOptions(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayInsertOptions(This,RHS) ) 

#define _Application_get_GenerateGetPivotData(This,RHS)	\
    ( (This)->lpVtbl -> get_GenerateGetPivotData(This,RHS) ) 

#define _Application_put_GenerateGetPivotData(This,RHS)	\
    ( (This)->lpVtbl -> put_GenerateGetPivotData(This,RHS) ) 

#define _Application_get_AutoRecover(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoRecover(This,RHS) ) 

#define _Application_get_Hwnd(This,RHS)	\
    ( (This)->lpVtbl -> get_Hwnd(This,RHS) ) 

#define _Application_get_Hinstance(This,RHS)	\
    ( (This)->lpVtbl -> get_Hinstance(This,RHS) ) 

#define _Application_CheckAbort(This,KeepAbort)	\
    ( (This)->lpVtbl -> CheckAbort(This,KeepAbort) ) 

#define _Application_get_ErrorCheckingOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_ErrorCheckingOptions(This,RHS) ) 

#define _Application_get_AutoFormatAsYouTypeReplaceHyperlinks(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoFormatAsYouTypeReplaceHyperlinks(This,RHS) ) 

#define _Application_put_AutoFormatAsYouTypeReplaceHyperlinks(This,RHS)	\
    ( (This)->lpVtbl -> put_AutoFormatAsYouTypeReplaceHyperlinks(This,RHS) ) 

#define _Application_get_SmartTagRecognizers(This,RHS)	\
    ( (This)->lpVtbl -> get_SmartTagRecognizers(This,RHS) ) 

#define _Application_get_NewWorkbook(This,RHS)	\
    ( (This)->lpVtbl -> get_NewWorkbook(This,RHS) ) 

#define _Application_get_SpellingOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_SpellingOptions(This,RHS) ) 

#define _Application_get_Speech(This,RHS)	\
    ( (This)->lpVtbl -> get_Speech(This,RHS) ) 

#define _Application_get_MapPaperSize(This,RHS)	\
    ( (This)->lpVtbl -> get_MapPaperSize(This,RHS) ) 

#define _Application_put_MapPaperSize(This,RHS)	\
    ( (This)->lpVtbl -> put_MapPaperSize(This,RHS) ) 

#define _Application_get_ShowStartupDialog(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowStartupDialog(This,RHS) ) 

#define _Application_put_ShowStartupDialog(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowStartupDialog(This,RHS) ) 

#define _Application_get_DecimalSeparator(This,RHS)	\
    ( (This)->lpVtbl -> get_DecimalSeparator(This,RHS) ) 

#define _Application_put_DecimalSeparator(This,RHS)	\
    ( (This)->lpVtbl -> put_DecimalSeparator(This,RHS) ) 

#define _Application_get_ThousandsSeparator(This,RHS)	\
    ( (This)->lpVtbl -> get_ThousandsSeparator(This,RHS) ) 

#define _Application_put_ThousandsSeparator(This,RHS)	\
    ( (This)->lpVtbl -> put_ThousandsSeparator(This,RHS) ) 

#define _Application_get_UseSystemSeparators(This,RHS)	\
    ( (This)->lpVtbl -> get_UseSystemSeparators(This,RHS) ) 

#define _Application_put_UseSystemSeparators(This,RHS)	\
    ( (This)->lpVtbl -> put_UseSystemSeparators(This,RHS) ) 

#define _Application_get_ThisCell(This,RHS)	\
    ( (This)->lpVtbl -> get_ThisCell(This,RHS) ) 

#define _Application_get_RTD(This,RHS)	\
    ( (This)->lpVtbl -> get_RTD(This,RHS) ) 

#define _Application_get_DisplayDocumentActionTaskPane(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayDocumentActionTaskPane(This,RHS) ) 

#define _Application_put_DisplayDocumentActionTaskPane(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayDocumentActionTaskPane(This,RHS) ) 

#define _Application_DisplayXMLSourcePane(This,XmlMap)	\
    ( (This)->lpVtbl -> DisplayXMLSourcePane(This,XmlMap) ) 

#define _Application_get_ArbitraryXMLSupportAvailable(This,RHS)	\
    ( (This)->lpVtbl -> get_ArbitraryXMLSupportAvailable(This,RHS) ) 

#define _Application_Support(This,Object,ID,arg,RHS)	\
    ( (This)->lpVtbl -> Support(This,Object,ID,arg,RHS) ) 

#define _Application_Dummy20(This,grfCompareFunctions,RHS)	\
    ( (This)->lpVtbl -> Dummy20(This,grfCompareFunctions,RHS) ) 

#define _Application_get_MeasurementUnit(This,RHS)	\
    ( (This)->lpVtbl -> get_MeasurementUnit(This,RHS) ) 

#define _Application_put_MeasurementUnit(This,RHS)	\
    ( (This)->lpVtbl -> put_MeasurementUnit(This,RHS) ) 

#define _Application_get_ShowSelectionFloaties(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowSelectionFloaties(This,RHS) ) 

#define _Application_put_ShowSelectionFloaties(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowSelectionFloaties(This,RHS) ) 

#define _Application_get_ShowMenuFloaties(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowMenuFloaties(This,RHS) ) 

#define _Application_put_ShowMenuFloaties(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowMenuFloaties(This,RHS) ) 

#define _Application_get_ShowDevTools(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowDevTools(This,RHS) ) 

#define _Application_put_ShowDevTools(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowDevTools(This,RHS) ) 

#define _Application_get_EnableLivePreview(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableLivePreview(This,RHS) ) 

#define _Application_put_EnableLivePreview(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableLivePreview(This,RHS) ) 

#define _Application_get_DisplayDocumentInformationPanel(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayDocumentInformationPanel(This,RHS) ) 

#define _Application_put_DisplayDocumentInformationPanel(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayDocumentInformationPanel(This,RHS) ) 

#define _Application_get_AlwaysUseClearType(This,RHS)	\
    ( (This)->lpVtbl -> get_AlwaysUseClearType(This,RHS) ) 

#define _Application_put_AlwaysUseClearType(This,RHS)	\
    ( (This)->lpVtbl -> put_AlwaysUseClearType(This,RHS) ) 

#define _Application_get_WarnOnFunctionNameConflict(This,RHS)	\
    ( (This)->lpVtbl -> get_WarnOnFunctionNameConflict(This,RHS) ) 

#define _Application_put_WarnOnFunctionNameConflict(This,RHS)	\
    ( (This)->lpVtbl -> put_WarnOnFunctionNameConflict(This,RHS) ) 

#define _Application_get_FormulaBarHeight(This,RHS)	\
    ( (This)->lpVtbl -> get_FormulaBarHeight(This,RHS) ) 

#define _Application_put_FormulaBarHeight(This,RHS)	\
    ( (This)->lpVtbl -> put_FormulaBarHeight(This,RHS) ) 

#define _Application_get_DisplayFormulaAutoComplete(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayFormulaAutoComplete(This,RHS) ) 

#define _Application_put_DisplayFormulaAutoComplete(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayFormulaAutoComplete(This,RHS) ) 

#define _Application_get_GenerateTableRefs(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_GenerateTableRefs(This,lcid,RHS) ) 

#define _Application_put_GenerateTableRefs(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_GenerateTableRefs(This,lcid,RHS) ) 

#define _Application_get_Assistance(This,RHS)	\
    ( (This)->lpVtbl -> get_Assistance(This,RHS) ) 

#define _Application_CalculateUntilAsyncQueriesDone(This)	\
    ( (This)->lpVtbl -> CalculateUntilAsyncQueriesDone(This) ) 

#define _Application_get_EnableLargeOperationAlert(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableLargeOperationAlert(This,RHS) ) 

#define _Application_put_EnableLargeOperationAlert(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableLargeOperationAlert(This,RHS) ) 

#define _Application_get_LargeOperationCellThousandCount(This,RHS)	\
    ( (This)->lpVtbl -> get_LargeOperationCellThousandCount(This,RHS) ) 

#define _Application_put_LargeOperationCellThousandCount(This,RHS)	\
    ( (This)->lpVtbl -> put_LargeOperationCellThousandCount(This,RHS) ) 

#define _Application_get_DeferAsyncQueries(This,RHS)	\
    ( (This)->lpVtbl -> get_DeferAsyncQueries(This,RHS) ) 

#define _Application_put_DeferAsyncQueries(This,RHS)	\
    ( (This)->lpVtbl -> put_DeferAsyncQueries(This,RHS) ) 

#define _Application_get_MultiThreadedCalculation(This,RHS)	\
    ( (This)->lpVtbl -> get_MultiThreadedCalculation(This,RHS) ) 

#define _Application_SharePointVersion(This,bstrUrl,RHS)	\
    ( (This)->lpVtbl -> SharePointVersion(This,bstrUrl,RHS) ) 

#define _Application_get_ActiveEncryptionSession(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveEncryptionSession(This,RHS) ) 

#define _Application_get_HighQualityModeForGraphics(This,RHS)	\
    ( (This)->lpVtbl -> get_HighQualityModeForGraphics(This,RHS) ) 

#define _Application_put_HighQualityModeForGraphics(This,RHS)	\
    ( (This)->lpVtbl -> put_HighQualityModeForGraphics(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayCommentIndicator_Proxy( 
    _Application * This,
    /* [in] */ XlCommentDisplayMode RHS);


void __RPC_STUB _Application_put_DisplayCommentIndicator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayExcel4Menus_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayExcel4Menus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayExcel4Menus_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayExcel4Menus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayRecentFiles_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayRecentFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayRecentFiles_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayRecentFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayScrollBars_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayScrollBars_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayScrollBars_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayScrollBars_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayStatusBar_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayStatusBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayStatusBar_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayStatusBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_DoubleClick_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_DoubleClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EditDirectlyInCell_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EditDirectlyInCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EditDirectlyInCell_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EditDirectlyInCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableAutoComplete_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EnableAutoComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableAutoComplete_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EnableAutoComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableCancelKey_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ XlEnableCancelKey *RHS);


void __RPC_STUB _Application_get_EnableCancelKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableCancelKey_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ XlEnableCancelKey RHS);


void __RPC_STUB _Application_put_EnableCancelKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableSound_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EnableSound_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableSound_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EnableSound_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableTipWizard_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EnableTipWizard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableTipWizard_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EnableTipWizard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FileConverters_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Index1,
    /* [optional][in] */ VARIANT Index2,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_get_FileConverters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FileSearch_Proxy( 
    _Application * This,
    /* [retval][out] */ FileSearch **RHS);


void __RPC_STUB _Application_get_FileSearch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FileFind_Proxy( 
    _Application * This,
    /* [retval][out] */ IFind **RHS);


void __RPC_STUB _Application_get_FileFind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application__FindFile_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application__FindFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FixedDecimal_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_FixedDecimal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_FixedDecimal_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_FixedDecimal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FixedDecimalPlaces_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_FixedDecimalPlaces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_FixedDecimalPlaces_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_FixedDecimalPlaces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_GetCustomListContents_Proxy( 
    _Application * This,
    /* [in] */ long ListNum,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_GetCustomListContents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_GetCustomListNum_Proxy( 
    _Application * This,
    /* [in] */ VARIANT ListArray,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_GetCustomListNum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_GetOpenFilename_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT FileFilter,
    /* [optional][in] */ VARIANT FilterIndex,
    /* [optional][in] */ VARIANT Title,
    /* [optional][in] */ VARIANT ButtonText,
    /* [optional][in] */ VARIANT MultiSelect,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_GetOpenFilename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_GetSaveAsFilename_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT InitialFilename,
    /* [optional][in] */ VARIANT FileFilter,
    /* [optional][in] */ VARIANT FilterIndex,
    /* [optional][in] */ VARIANT Title,
    /* [optional][in] */ VARIANT ButtonText,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_GetSaveAsFilename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Goto_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Reference,
    /* [optional][in] */ VARIANT Scroll,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_Goto_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Height_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Height_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ double RHS);


void __RPC_STUB _Application_put_Height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Help_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT HelpFile,
    /* [optional][in] */ VARIANT HelpContextID,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_Help_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_IgnoreRemoteRequests_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_IgnoreRemoteRequests_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_IgnoreRemoteRequests_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_IgnoreRemoteRequests_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_InchesToPoints_Proxy( 
    _Application * This,
    /* [in] */ double Inches,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_InchesToPoints_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_InputBox_Proxy( 
    _Application * This,
    /* [in] */ BSTR Prompt,
    /* [optional][in] */ VARIANT Title,
    /* [optional][in] */ VARIANT Default,
    /* [optional][in] */ VARIANT Left,
    /* [optional][in] */ VARIANT Top,
    /* [optional][in] */ VARIANT HelpFile,
    /* [optional][in] */ VARIANT HelpContextID,
    /* [optional][in] */ VARIANT Type,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_InputBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Interactive_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_Interactive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Interactive_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_Interactive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_International_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Index,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_get_International_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Iteration_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_Iteration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Iteration_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_Iteration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_LargeButtons_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_LargeButtons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_LargeButtons_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_LargeButtons_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Left_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Left_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ double RHS);


void __RPC_STUB _Application_put_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_LibraryPath_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_LibraryPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_MacroOptions_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Macro,
    /* [optional][in] */ VARIANT Description,
    /* [optional][in] */ VARIANT HasMenu,
    /* [optional][in] */ VARIANT MenuText,
    /* [optional][in] */ VARIANT HasShortcutKey,
    /* [optional][in] */ VARIANT ShortcutKey,
    /* [optional][in] */ VARIANT Category,
    /* [optional][in] */ VARIANT StatusBar,
    /* [optional][in] */ VARIANT HelpContextID,
    /* [optional][in] */ VARIANT HelpFile,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_MacroOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_MailLogoff_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_MailLogoff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_MailLogon_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Name,
    /* [optional][in] */ VARIANT Password,
    /* [optional][in] */ VARIANT DownloadNewMail,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_MailLogon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MailSession_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_get_MailSession_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MailSystem_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ XlMailSystem *RHS);


void __RPC_STUB _Application_get_MailSystem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MathCoprocessorAvailable_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_MathCoprocessorAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MaxChange_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_MaxChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_MaxChange_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ double RHS);


void __RPC_STUB _Application_put_MaxChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MaxIterations_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_MaxIterations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_MaxIterations_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_MaxIterations_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MemoryFree_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_MemoryFree_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MemoryTotal_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_MemoryTotal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MemoryUsed_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_MemoryUsed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MouseAvailable_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_MouseAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MoveAfterReturn_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_MoveAfterReturn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_MoveAfterReturn_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_MoveAfterReturn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MoveAfterReturnDirection_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ XlDirection *RHS);


void __RPC_STUB _Application_get_MoveAfterReturnDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_MoveAfterReturnDirection_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ XlDirection RHS);


void __RPC_STUB _Application_put_MoveAfterReturnDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_RecentFiles_Proxy( 
    _Application * This,
    /* [retval][out] */ RecentFiles **RHS);


void __RPC_STUB _Application_get_RecentFiles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Name_Proxy( 
    _Application * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_NextLetter_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ Workbook	**RHS);


void __RPC_STUB _Application_NextLetter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_NetworkTemplatesPath_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_NetworkTemplatesPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ODBCErrors_Proxy( 
    _Application * This,
    /* [retval][out] */ ODBCErrors **RHS);


void __RPC_STUB _Application_get_ODBCErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ODBCTimeout_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_ODBCTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ODBCTimeout_Proxy( 
    _Application * This,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_ODBCTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnCalculate_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnCalculate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnCalculate_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnCalculate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnData_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnData_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnDoubleClick_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnDoubleClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnDoubleClick_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnDoubleClick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnEntry_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnEntry_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_OnKey_Proxy( 
    _Application * This,
    /* [in] */ BSTR Key,
    /* [optional][in] */ VARIANT Procedure,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_OnKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_OnRepeat_Proxy( 
    _Application * This,
    /* [in] */ BSTR Text,
    /* [in] */ BSTR Procedure,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_OnRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnSheetActivate_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnSheetActivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnSheetActivate_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnSheetActivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnSheetDeactivate_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnSheetDeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnSheetDeactivate_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnSheetDeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_OnTime_Proxy( 
    _Application * This,
    /* [in] */ VARIANT EarliestTime,
    /* [in] */ BSTR Procedure,
    /* [optional][in] */ VARIANT LatestTime,
    /* [optional][in] */ VARIANT Schedule,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_OnTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_OnUndo_Proxy( 
    _Application * This,
    /* [in] */ BSTR Text,
    /* [in] */ BSTR Procedure,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_OnUndo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OnWindow_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OnWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_OnWindow_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_OnWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OperatingSystem_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OperatingSystem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OrganizationName_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_OrganizationName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Path_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_Path_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_PathSeparator_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_PathSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_PreviousSelections_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Index,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_get_PreviousSelections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_PivotTableSelection_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_PivotTableSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_PivotTableSelection_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_PivotTableSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_PromptForSummaryInfo_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_PromptForSummaryInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_PromptForSummaryInfo_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_PromptForSummaryInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Quit_Proxy( 
    _Application * This);


void __RPC_STUB _Application_Quit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_RecordMacro_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT BasicCode,
    /* [optional][in] */ VARIANT XlmCode,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_RecordMacro_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_RecordRelative_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_RecordRelative_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ReferenceStyle_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ XlReferenceStyle *RHS);


void __RPC_STUB _Application_get_ReferenceStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ReferenceStyle_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ XlReferenceStyle RHS);


void __RPC_STUB _Application_put_ReferenceStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_RegisteredFunctions_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Index1,
    /* [optional][in] */ VARIANT Index2,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_get_RegisteredFunctions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_RegisterXLL_Proxy( 
    _Application * This,
    /* [in] */ BSTR Filename,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_RegisterXLL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Repeat_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_Repeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_ResetTipWizard_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_ResetTipWizard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_RollZoom_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_RollZoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_RollZoom_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_RollZoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_Save_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Filename,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_Save_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_SaveWorkspace_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Filename,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_SaveWorkspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ScreenUpdating_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ScreenUpdating_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ScreenUpdating_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ScreenUpdating_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_SetDefaultChart_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT FormatName,
    /* [optional][in] */ VARIANT Gallery);


void __RPC_STUB _Application_SetDefaultChart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_SheetsInNewWorkbook_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_SheetsInNewWorkbook_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_SheetsInNewWorkbook_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_SheetsInNewWorkbook_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowChartTipNames_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowChartTipNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowChartTipNames_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowChartTipNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowChartTipValues_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowChartTipValues_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowChartTipValues_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowChartTipValues_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_StandardFont_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_StandardFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_StandardFont_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_StandardFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_StandardFontSize_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_StandardFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_StandardFontSize_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ double RHS);


void __RPC_STUB _Application_put_StandardFontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_StartupPath_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_StartupPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_StatusBar_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_get_StatusBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_StatusBar_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT RHS);


void __RPC_STUB _Application_put_StatusBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_TemplatesPath_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_TemplatesPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowToolTips_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowToolTips_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowToolTips_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowToolTips_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Top_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Top_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ double RHS);


void __RPC_STUB _Application_put_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DefaultSaveFormat_Proxy( 
    _Application * This,
    /* [retval][out] */ XlFileFormat *RHS);


void __RPC_STUB _Application_get_DefaultSaveFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DefaultSaveFormat_Proxy( 
    _Application * This,
    /* [in] */ XlFileFormat RHS);


void __RPC_STUB _Application_put_DefaultSaveFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_TransitionMenuKey_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_TransitionMenuKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_TransitionMenuKey_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_TransitionMenuKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_TransitionMenuKeyAction_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_TransitionMenuKeyAction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_TransitionMenuKeyAction_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_TransitionMenuKeyAction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_TransitionNavigKeys_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_TransitionNavigKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_TransitionNavigKeys_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_TransitionNavigKeys_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Undo_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_Undo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UsableHeight_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_UsableHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UsableWidth_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_UsableWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UserControl_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_UserControl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_UserControl_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_UserControl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UserName_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_UserName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_UserName_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_UserName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Value_Proxy( 
    _Application * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_VBE_Proxy( 
    _Application * This,
    /* [retval][out] */ IDispatch **RHS);


void __RPC_STUB _Application_get_VBE_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Version_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_Version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Visible_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Visible_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_Visible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Volatile_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Volatile,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application_Volatile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application__Wait_Proxy( 
    _Application * This,
    /* [in] */ VARIANT Time,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Application__Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Width_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ double *RHS);


void __RPC_STUB _Application_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_Width_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ double RHS);


void __RPC_STUB _Application_put_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_WindowsForPens_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_WindowsForPens_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_WindowState_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ XlWindowState *RHS);


void __RPC_STUB _Application_get_WindowState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_WindowState_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ XlWindowState RHS);


void __RPC_STUB _Application_put_WindowState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UILanguage_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_UILanguage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_UILanguage_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_UILanguage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DefaultSheetDirection_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_DefaultSheetDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DefaultSheetDirection_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_DefaultSheetDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_CursorMovement_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_CursorMovement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_CursorMovement_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_CursorMovement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ControlCharacters_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ControlCharacters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ControlCharacters_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ControlCharacters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application__WSFunction_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Arg1,
    /* [optional][in] */ VARIANT Arg2,
    /* [optional][in] */ VARIANT Arg3,
    /* [optional][in] */ VARIANT Arg4,
    /* [optional][in] */ VARIANT Arg5,
    /* [optional][in] */ VARIANT Arg6,
    /* [optional][in] */ VARIANT Arg7,
    /* [optional][in] */ VARIANT Arg8,
    /* [optional][in] */ VARIANT Arg9,
    /* [optional][in] */ VARIANT Arg10,
    /* [optional][in] */ VARIANT Arg11,
    /* [optional][in] */ VARIANT Arg12,
    /* [optional][in] */ VARIANT Arg13,
    /* [optional][in] */ VARIANT Arg14,
    /* [optional][in] */ VARIANT Arg15,
    /* [optional][in] */ VARIANT Arg16,
    /* [optional][in] */ VARIANT Arg17,
    /* [optional][in] */ VARIANT Arg18,
    /* [optional][in] */ VARIANT Arg19,
    /* [optional][in] */ VARIANT Arg20,
    /* [optional][in] */ VARIANT Arg21,
    /* [optional][in] */ VARIANT Arg22,
    /* [optional][in] */ VARIANT Arg23,
    /* [optional][in] */ VARIANT Arg24,
    /* [optional][in] */ VARIANT Arg25,
    /* [optional][in] */ VARIANT Arg26,
    /* [optional][in] */ VARIANT Arg27,
    /* [optional][in] */ VARIANT Arg28,
    /* [optional][in] */ VARIANT Arg29,
    /* [optional][in] */ VARIANT Arg30,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application__WSFunction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableEvents_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EnableEvents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableEvents_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EnableEvents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayInfoWindow_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayInfoWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayInfoWindow_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayInfoWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_Wait_Proxy( 
    _Application * This,
    /* [in] */ VARIANT Time,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_Wait_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ExtendList_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ExtendList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ExtendList_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ExtendList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_OLEDBErrors_Proxy( 
    _Application * This,
    /* [retval][out] */ OLEDBErrors **RHS);


void __RPC_STUB _Application_get_OLEDBErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_GetPhonetic_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT Text,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_GetPhonetic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_COMAddIns_Proxy( 
    _Application * This,
    /* [retval][out] */ COMAddIns **RHS);


void __RPC_STUB _Application_get_COMAddIns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DefaultWebOptions_Proxy( 
    _Application * This,
    /* [retval][out] */ DefaultWebOptions **RHS);


void __RPC_STUB _Application_get_DefaultWebOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ProductCode_Proxy( 
    _Application * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_ProductCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UserLibraryPath_Proxy( 
    _Application * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_UserLibraryPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_AutoPercentEntry_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_AutoPercentEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_AutoPercentEntry_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_AutoPercentEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_LanguageSettings_Proxy( 
    _Application * This,
    /* [retval][out] */ LanguageSettings **RHS);


void __RPC_STUB _Application_get_LanguageSettings_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Dummy101_Proxy( 
    _Application * This,
    /* [retval][out] */ IDispatch **RHS);


void __RPC_STUB _Application_get_Dummy101_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_Dummy12_Proxy( 
    _Application * This,
    /* [in] */ PivotTable *p1,
    /* [in] */ PivotTable *p2);


void __RPC_STUB _Application_Dummy12_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_AnswerWizard_Proxy( 
    _Application * This,
    /* [retval][out] */ AnswerWizard **RHS);


void __RPC_STUB _Application_get_AnswerWizard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_CalculateFull_Proxy( 
    _Application * This);


void __RPC_STUB _Application_CalculateFull_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_FindFile_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_FindFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_CalculationVersion_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_CalculationVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowWindowsInTaskbar_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowWindowsInTaskbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowWindowsInTaskbar_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowWindowsInTaskbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FeatureInstall_Proxy( 
    _Application * This,
    /* [retval][out] */ MsoFeatureInstall *RHS);


void __RPC_STUB _Application_get_FeatureInstall_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_FeatureInstall_Proxy( 
    _Application * This,
    /* [in] */ MsoFeatureInstall RHS);


void __RPC_STUB _Application_put_FeatureInstall_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Ready_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_Ready_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_Dummy13_Proxy( 
    _Application * This,
    /* [in] */ VARIANT Arg1,
    /* [optional][in] */ VARIANT Arg2,
    /* [optional][in] */ VARIANT Arg3,
    /* [optional][in] */ VARIANT Arg4,
    /* [optional][in] */ VARIANT Arg5,
    /* [optional][in] */ VARIANT Arg6,
    /* [optional][in] */ VARIANT Arg7,
    /* [optional][in] */ VARIANT Arg8,
    /* [optional][in] */ VARIANT Arg9,
    /* [optional][in] */ VARIANT Arg10,
    /* [optional][in] */ VARIANT Arg11,
    /* [optional][in] */ VARIANT Arg12,
    /* [optional][in] */ VARIANT Arg13,
    /* [optional][in] */ VARIANT Arg14,
    /* [optional][in] */ VARIANT Arg15,
    /* [optional][in] */ VARIANT Arg16,
    /* [optional][in] */ VARIANT Arg17,
    /* [optional][in] */ VARIANT Arg18,
    /* [optional][in] */ VARIANT Arg19,
    /* [optional][in] */ VARIANT Arg20,
    /* [optional][in] */ VARIANT Arg21,
    /* [optional][in] */ VARIANT Arg22,
    /* [optional][in] */ VARIANT Arg23,
    /* [optional][in] */ VARIANT Arg24,
    /* [optional][in] */ VARIANT Arg25,
    /* [optional][in] */ VARIANT Arg26,
    /* [optional][in] */ VARIANT Arg27,
    /* [optional][in] */ VARIANT Arg28,
    /* [optional][in] */ VARIANT Arg29,
    /* [optional][in] */ VARIANT Arg30,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_Dummy13_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FindFormat_Proxy( 
    _Application * This,
    /* [retval][out] */ CellFormat **RHS);


void __RPC_STUB _Application_get_FindFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE _Application_putref_FindFormat_Proxy( 
    _Application * This,
    /* [in] */ CellFormat *RHS);


void __RPC_STUB _Application_putref_FindFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ReplaceFormat_Proxy( 
    _Application * This,
    /* [retval][out] */ CellFormat **RHS);


void __RPC_STUB _Application_get_ReplaceFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propputref][id] */ HRESULT STDMETHODCALLTYPE _Application_putref_ReplaceFormat_Proxy( 
    _Application * This,
    /* [in] */ CellFormat *RHS);


void __RPC_STUB _Application_putref_ReplaceFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UsedObjects_Proxy( 
    _Application * This,
    /* [retval][out] */ UsedObjects **RHS);


void __RPC_STUB _Application_get_UsedObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_CalculationState_Proxy( 
    _Application * This,
    /* [retval][out] */ XlCalculationState *RHS);


void __RPC_STUB _Application_get_CalculationState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_CalculationInterruptKey_Proxy( 
    _Application * This,
    /* [retval][out] */ XlCalculationInterruptKey *RHS);


void __RPC_STUB _Application_get_CalculationInterruptKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_CalculationInterruptKey_Proxy( 
    _Application * This,
    /* [in] */ XlCalculationInterruptKey RHS);


void __RPC_STUB _Application_put_CalculationInterruptKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Watches_Proxy( 
    _Application * This,
    /* [retval][out] */ Watches **RHS);


void __RPC_STUB _Application_get_Watches_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayFunctionToolTips_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayFunctionToolTips_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayFunctionToolTips_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayFunctionToolTips_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_AutomationSecurity_Proxy( 
    _Application * This,
    /* [retval][out] */ MsoAutomationSecurity *RHS);


void __RPC_STUB _Application_get_AutomationSecurity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_AutomationSecurity_Proxy( 
    _Application * This,
    /* [in] */ MsoAutomationSecurity RHS);


void __RPC_STUB _Application_put_AutomationSecurity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FileDialog_Proxy( 
    _Application * This,
    /* [in] */ MsoFileDialogType fileDialogType,
    /* [retval][out] */ FileDialog **RHS);


void __RPC_STUB _Application_get_FileDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_Dummy14_Proxy( 
    _Application * This);


void __RPC_STUB _Application_Dummy14_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_CalculateFullRebuild_Proxy( 
    _Application * This);


void __RPC_STUB _Application_CalculateFullRebuild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayPasteOptions_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayPasteOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayPasteOptions_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayPasteOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayInsertOptions_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayInsertOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayInsertOptions_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayInsertOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_GenerateGetPivotData_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_GenerateGetPivotData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_GenerateGetPivotData_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_GenerateGetPivotData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_AutoRecover_Proxy( 
    _Application * This,
    /* [retval][out] */ AutoRecover **RHS);


void __RPC_STUB _Application_get_AutoRecover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Hwnd_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_Hwnd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Hinstance_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_Hinstance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_CheckAbort_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT KeepAbort);


void __RPC_STUB _Application_CheckAbort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ErrorCheckingOptions_Proxy( 
    _Application * This,
    /* [retval][out] */ ErrorCheckingOptions **RHS);


void __RPC_STUB _Application_get_ErrorCheckingOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_AutoFormatAsYouTypeReplaceHyperlinks_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_AutoFormatAsYouTypeReplaceHyperlinks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_AutoFormatAsYouTypeReplaceHyperlinks_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_AutoFormatAsYouTypeReplaceHyperlinks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_SmartTagRecognizers_Proxy( 
    _Application * This,
    /* [retval][out] */ SmartTagRecognizers **RHS);


void __RPC_STUB _Application_get_SmartTagRecognizers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_NewWorkbook_Proxy( 
    _Application * This,
    /* [retval][out] */ NewFile **RHS);


void __RPC_STUB _Application_get_NewWorkbook_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_SpellingOptions_Proxy( 
    _Application * This,
    /* [retval][out] */ SpellingOptions **RHS);


void __RPC_STUB _Application_get_SpellingOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Speech_Proxy( 
    _Application * This,
    /* [retval][out] */ Speech **RHS);


void __RPC_STUB _Application_get_Speech_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MapPaperSize_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_MapPaperSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_MapPaperSize_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_MapPaperSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowStartupDialog_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowStartupDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowStartupDialog_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowStartupDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DecimalSeparator_Proxy( 
    _Application * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_DecimalSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DecimalSeparator_Proxy( 
    _Application * This,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_DecimalSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ThousandsSeparator_Proxy( 
    _Application * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Application_get_ThousandsSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ThousandsSeparator_Proxy( 
    _Application * This,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Application_put_ThousandsSeparator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_UseSystemSeparators_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_UseSystemSeparators_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_UseSystemSeparators_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_UseSystemSeparators_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ThisCell_Proxy( 
    _Application * This,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB _Application_get_ThisCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_RTD_Proxy( 
    _Application * This,
    /* [retval][out] */ RTD **RHS);


void __RPC_STUB _Application_get_RTD_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayDocumentActionTaskPane_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayDocumentActionTaskPane_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayDocumentActionTaskPane_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayDocumentActionTaskPane_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_DisplayXMLSourcePane_Proxy( 
    _Application * This,
    /* [optional][in] */ VARIANT XmlMap);


void __RPC_STUB _Application_DisplayXMLSourcePane_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ArbitraryXMLSupportAvailable_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ArbitraryXMLSupportAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_Support_Proxy( 
    _Application * This,
    /* [in] */ IDispatch *Object,
    /* [in] */ long ID,
    /* [optional][in] */ VARIANT arg,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_Support_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Application_Dummy20_Proxy( 
    _Application * This,
    /* [in] */ long grfCompareFunctions,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Application_Dummy20_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MeasurementUnit_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_MeasurementUnit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_MeasurementUnit_Proxy( 
    _Application * This,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_MeasurementUnit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowSelectionFloaties_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowSelectionFloaties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowSelectionFloaties_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowSelectionFloaties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowMenuFloaties_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowMenuFloaties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowMenuFloaties_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowMenuFloaties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ShowDevTools_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_ShowDevTools_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_ShowDevTools_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_ShowDevTools_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableLivePreview_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EnableLivePreview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableLivePreview_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EnableLivePreview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayDocumentInformationPanel_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayDocumentInformationPanel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayDocumentInformationPanel_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayDocumentInformationPanel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_AlwaysUseClearType_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_AlwaysUseClearType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_AlwaysUseClearType_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_AlwaysUseClearType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_WarnOnFunctionNameConflict_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_WarnOnFunctionNameConflict_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_WarnOnFunctionNameConflict_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_WarnOnFunctionNameConflict_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_FormulaBarHeight_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_FormulaBarHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_FormulaBarHeight_Proxy( 
    _Application * This,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_FormulaBarHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DisplayFormulaAutoComplete_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DisplayFormulaAutoComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DisplayFormulaAutoComplete_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DisplayFormulaAutoComplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_GenerateTableRefs_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ XlGenerateTableRefs *RHS);


void __RPC_STUB _Application_get_GenerateTableRefs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_GenerateTableRefs_Proxy( 
    _Application * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ XlGenerateTableRefs RHS);


void __RPC_STUB _Application_put_GenerateTableRefs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_Assistance_Proxy( 
    _Application * This,
    /* [retval][out] */ IAssistance **RHS);


void __RPC_STUB _Application_get_Assistance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_CalculateUntilAsyncQueriesDone_Proxy( 
    _Application * This);


void __RPC_STUB _Application_CalculateUntilAsyncQueriesDone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_EnableLargeOperationAlert_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_EnableLargeOperationAlert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_EnableLargeOperationAlert_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_EnableLargeOperationAlert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_LargeOperationCellThousandCount_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_LargeOperationCellThousandCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_LargeOperationCellThousandCount_Proxy( 
    _Application * This,
    /* [in] */ long RHS);


void __RPC_STUB _Application_put_LargeOperationCellThousandCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_DeferAsyncQueries_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_DeferAsyncQueries_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_DeferAsyncQueries_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_DeferAsyncQueries_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_MultiThreadedCalculation_Proxy( 
    _Application * This,
    /* [retval][out] */ MultiThreadedCalculation **RHS);


void __RPC_STUB _Application_get_MultiThreadedCalculation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Application_SharePointVersion_Proxy( 
    _Application * This,
    /* [in] */ BSTR bstrUrl,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_SharePointVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_ActiveEncryptionSession_Proxy( 
    _Application * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Application_get_ActiveEncryptionSession_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Application_get_HighQualityModeForGraphics_Proxy( 
    _Application * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Application_get_HighQualityModeForGraphics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Application_put_HighQualityModeForGraphics_Proxy( 
    _Application * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Application_put_HighQualityModeForGraphics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___Application_INTERFACE_DEFINED__ */


#ifndef __Workbooks_INTERFACE_DEFINED__
#define __Workbooks_INTERFACE_DEFINED__

/* interface Workbooks */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Workbooks;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208DB-0000-0000-C000-000000000046")
    Workbooks : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Template,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Open( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT UpdateLinks,
            /* [optional][in] */ VARIANT ReadOnly,
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT IgnoreReadOnlyRecommended,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT Delimiter,
            /* [optional][in] */ VARIANT Editable,
            /* [optional][in] */ VARIANT Notify,
            /* [optional][in] */ VARIANT Converter,
            /* [optional][in] */ VARIANT AddToMru,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE __OpenText( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT StartRow,
            /* [optional][in] */ VARIANT DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__Default( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _OpenText( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT StartRow,
            /* [optional][in] */ VARIANT DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT DecimalSeparator,
            /* [optional][in] */ VARIANT ThousandsSeparator,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Open( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT UpdateLinks,
            /* [optional][in] */ VARIANT ReadOnly,
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT IgnoreReadOnlyRecommended,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT Delimiter,
            /* [optional][in] */ VARIANT Editable,
            /* [optional][in] */ VARIANT Notify,
            /* [optional][in] */ VARIANT Converter,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT Local,
            /* [optional][in] */ VARIANT CorruptLoad,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenText( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT StartRow,
            /* [optional][in] */ VARIANT DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT DecimalSeparator,
            /* [optional][in] */ VARIANT ThousandsSeparator,
            /* [optional][in] */ VARIANT TrailingMinusNumbers,
            /* [optional][in] */ VARIANT Local,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenDatabase( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT CommandText,
            /* [optional][in] */ VARIANT CommandType,
            /* [optional][in] */ VARIANT BackgroundQuery,
            /* [optional][in] */ VARIANT ImportDataAs,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckOut( 
            /* [in] */ BSTR Filename) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanCheckOut( 
            /* [in] */ BSTR Filename,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _OpenXML( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Stylesheets,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenXML( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Stylesheets,
            /* [optional][in] */ VARIANT LoadOption,
            /* [retval][out] */ Workbook	**RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct WorkbooksVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Workbooks * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Workbooks * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Workbooks * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Workbooks * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Workbooks * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Workbooks * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Workbooks * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Workbooks * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Workbooks * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Workbooks * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Workbooks * This,
            /* [optional][in] */ VARIANT Template,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            Workbooks * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Workbooks * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Workbooks * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            Workbooks * This,
            /* [retval][out] */ IUnknown **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_Open )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT UpdateLinks,
            /* [optional][in] */ VARIANT ReadOnly,
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT IgnoreReadOnlyRecommended,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT Delimiter,
            /* [optional][in] */ VARIANT Editable,
            /* [optional][in] */ VARIANT Notify,
            /* [optional][in] */ VARIANT Converter,
            /* [optional][in] */ VARIANT AddToMru,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *__OpenText )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT StartRow,
            /* [optional][in] */ VARIANT DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__Default )( 
            Workbooks * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_OpenText )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT StartRow,
            /* [optional][in] */ VARIANT DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT DecimalSeparator,
            /* [optional][in] */ VARIANT ThousandsSeparator,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Open )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT UpdateLinks,
            /* [optional][in] */ VARIANT ReadOnly,
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT IgnoreReadOnlyRecommended,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT Delimiter,
            /* [optional][in] */ VARIANT Editable,
            /* [optional][in] */ VARIANT Notify,
            /* [optional][in] */ VARIANT Converter,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT Local,
            /* [optional][in] */ VARIANT CorruptLoad,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenText )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Origin,
            /* [optional][in] */ VARIANT StartRow,
            /* [optional][in] */ VARIANT DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT DecimalSeparator,
            /* [optional][in] */ VARIANT ThousandsSeparator,
            /* [optional][in] */ VARIANT TrailingMinusNumbers,
            /* [optional][in] */ VARIANT Local,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenDatabase )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT CommandText,
            /* [optional][in] */ VARIANT CommandType,
            /* [optional][in] */ VARIANT BackgroundQuery,
            /* [optional][in] */ VARIANT ImportDataAs,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckOut )( 
            Workbooks * This,
            /* [in] */ BSTR Filename);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanCheckOut )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_OpenXML )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Stylesheets,
            /* [retval][out] */ Workbook	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenXML )( 
            Workbooks * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT Stylesheets,
            /* [optional][in] */ VARIANT LoadOption,
            /* [retval][out] */ Workbook	**RHS);
        
        END_INTERFACE
    } WorkbooksVtbl;

    interface Workbooks
    {
        CONST_VTBL struct WorkbooksVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Workbooks_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Workbooks_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Workbooks_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Workbooks_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Workbooks_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Workbooks_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Workbooks_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Workbooks_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define Workbooks_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define Workbooks_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define Workbooks_Add(This,Template,lcid,RHS)	\
    ( (This)->lpVtbl -> Add(This,Template,lcid,RHS) ) 

#define Workbooks_Close(This,lcid)	\
    ( (This)->lpVtbl -> Close(This,lcid) ) 

#define Workbooks_get_Count(This,RHS)	\
    ( (This)->lpVtbl -> get_Count(This,RHS) ) 

#define Workbooks_get_Item(This,Index,RHS)	\
    ( (This)->lpVtbl -> get_Item(This,Index,RHS) ) 

#define Workbooks_get__NewEnum(This,RHS)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RHS) ) 

#define Workbooks__Open(This,Filename,UpdateLinks,ReadOnly,Format,Password,WriteResPassword,IgnoreReadOnlyRecommended,Origin,Delimiter,Editable,Notify,Converter,AddToMru,lcid,RHS)	\
    ( (This)->lpVtbl -> _Open(This,Filename,UpdateLinks,ReadOnly,Format,Password,WriteResPassword,IgnoreReadOnlyRecommended,Origin,Delimiter,Editable,Notify,Converter,AddToMru,lcid,RHS) ) 

#define Workbooks___OpenText(This,Filename,Origin,StartRow,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,TextVisualLayout,lcid)	\
    ( (This)->lpVtbl -> __OpenText(This,Filename,Origin,StartRow,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,TextVisualLayout,lcid) ) 

#define Workbooks_get__Default(This,Index,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,Index,RHS) ) 

#define Workbooks__OpenText(This,Filename,Origin,StartRow,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,TextVisualLayout,DecimalSeparator,ThousandsSeparator,lcid)	\
    ( (This)->lpVtbl -> _OpenText(This,Filename,Origin,StartRow,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,TextVisualLayout,DecimalSeparator,ThousandsSeparator,lcid) ) 

#define Workbooks_Open(This,Filename,UpdateLinks,ReadOnly,Format,Password,WriteResPassword,IgnoreReadOnlyRecommended,Origin,Delimiter,Editable,Notify,Converter,AddToMru,Local,CorruptLoad,lcid,RHS)	\
    ( (This)->lpVtbl -> Open(This,Filename,UpdateLinks,ReadOnly,Format,Password,WriteResPassword,IgnoreReadOnlyRecommended,Origin,Delimiter,Editable,Notify,Converter,AddToMru,Local,CorruptLoad,lcid,RHS) ) 

#define Workbooks_OpenText(This,Filename,Origin,StartRow,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,TextVisualLayout,DecimalSeparator,ThousandsSeparator,TrailingMinusNumbers,Local,lcid)	\
    ( (This)->lpVtbl -> OpenText(This,Filename,Origin,StartRow,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,TextVisualLayout,DecimalSeparator,ThousandsSeparator,TrailingMinusNumbers,Local,lcid) ) 

#define Workbooks_OpenDatabase(This,Filename,CommandText,CommandType,BackgroundQuery,ImportDataAs,RHS)	\
    ( (This)->lpVtbl -> OpenDatabase(This,Filename,CommandText,CommandType,BackgroundQuery,ImportDataAs,RHS) ) 

#define Workbooks_CheckOut(This,Filename)	\
    ( (This)->lpVtbl -> CheckOut(This,Filename) ) 

#define Workbooks_CanCheckOut(This,Filename,RHS)	\
    ( (This)->lpVtbl -> CanCheckOut(This,Filename,RHS) ) 

#define Workbooks__OpenXML(This,Filename,Stylesheets,RHS)	\
    ( (This)->lpVtbl -> _OpenXML(This,Filename,Stylesheets,RHS) ) 

#define Workbooks_OpenXML(This,Filename,Stylesheets,LoadOption,RHS)	\
    ( (This)->lpVtbl -> OpenXML(This,Filename,Stylesheets,LoadOption,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Workbooks_INTERFACE_DEFINED__ */


#ifndef ___Workbook_INTERFACE_DEFINED__
#define ___Workbook_INTERFACE_DEFINED__

/* interface _Workbook */
/* [object][oleautomation][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Workbook;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208DA-0000-0000-C000-000000000046")
    _Workbook : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_AcceptLabelsInFormulas( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_AcceptLabelsInFormulas( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveChart( 
            /* [retval][out] */ Chart **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ActiveSheet( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Author( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Author( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoUpdateFrequency( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoUpdateFrequency( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoUpdateSaveChanges( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoUpdateSaveChanges( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ChangeHistoryDuration( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ChangeHistoryDuration( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_BuiltinDocumentProperties( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ChangeFileAccess( 
            /* [in] */ XlFileAccess Mode,
            /* [optional][in] */ VARIANT WritePassword,
            /* [optional][in] */ VARIANT Notify,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ChangeLink( 
            /* [in] */ BSTR Name,
            /* [in] */ BSTR NewName,
            /* [defaultvalue][optional][in] */ XlLinkType Type,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Charts( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Close( 
            /* [optional][in] */ VARIANT SaveChanges,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT RouteWorkbook,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeName( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__CodeName( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put__CodeName( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Colors( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Colors( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CommandBars( 
            /* [retval][out] */ CommandBars **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Comments( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConflictResolution( 
            /* [retval][out] */ XlSaveConflictResolution *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConflictResolution( 
            /* [in] */ XlSaveConflictResolution RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Container( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CreateBackup( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomDocumentProperties( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Date1904( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Date1904( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE DeleteNumberFormat( 
            /* [in] */ BSTR NumberFormat,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_DialogSheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayDrawingObjects( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlDisplayDrawingObjects *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayDrawingObjects( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlDisplayDrawingObjects RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ExclusiveAccess( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FileFormat( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlFileFormat *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ForwardMailer( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasMailer( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_HasMailer( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasPassword( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasRoutingSlip( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_HasRoutingSlip( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsAddin( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsAddin( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Keywords( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Keywords( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LinkInfo( 
            /* [in] */ BSTR Name,
            /* [in] */ XlLinkInfo LinkInfo,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT EditionRef,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LinkSources( 
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Mailer( 
            /* [retval][out] */ Mailer **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE MergeWorkbook( 
            /* [in] */ VARIANT Filename) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Modules( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MultiUserEditing( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Names( 
            /* [retval][out] */ Names	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE NewWindow( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Window **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSave( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSave( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSheetActivate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSheetActivate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSheetDeactivate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSheetDeactivate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OpenLinks( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT ReadOnly,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Path( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PersonalViewListSettings( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PersonalViewListSettings( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PersonalViewPrintSettings( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PersonalViewPrintSettings( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Pivotcaches( 
            /* [retval][out] */ PivotCaches	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Post( 
            /* [optional][in] */ VARIANT DestName,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PrecisionAsDisplayed( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_PrecisionAsDisplayed( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE __PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintPreview( 
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Protect( 
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT Structure,
            /* [optional][in] */ VARIANT Windows) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _ProtectSharing( 
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT SharingPassword) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectStructure( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectWindows( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReadOnly( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get__ReadOnlyRecommended( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RefreshAll( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Reply( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyAll( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveUser( 
            /* [in] */ long Index) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RevisionNumber( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Route( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Routed( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_RoutingSlip( 
            /* [retval][out] */ RoutingSlip **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RunAutoMacros( 
            /* [in] */ XlRunAutoMacro Which,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Save( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _SaveAs( 
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [defaultvalue][optional][in] */ XlSaveAsAccessMode AccessMode,
            /* [optional][in] */ VARIANT ConflictResolution,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveCopyAs( 
            /* [optional][in] */ VARIANT Filename,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Saved( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Saved( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SaveLinkValues( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_SaveLinkValues( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SendMail( 
            /* [in] */ VARIANT Recipients,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT ReturnReceipt,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SendMailer( 
            /* [optional][in] */ VARIANT FileFormat,
            /* [defaultvalue][optional][in] */ XlPriority Priority,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetLinkOnData( 
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Procedure,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowConflictHistory( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowConflictHistory( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Styles( 
            /* [retval][out] */ Styles **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Subject( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Subject( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Title( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_Title( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Unprotect( 
            /* [optional][in] */ VARIANT Password,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE UnprotectSharing( 
            /* [optional][in] */ VARIANT SharingPassword) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE UpdateFromFile( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE UpdateLink( 
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpdateRemoteReferences( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UpdateRemoteReferences( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserControl( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_UserControl( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UserStatus( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomViews( 
            /* [retval][out] */ CustomViews **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Windows( 
            /* [retval][out] */ Windows **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Worksheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WriteReserved( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WriteReservedBy( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Excel4IntlMacroSheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Excel4MacroSheets( 
            /* [retval][out] */ Sheets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TemplateRemoveExtData( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TemplateRemoveExtData( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE HighlightChangesOptions( 
            /* [optional][in] */ VARIANT When,
            /* [optional][in] */ VARIANT Who,
            /* [optional][in] */ VARIANT Where) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HighlightChangesOnScreen( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_HighlightChangesOnScreen( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_KeepChangeHistory( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_KeepChangeHistory( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListChangesOnNewSheet( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ListChangesOnNewSheet( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PurgeChangeHistoryNow( 
            /* [in] */ long Days,
            /* [optional][in] */ VARIANT SharingPassword) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AcceptAllChanges( 
            /* [optional][in] */ VARIANT When,
            /* [optional][in] */ VARIANT Who,
            /* [optional][in] */ VARIANT Where) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RejectAllChanges( 
            /* [optional][in] */ VARIANT When,
            /* [optional][in] */ VARIANT Who,
            /* [optional][in] */ VARIANT Where) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE PivotTableWizard( 
            /* [optional][in] */ VARIANT SourceType,
            /* [optional][in] */ VARIANT SourceData,
            /* [optional][in] */ VARIANT TableDestination,
            /* [optional][in] */ VARIANT TableName,
            /* [optional][in] */ VARIANT RowGrand,
            /* [optional][in] */ VARIANT ColumnGrand,
            /* [optional][in] */ VARIANT SaveData,
            /* [optional][in] */ VARIANT HasAutoFormat,
            /* [optional][in] */ VARIANT AutoPage,
            /* [optional][in] */ VARIANT Reserved,
            /* [optional][in] */ VARIANT BackgroundQuery,
            /* [optional][in] */ VARIANT OptimizeCache,
            /* [optional][in] */ VARIANT PageFieldOrder,
            /* [optional][in] */ VARIANT PageFieldWrapCount,
            /* [optional][in] */ VARIANT ReadData,
            /* [optional][in] */ VARIANT Connection,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetColors( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VBProject( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FollowHyperlink( 
            /* [in] */ BSTR Address,
            /* [optional][in] */ VARIANT SubAddress,
            /* [optional][in] */ VARIANT NewWindow,
            /* [optional][in] */ VARIANT AddHistory,
            /* [optional][in] */ VARIANT ExtraInfo,
            /* [optional][in] */ VARIANT Method,
            /* [optional][in] */ VARIANT HeaderInfo) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE AddToFavorites( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsInplace( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE WebPagePreview( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PublishObjects( 
            /* [retval][out] */ PublishObjects **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WebOptions( 
            /* [retval][out] */ WebOptions **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReloadAs( 
            /* [in] */ MsoEncoding Encoding) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_HTMLProject( 
            /* [retval][out] */ HTMLProject **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnvelopeVisible( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnvelopeVisible( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CalculationVersion( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy17( 
            /* [in] */ long calcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE sblt( 
            /* [in] */ BSTR s) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VBASigned( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowPivotTableFieldList( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowPivotTableFieldList( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UpdateLinks( 
            /* [retval][out] */ XlUpdateLinks *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_UpdateLinks( 
            /* [in] */ XlUpdateLinks RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE BreakLink( 
            /* [in] */ BSTR Name,
            /* [in] */ XlLinkType Type) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Dummy16( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [defaultvalue][optional][in] */ XlSaveAsAccessMode AccessMode,
            /* [optional][in] */ VARIANT ConflictResolution,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT Local,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableAutoRecover( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableAutoRecover( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_RemovePersonalInformation( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_RemovePersonalInformation( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FullNameURLEncoded( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckIn( 
            /* [optional][in] */ VARIANT SaveChanges,
            /* [optional][in] */ VARIANT Comments,
            /* [optional][in] */ VARIANT MakePublic) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CanCheckIn( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SendForReview( 
            /* [optional][in] */ VARIANT Recipients,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT ShowMessage,
            /* [optional][in] */ VARIANT IncludeAttachment) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ReplyWithChanges( 
            /* [optional][in] */ VARIANT ShowMessage) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE EndReview( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Password( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Password( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_WritePassword( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_WritePassword( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PasswordEncryptionProvider( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PasswordEncryptionAlgorithm( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PasswordEncryptionKeyLength( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetPasswordEncryptionOptions( 
            /* [optional][in] */ VARIANT PasswordEncryptionProvider,
            /* [optional][in] */ VARIANT PasswordEncryptionAlgorithm,
            /* [optional][in] */ VARIANT PasswordEncryptionKeyLength,
            /* [optional][in] */ VARIANT PasswordEncryptionFileProperties) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PasswordEncryptionFileProperties( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ReadOnlyRecommended( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ReadOnlyRecommended( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Protect( 
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT Structure,
            /* [optional][in] */ VARIANT Windows) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SmartTagOptions( 
            /* [retval][out] */ SmartTagOptions **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RecheckSmartTags( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Permission( 
            /* [retval][out] */ Permission **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SharedWorkspace( 
            /* [retval][out] */ SharedWorkspace **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sync( 
            /* [retval][out] */ Sync **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SendFaxOverInternet( 
            /* [optional][in] */ VARIANT Recipients,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT ShowMessage) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XmlNamespaces( 
            /* [retval][out] */ XmlNamespaces **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_XmlMaps( 
            /* [retval][out] */ XmlMaps **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE XmlImport( 
            /* [in] */ BSTR Url,
            /* [out] */ XmlMap **ImportMap,
            /* [optional][in] */ VARIANT Overwrite,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ XlXmlImportResult *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SmartDocument( 
            /* [retval][out] */ SmartDocument **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocumentLibraryVersions( 
            /* [retval][out] */ DocumentLibraryVersions **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_InactiveListBorderVisible( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_InactiveListBorderVisible( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayInkComments( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayInkComments( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE XmlImportXml( 
            /* [in] */ BSTR Data,
            /* [out] */ XmlMap **ImportMap,
            /* [optional][in] */ VARIANT Overwrite,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ XlXmlImportResult *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAsXMLData( 
            /* [in] */ BSTR Filename,
            /* [in] */ XmlMap *Map) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ToggleFormsDesign( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ContentTypeProperties( 
            /* [retval][out] */ MetaProperties **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Connections( 
            /* [retval][out] */ Connections **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE RemoveDocumentInformation( 
            /* [in] */ XlRemoveDocInfoType RemoveDocInfoType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Signatures( 
            /* [retval][out] */ SignatureSet **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckInWithVersion( 
            /* [optional][in] */ VARIANT SaveChanges,
            /* [optional][in] */ VARIANT Comments,
            /* [optional][in] */ VARIANT MakePublic,
            /* [optional][in] */ VARIANT VersionType) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ServerPolicy( 
            /* [retval][out] */ ServerPolicy **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE LockServerFile( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DocumentInspectors( 
            /* [retval][out] */ DocumentInspectors **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetWorkflowTasks( 
            /* [retval][out] */ WorkflowTasks **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE GetWorkflowTemplates( 
            /* [retval][out] */ WorkflowTemplates **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ServerViewableItems( 
            /* [retval][out] */ ServerViewableItems **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TableStyles( 
            /* [retval][out] */ TableStyles **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultTableStyle( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultTableStyle( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DefaultPivotTableStyle( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DefaultPivotTableStyle( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CheckCompatibility( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_CheckCompatibility( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HasVBProject( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomXMLParts( 
            /* [retval][out] */ CustomXMLParts **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Final( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Final( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Research( 
            /* [retval][out] */ Research **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Theme( 
            /* [retval][out] */ OfficeTheme **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ApplyTheme( 
            /* [in] */ BSTR Filename) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Excel8CompatibilityMode( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConnectionsDisabled( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE EnableConnections( void) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowPivotChartActiveFields( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowPivotChartActiveFields( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ExportAsFixedFormat( 
            /* [in] */ XlFixedFormatType Type,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Quality,
            /* [optional][in] */ VARIANT IncludeDocProperties,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT OpenAfterPublish,
            /* [optional][in] */ VARIANT FixedFormatExtClassPtr) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_IconSets( 
            /* [retval][out] */ IconSets **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EncryptionProvider( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EncryptionProvider( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DoNotPromptForConvert( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DoNotPromptForConvert( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ForceFullCalculation( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ForceFullCalculation( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ProtectSharing( 
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT SharingPassword,
            /* [optional][in] */ VARIANT FileFormat) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _WorkbookVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Workbook * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Workbook * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Workbook * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Workbook * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Workbook * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Workbook * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Workbook * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Workbook * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _Workbook * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Workbook * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AcceptLabelsInFormulas )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AcceptLabelsInFormulas )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveChart )( 
            _Workbook * This,
            /* [retval][out] */ Chart **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActiveSheet )( 
            _Workbook * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Author )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Author )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoUpdateFrequency )( 
            _Workbook * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoUpdateFrequency )( 
            _Workbook * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoUpdateSaveChanges )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoUpdateSaveChanges )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChangeHistoryDuration )( 
            _Workbook * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ChangeHistoryDuration )( 
            _Workbook * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BuiltinDocumentProperties )( 
            _Workbook * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ChangeFileAccess )( 
            _Workbook * This,
            /* [in] */ XlFileAccess Mode,
            /* [optional][in] */ VARIANT WritePassword,
            /* [optional][in] */ VARIANT Notify,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ChangeLink )( 
            _Workbook * This,
            /* [in] */ BSTR Name,
            /* [in] */ BSTR NewName,
            /* [defaultvalue][optional][in] */ XlLinkType Type,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Charts )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT SaveChanges,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT RouteWorkbook,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeName )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__CodeName )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put__CodeName )( 
            _Workbook * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Colors )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Colors )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CommandBars )( 
            _Workbook * This,
            /* [retval][out] */ CommandBars **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Comments )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConflictResolution )( 
            _Workbook * This,
            /* [retval][out] */ XlSaveConflictResolution *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ConflictResolution )( 
            _Workbook * This,
            /* [in] */ XlSaveConflictResolution RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Container )( 
            _Workbook * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CreateBackup )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomDocumentProperties )( 
            _Workbook * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Date1904 )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Date1904 )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteNumberFormat )( 
            _Workbook * This,
            /* [in] */ BSTR NumberFormat,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DialogSheets )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayDrawingObjects )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlDisplayDrawingObjects *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayDrawingObjects )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlDisplayDrawingObjects RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ExclusiveAccess )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FileFormat )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlFileFormat *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ForwardMailer )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasMailer )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HasMailer )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasPassword )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasRoutingSlip )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HasRoutingSlip )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsAddin )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_IsAddin )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Keywords )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Keywords )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LinkInfo )( 
            _Workbook * This,
            /* [in] */ BSTR Name,
            /* [in] */ XlLinkInfo LinkInfo,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT EditionRef,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LinkSources )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Mailer )( 
            _Workbook * This,
            /* [retval][out] */ Mailer **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *MergeWorkbook )( 
            _Workbook * This,
            /* [in] */ VARIANT Filename);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Modules )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MultiUserEditing )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Names )( 
            _Workbook * This,
            /* [retval][out] */ Names	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *NewWindow )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Window **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSave )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSave )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSheetActivate )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSheetActivate )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSheetDeactivate )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSheetDeactivate )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OpenLinks )( 
            _Workbook * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT ReadOnly,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Path )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PersonalViewListSettings )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PersonalViewListSettings )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PersonalViewPrintSettings )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PersonalViewPrintSettings )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Pivotcaches )( 
            _Workbook * This,
            /* [retval][out] */ PivotCaches	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Post )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT DestName,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PrecisionAsDisplayed )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PrecisionAsDisplayed )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *__PrintOut )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintPreview )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_Protect )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT Structure,
            /* [optional][in] */ VARIANT Windows);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_ProtectSharing )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT SharingPassword);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectStructure )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectWindows )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__ReadOnlyRecommended )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RefreshAll )( 
            _Workbook * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Reply )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyAll )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveUser )( 
            _Workbook * This,
            /* [in] */ long Index);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RevisionNumber )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Route )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Routed )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RoutingSlip )( 
            _Workbook * This,
            /* [retval][out] */ RoutingSlip **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RunAutoMacros )( 
            _Workbook * This,
            /* [in] */ XlRunAutoMacro Which,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Save )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_SaveAs )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [defaultvalue][optional][in] */ XlSaveAsAccessMode AccessMode,
            /* [optional][in] */ VARIANT ConflictResolution,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveCopyAs )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Filename,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Saved )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Saved )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SaveLinkValues )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SaveLinkValues )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SendMail )( 
            _Workbook * This,
            /* [in] */ VARIANT Recipients,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT ReturnReceipt,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SendMailer )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT FileFormat,
            /* [defaultvalue][optional][in] */ XlPriority Priority,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetLinkOnData )( 
            _Workbook * This,
            /* [in] */ BSTR Name,
            /* [optional][in] */ VARIANT Procedure,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sheets )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowConflictHistory )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowConflictHistory )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Styles )( 
            _Workbook * This,
            /* [retval][out] */ Styles **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Subject )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Subject )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Title )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Title )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Unprotect )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Password,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UnprotectSharing )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT SharingPassword);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateFromFile )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *UpdateLink )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpdateRemoteReferences )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UpdateRemoteReferences )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserControl )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserControl )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserStatus )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomViews )( 
            _Workbook * This,
            /* [retval][out] */ CustomViews **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Windows )( 
            _Workbook * This,
            /* [retval][out] */ Windows **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Worksheets )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WriteReserved )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WriteReservedBy )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Excel4IntlMacroSheets )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Excel4MacroSheets )( 
            _Workbook * This,
            /* [retval][out] */ Sheets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TemplateRemoveExtData )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TemplateRemoveExtData )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *HighlightChangesOptions )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT When,
            /* [optional][in] */ VARIANT Who,
            /* [optional][in] */ VARIANT Where);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HighlightChangesOnScreen )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HighlightChangesOnScreen )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_KeepChangeHistory )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_KeepChangeHistory )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListChangesOnNewSheet )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ListChangesOnNewSheet )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PurgeChangeHistoryNow )( 
            _Workbook * This,
            /* [in] */ long Days,
            /* [optional][in] */ VARIANT SharingPassword);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AcceptAllChanges )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT When,
            /* [optional][in] */ VARIANT Who,
            /* [optional][in] */ VARIANT Where);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RejectAllChanges )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT When,
            /* [optional][in] */ VARIANT Who,
            /* [optional][in] */ VARIANT Where);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *PivotTableWizard )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT SourceType,
            /* [optional][in] */ VARIANT SourceData,
            /* [optional][in] */ VARIANT TableDestination,
            /* [optional][in] */ VARIANT TableName,
            /* [optional][in] */ VARIANT RowGrand,
            /* [optional][in] */ VARIANT ColumnGrand,
            /* [optional][in] */ VARIANT SaveData,
            /* [optional][in] */ VARIANT HasAutoFormat,
            /* [optional][in] */ VARIANT AutoPage,
            /* [optional][in] */ VARIANT Reserved,
            /* [optional][in] */ VARIANT BackgroundQuery,
            /* [optional][in] */ VARIANT OptimizeCache,
            /* [optional][in] */ VARIANT PageFieldOrder,
            /* [optional][in] */ VARIANT PageFieldWrapCount,
            /* [optional][in] */ VARIANT ReadData,
            /* [optional][in] */ VARIANT Connection,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetColors )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VBProject )( 
            _Workbook * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FollowHyperlink )( 
            _Workbook * This,
            /* [in] */ BSTR Address,
            /* [optional][in] */ VARIANT SubAddress,
            /* [optional][in] */ VARIANT NewWindow,
            /* [optional][in] */ VARIANT AddHistory,
            /* [optional][in] */ VARIANT ExtraInfo,
            /* [optional][in] */ VARIANT Method,
            /* [optional][in] */ VARIANT HeaderInfo);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *AddToFavorites )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsInplace )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_PrintOut )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *WebPagePreview )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PublishObjects )( 
            _Workbook * This,
            /* [retval][out] */ PublishObjects **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WebOptions )( 
            _Workbook * This,
            /* [retval][out] */ WebOptions **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReloadAs )( 
            _Workbook * This,
            /* [in] */ MsoEncoding Encoding);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HTMLProject )( 
            _Workbook * This,
            /* [retval][out] */ HTMLProject **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnvelopeVisible )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnvelopeVisible )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CalculationVersion )( 
            _Workbook * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy17 )( 
            _Workbook * This,
            /* [in] */ long calcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *sblt )( 
            _Workbook * This,
            /* [in] */ BSTR s);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VBASigned )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPivotTableFieldList )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPivotTableFieldList )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UpdateLinks )( 
            _Workbook * This,
            /* [retval][out] */ XlUpdateLinks *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UpdateLinks )( 
            _Workbook * This,
            /* [in] */ XlUpdateLinks RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *BreakLink )( 
            _Workbook * This,
            /* [in] */ BSTR Name,
            /* [in] */ XlLinkType Type);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Dummy16 )( 
            _Workbook * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [defaultvalue][optional][in] */ XlSaveAsAccessMode AccessMode,
            /* [optional][in] */ VARIANT ConflictResolution,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT Local,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableAutoRecover )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableAutoRecover )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RemovePersonalInformation )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RemovePersonalInformation )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullNameURLEncoded )( 
            _Workbook * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckIn )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT SaveChanges,
            /* [optional][in] */ VARIANT Comments,
            /* [optional][in] */ VARIANT MakePublic);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CanCheckIn )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SendForReview )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Recipients,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT ShowMessage,
            /* [optional][in] */ VARIANT IncludeAttachment);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ReplyWithChanges )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT ShowMessage);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EndReview )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            _Workbook * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WritePassword )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WritePassword )( 
            _Workbook * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordEncryptionProvider )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordEncryptionAlgorithm )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordEncryptionKeyLength )( 
            _Workbook * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetPasswordEncryptionOptions )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT PasswordEncryptionProvider,
            /* [optional][in] */ VARIANT PasswordEncryptionAlgorithm,
            /* [optional][in] */ VARIANT PasswordEncryptionKeyLength,
            /* [optional][in] */ VARIANT PasswordEncryptionFileProperties);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PasswordEncryptionFileProperties )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnlyRecommended )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ReadOnlyRecommended )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Protect )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT Structure,
            /* [optional][in] */ VARIANT Windows);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SmartTagOptions )( 
            _Workbook * This,
            /* [retval][out] */ SmartTagOptions **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RecheckSmartTags )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Permission )( 
            _Workbook * This,
            /* [retval][out] */ Permission **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SharedWorkspace )( 
            _Workbook * This,
            /* [retval][out] */ SharedWorkspace **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sync )( 
            _Workbook * This,
            /* [retval][out] */ Sync **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SendFaxOverInternet )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Recipients,
            /* [optional][in] */ VARIANT Subject,
            /* [optional][in] */ VARIANT ShowMessage);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XmlNamespaces )( 
            _Workbook * This,
            /* [retval][out] */ XmlNamespaces **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XmlMaps )( 
            _Workbook * This,
            /* [retval][out] */ XmlMaps **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *XmlImport )( 
            _Workbook * This,
            /* [in] */ BSTR Url,
            /* [out] */ XmlMap **ImportMap,
            /* [optional][in] */ VARIANT Overwrite,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ XlXmlImportResult *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SmartDocument )( 
            _Workbook * This,
            /* [retval][out] */ SmartDocument **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentLibraryVersions )( 
            _Workbook * This,
            /* [retval][out] */ DocumentLibraryVersions **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InactiveListBorderVisible )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InactiveListBorderVisible )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayInkComments )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayInkComments )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *XmlImportXml )( 
            _Workbook * This,
            /* [in] */ BSTR Data,
            /* [out] */ XmlMap **ImportMap,
            /* [optional][in] */ VARIANT Overwrite,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ XlXmlImportResult *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAsXMLData )( 
            _Workbook * This,
            /* [in] */ BSTR Filename,
            /* [in] */ XmlMap *Map);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ToggleFormsDesign )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContentTypeProperties )( 
            _Workbook * This,
            /* [retval][out] */ MetaProperties **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Connections )( 
            _Workbook * This,
            /* [retval][out] */ Connections **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveDocumentInformation )( 
            _Workbook * This,
            /* [in] */ XlRemoveDocInfoType RemoveDocInfoType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Signatures )( 
            _Workbook * This,
            /* [retval][out] */ SignatureSet **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckInWithVersion )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT SaveChanges,
            /* [optional][in] */ VARIANT Comments,
            /* [optional][in] */ VARIANT MakePublic,
            /* [optional][in] */ VARIANT VersionType);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ServerPolicy )( 
            _Workbook * This,
            /* [retval][out] */ ServerPolicy **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *LockServerFile )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentInspectors )( 
            _Workbook * This,
            /* [retval][out] */ DocumentInspectors **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetWorkflowTasks )( 
            _Workbook * This,
            /* [retval][out] */ WorkflowTasks **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *GetWorkflowTemplates )( 
            _Workbook * This,
            /* [retval][out] */ WorkflowTemplates **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ServerViewableItems )( 
            _Workbook * This,
            /* [retval][out] */ ServerViewableItems **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TableStyles )( 
            _Workbook * This,
            /* [retval][out] */ TableStyles **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultTableStyle )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultTableStyle )( 
            _Workbook * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DefaultPivotTableStyle )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DefaultPivotTableStyle )( 
            _Workbook * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CheckCompatibility )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CheckCompatibility )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasVBProject )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomXMLParts )( 
            _Workbook * This,
            /* [retval][out] */ CustomXMLParts **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Final )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Final )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Research )( 
            _Workbook * This,
            /* [retval][out] */ Research **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Theme )( 
            _Workbook * This,
            /* [retval][out] */ OfficeTheme **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ApplyTheme )( 
            _Workbook * This,
            /* [in] */ BSTR Filename);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Excel8CompatibilityMode )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionsDisabled )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *EnableConnections )( 
            _Workbook * This);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowPivotChartActiveFields )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowPivotChartActiveFields )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ExportAsFixedFormat )( 
            _Workbook * This,
            /* [in] */ XlFixedFormatType Type,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Quality,
            /* [optional][in] */ VARIANT IncludeDocProperties,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT OpenAfterPublish,
            /* [optional][in] */ VARIANT FixedFormatExtClassPtr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IconSets )( 
            _Workbook * This,
            /* [retval][out] */ IconSets **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EncryptionProvider )( 
            _Workbook * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EncryptionProvider )( 
            _Workbook * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DoNotPromptForConvert )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DoNotPromptForConvert )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ForceFullCalculation )( 
            _Workbook * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ForceFullCalculation )( 
            _Workbook * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ProtectSharing )( 
            _Workbook * This,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT SharingPassword,
            /* [optional][in] */ VARIANT FileFormat);
        
        END_INTERFACE
    } _WorkbookVtbl;

    interface _Workbook
    {
        CONST_VTBL struct _WorkbookVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Workbook_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Workbook_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Workbook_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Workbook_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Workbook_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Workbook_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Workbook_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Workbook_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define _Workbook_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define _Workbook_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define _Workbook_get_AcceptLabelsInFormulas(This,RHS)	\
    ( (This)->lpVtbl -> get_AcceptLabelsInFormulas(This,RHS) ) 

#define _Workbook_put_AcceptLabelsInFormulas(This,RHS)	\
    ( (This)->lpVtbl -> put_AcceptLabelsInFormulas(This,RHS) ) 

#define _Workbook_Activate(This,lcid)	\
    ( (This)->lpVtbl -> Activate(This,lcid) ) 

#define _Workbook_get_ActiveChart(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveChart(This,RHS) ) 

#define _Workbook_get_ActiveSheet(This,RHS)	\
    ( (This)->lpVtbl -> get_ActiveSheet(This,RHS) ) 

#define _Workbook_get_Author(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Author(This,lcid,RHS) ) 

#define _Workbook_put_Author(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Author(This,lcid,RHS) ) 

#define _Workbook_get_AutoUpdateFrequency(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoUpdateFrequency(This,RHS) ) 

#define _Workbook_put_AutoUpdateFrequency(This,RHS)	\
    ( (This)->lpVtbl -> put_AutoUpdateFrequency(This,RHS) ) 

#define _Workbook_get_AutoUpdateSaveChanges(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoUpdateSaveChanges(This,RHS) ) 

#define _Workbook_put_AutoUpdateSaveChanges(This,RHS)	\
    ( (This)->lpVtbl -> put_AutoUpdateSaveChanges(This,RHS) ) 

#define _Workbook_get_ChangeHistoryDuration(This,RHS)	\
    ( (This)->lpVtbl -> get_ChangeHistoryDuration(This,RHS) ) 

#define _Workbook_put_ChangeHistoryDuration(This,RHS)	\
    ( (This)->lpVtbl -> put_ChangeHistoryDuration(This,RHS) ) 

#define _Workbook_get_BuiltinDocumentProperties(This,RHS)	\
    ( (This)->lpVtbl -> get_BuiltinDocumentProperties(This,RHS) ) 

#define _Workbook_ChangeFileAccess(This,Mode,WritePassword,Notify,lcid)	\
    ( (This)->lpVtbl -> ChangeFileAccess(This,Mode,WritePassword,Notify,lcid) ) 

#define _Workbook_ChangeLink(This,Name,NewName,Type,lcid)	\
    ( (This)->lpVtbl -> ChangeLink(This,Name,NewName,Type,lcid) ) 

#define _Workbook_get_Charts(This,RHS)	\
    ( (This)->lpVtbl -> get_Charts(This,RHS) ) 

#define _Workbook_Close(This,SaveChanges,Filename,RouteWorkbook,lcid)	\
    ( (This)->lpVtbl -> Close(This,SaveChanges,Filename,RouteWorkbook,lcid) ) 

#define _Workbook_get_CodeName(This,RHS)	\
    ( (This)->lpVtbl -> get_CodeName(This,RHS) ) 

#define _Workbook_get__CodeName(This,RHS)	\
    ( (This)->lpVtbl -> get__CodeName(This,RHS) ) 

#define _Workbook_put__CodeName(This,RHS)	\
    ( (This)->lpVtbl -> put__CodeName(This,RHS) ) 

#define _Workbook_get_Colors(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Colors(This,Index,lcid,RHS) ) 

#define _Workbook_put_Colors(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Colors(This,Index,lcid,RHS) ) 

#define _Workbook_get_CommandBars(This,RHS)	\
    ( (This)->lpVtbl -> get_CommandBars(This,RHS) ) 

#define _Workbook_get_Comments(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Comments(This,lcid,RHS) ) 

#define _Workbook_put_Comments(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Comments(This,lcid,RHS) ) 

#define _Workbook_get_ConflictResolution(This,RHS)	\
    ( (This)->lpVtbl -> get_ConflictResolution(This,RHS) ) 

#define _Workbook_put_ConflictResolution(This,RHS)	\
    ( (This)->lpVtbl -> put_ConflictResolution(This,RHS) ) 

#define _Workbook_get_Container(This,RHS)	\
    ( (This)->lpVtbl -> get_Container(This,RHS) ) 

#define _Workbook_get_CreateBackup(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CreateBackup(This,lcid,RHS) ) 

#define _Workbook_get_CustomDocumentProperties(This,RHS)	\
    ( (This)->lpVtbl -> get_CustomDocumentProperties(This,RHS) ) 

#define _Workbook_get_Date1904(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Date1904(This,lcid,RHS) ) 

#define _Workbook_put_Date1904(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Date1904(This,lcid,RHS) ) 

#define _Workbook_DeleteNumberFormat(This,NumberFormat,lcid)	\
    ( (This)->lpVtbl -> DeleteNumberFormat(This,NumberFormat,lcid) ) 

#define _Workbook_get_DialogSheets(This,RHS)	\
    ( (This)->lpVtbl -> get_DialogSheets(This,RHS) ) 

#define _Workbook_get_DisplayDrawingObjects(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayDrawingObjects(This,lcid,RHS) ) 

#define _Workbook_put_DisplayDrawingObjects(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayDrawingObjects(This,lcid,RHS) ) 

#define _Workbook_ExclusiveAccess(This,lcid,RHS)	\
    ( (This)->lpVtbl -> ExclusiveAccess(This,lcid,RHS) ) 

#define _Workbook_get_FileFormat(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FileFormat(This,lcid,RHS) ) 

#define _Workbook_ForwardMailer(This,lcid)	\
    ( (This)->lpVtbl -> ForwardMailer(This,lcid) ) 

#define _Workbook_get_FullName(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FullName(This,lcid,RHS) ) 

#define _Workbook_get_HasMailer(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_HasMailer(This,lcid,RHS) ) 

#define _Workbook_put_HasMailer(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_HasMailer(This,lcid,RHS) ) 

#define _Workbook_get_HasPassword(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_HasPassword(This,lcid,RHS) ) 

#define _Workbook_get_HasRoutingSlip(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_HasRoutingSlip(This,lcid,RHS) ) 

#define _Workbook_put_HasRoutingSlip(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_HasRoutingSlip(This,lcid,RHS) ) 

#define _Workbook_get_IsAddin(This,RHS)	\
    ( (This)->lpVtbl -> get_IsAddin(This,RHS) ) 

#define _Workbook_put_IsAddin(This,RHS)	\
    ( (This)->lpVtbl -> put_IsAddin(This,RHS) ) 

#define _Workbook_get_Keywords(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Keywords(This,lcid,RHS) ) 

#define _Workbook_put_Keywords(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Keywords(This,lcid,RHS) ) 

#define _Workbook_LinkInfo(This,Name,LinkInfo,Type,EditionRef,lcid,RHS)	\
    ( (This)->lpVtbl -> LinkInfo(This,Name,LinkInfo,Type,EditionRef,lcid,RHS) ) 

#define _Workbook_LinkSources(This,Type,lcid,RHS)	\
    ( (This)->lpVtbl -> LinkSources(This,Type,lcid,RHS) ) 

#define _Workbook_get_Mailer(This,RHS)	\
    ( (This)->lpVtbl -> get_Mailer(This,RHS) ) 

#define _Workbook_MergeWorkbook(This,Filename)	\
    ( (This)->lpVtbl -> MergeWorkbook(This,Filename) ) 

#define _Workbook_get_Modules(This,RHS)	\
    ( (This)->lpVtbl -> get_Modules(This,RHS) ) 

#define _Workbook_get_MultiUserEditing(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_MultiUserEditing(This,lcid,RHS) ) 

#define _Workbook_get_Name(This,RHS)	\
    ( (This)->lpVtbl -> get_Name(This,RHS) ) 

#define _Workbook_get_Names(This,RHS)	\
    ( (This)->lpVtbl -> get_Names(This,RHS) ) 

#define _Workbook_NewWindow(This,lcid,RHS)	\
    ( (This)->lpVtbl -> NewWindow(This,lcid,RHS) ) 

#define _Workbook_get_OnSave(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSave(This,lcid,RHS) ) 

#define _Workbook_put_OnSave(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSave(This,lcid,RHS) ) 

#define _Workbook_get_OnSheetActivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSheetActivate(This,lcid,RHS) ) 

#define _Workbook_put_OnSheetActivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSheetActivate(This,lcid,RHS) ) 

#define _Workbook_get_OnSheetDeactivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSheetDeactivate(This,lcid,RHS) ) 

#define _Workbook_put_OnSheetDeactivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSheetDeactivate(This,lcid,RHS) ) 

#define _Workbook_OpenLinks(This,Name,ReadOnly,Type,lcid)	\
    ( (This)->lpVtbl -> OpenLinks(This,Name,ReadOnly,Type,lcid) ) 

#define _Workbook_get_Path(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Path(This,lcid,RHS) ) 

#define _Workbook_get_PersonalViewListSettings(This,RHS)	\
    ( (This)->lpVtbl -> get_PersonalViewListSettings(This,RHS) ) 

#define _Workbook_put_PersonalViewListSettings(This,RHS)	\
    ( (This)->lpVtbl -> put_PersonalViewListSettings(This,RHS) ) 

#define _Workbook_get_PersonalViewPrintSettings(This,RHS)	\
    ( (This)->lpVtbl -> get_PersonalViewPrintSettings(This,RHS) ) 

#define _Workbook_put_PersonalViewPrintSettings(This,RHS)	\
    ( (This)->lpVtbl -> put_PersonalViewPrintSettings(This,RHS) ) 

#define _Workbook_Pivotcaches(This,RHS)	\
    ( (This)->lpVtbl -> Pivotcaches(This,RHS) ) 

#define _Workbook_Post(This,DestName,lcid)	\
    ( (This)->lpVtbl -> Post(This,DestName,lcid) ) 

#define _Workbook_get_PrecisionAsDisplayed(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_PrecisionAsDisplayed(This,lcid,RHS) ) 

#define _Workbook_put_PrecisionAsDisplayed(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_PrecisionAsDisplayed(This,lcid,RHS) ) 

#define _Workbook___PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid)	\
    ( (This)->lpVtbl -> __PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid) ) 

#define _Workbook_PrintPreview(This,EnableChanges,lcid)	\
    ( (This)->lpVtbl -> PrintPreview(This,EnableChanges,lcid) ) 

#define _Workbook__Protect(This,Password,Structure,Windows)	\
    ( (This)->lpVtbl -> _Protect(This,Password,Structure,Windows) ) 

#define _Workbook__ProtectSharing(This,Filename,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,SharingPassword)	\
    ( (This)->lpVtbl -> _ProtectSharing(This,Filename,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,SharingPassword) ) 

#define _Workbook_get_ProtectStructure(This,RHS)	\
    ( (This)->lpVtbl -> get_ProtectStructure(This,RHS) ) 

#define _Workbook_get_ProtectWindows(This,RHS)	\
    ( (This)->lpVtbl -> get_ProtectWindows(This,RHS) ) 

#define _Workbook_get_ReadOnly(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,lcid,RHS) ) 

#define _Workbook_get__ReadOnlyRecommended(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get__ReadOnlyRecommended(This,lcid,RHS) ) 

#define _Workbook_RefreshAll(This)	\
    ( (This)->lpVtbl -> RefreshAll(This) ) 

#define _Workbook_Reply(This,lcid)	\
    ( (This)->lpVtbl -> Reply(This,lcid) ) 

#define _Workbook_ReplyAll(This,lcid)	\
    ( (This)->lpVtbl -> ReplyAll(This,lcid) ) 

#define _Workbook_RemoveUser(This,Index)	\
    ( (This)->lpVtbl -> RemoveUser(This,Index) ) 

#define _Workbook_get_RevisionNumber(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_RevisionNumber(This,lcid,RHS) ) 

#define _Workbook_Route(This,lcid)	\
    ( (This)->lpVtbl -> Route(This,lcid) ) 

#define _Workbook_get_Routed(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Routed(This,lcid,RHS) ) 

#define _Workbook_get_RoutingSlip(This,RHS)	\
    ( (This)->lpVtbl -> get_RoutingSlip(This,RHS) ) 

#define _Workbook_RunAutoMacros(This,Which,lcid)	\
    ( (This)->lpVtbl -> RunAutoMacros(This,Which,lcid) ) 

#define _Workbook_Save(This,lcid)	\
    ( (This)->lpVtbl -> Save(This,lcid) ) 

#define _Workbook__SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AccessMode,ConflictResolution,AddToMru,TextCodepage,TextVisualLayout,lcid)	\
    ( (This)->lpVtbl -> _SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AccessMode,ConflictResolution,AddToMru,TextCodepage,TextVisualLayout,lcid) ) 

#define _Workbook_SaveCopyAs(This,Filename,lcid)	\
    ( (This)->lpVtbl -> SaveCopyAs(This,Filename,lcid) ) 

#define _Workbook_get_Saved(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Saved(This,lcid,RHS) ) 

#define _Workbook_put_Saved(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Saved(This,lcid,RHS) ) 

#define _Workbook_get_SaveLinkValues(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_SaveLinkValues(This,lcid,RHS) ) 

#define _Workbook_put_SaveLinkValues(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_SaveLinkValues(This,lcid,RHS) ) 

#define _Workbook_SendMail(This,Recipients,Subject,ReturnReceipt,lcid)	\
    ( (This)->lpVtbl -> SendMail(This,Recipients,Subject,ReturnReceipt,lcid) ) 

#define _Workbook_SendMailer(This,FileFormat,Priority,lcid)	\
    ( (This)->lpVtbl -> SendMailer(This,FileFormat,Priority,lcid) ) 

#define _Workbook_SetLinkOnData(This,Name,Procedure,lcid)	\
    ( (This)->lpVtbl -> SetLinkOnData(This,Name,Procedure,lcid) ) 

#define _Workbook_get_Sheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Sheets(This,RHS) ) 

#define _Workbook_get_ShowConflictHistory(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ShowConflictHistory(This,lcid,RHS) ) 

#define _Workbook_put_ShowConflictHistory(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_ShowConflictHistory(This,lcid,RHS) ) 

#define _Workbook_get_Styles(This,RHS)	\
    ( (This)->lpVtbl -> get_Styles(This,RHS) ) 

#define _Workbook_get_Subject(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Subject(This,lcid,RHS) ) 

#define _Workbook_put_Subject(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Subject(This,lcid,RHS) ) 

#define _Workbook_get_Title(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Title(This,lcid,RHS) ) 

#define _Workbook_put_Title(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Title(This,lcid,RHS) ) 

#define _Workbook_Unprotect(This,Password,lcid)	\
    ( (This)->lpVtbl -> Unprotect(This,Password,lcid) ) 

#define _Workbook_UnprotectSharing(This,SharingPassword)	\
    ( (This)->lpVtbl -> UnprotectSharing(This,SharingPassword) ) 

#define _Workbook_UpdateFromFile(This,lcid)	\
    ( (This)->lpVtbl -> UpdateFromFile(This,lcid) ) 

#define _Workbook_UpdateLink(This,Name,Type,lcid)	\
    ( (This)->lpVtbl -> UpdateLink(This,Name,Type,lcid) ) 

#define _Workbook_get_UpdateRemoteReferences(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UpdateRemoteReferences(This,lcid,RHS) ) 

#define _Workbook_put_UpdateRemoteReferences(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_UpdateRemoteReferences(This,lcid,RHS) ) 

#define _Workbook_get_UserControl(This,RHS)	\
    ( (This)->lpVtbl -> get_UserControl(This,RHS) ) 

#define _Workbook_put_UserControl(This,RHS)	\
    ( (This)->lpVtbl -> put_UserControl(This,RHS) ) 

#define _Workbook_get_UserStatus(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UserStatus(This,lcid,RHS) ) 

#define _Workbook_get_CustomViews(This,RHS)	\
    ( (This)->lpVtbl -> get_CustomViews(This,RHS) ) 

#define _Workbook_get_Windows(This,RHS)	\
    ( (This)->lpVtbl -> get_Windows(This,RHS) ) 

#define _Workbook_get_Worksheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Worksheets(This,RHS) ) 

#define _Workbook_get_WriteReserved(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_WriteReserved(This,lcid,RHS) ) 

#define _Workbook_get_WriteReservedBy(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_WriteReservedBy(This,lcid,RHS) ) 

#define _Workbook_get_Excel4IntlMacroSheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Excel4IntlMacroSheets(This,RHS) ) 

#define _Workbook_get_Excel4MacroSheets(This,RHS)	\
    ( (This)->lpVtbl -> get_Excel4MacroSheets(This,RHS) ) 

#define _Workbook_get_TemplateRemoveExtData(This,RHS)	\
    ( (This)->lpVtbl -> get_TemplateRemoveExtData(This,RHS) ) 

#define _Workbook_put_TemplateRemoveExtData(This,RHS)	\
    ( (This)->lpVtbl -> put_TemplateRemoveExtData(This,RHS) ) 

#define _Workbook_HighlightChangesOptions(This,When,Who,Where)	\
    ( (This)->lpVtbl -> HighlightChangesOptions(This,When,Who,Where) ) 

#define _Workbook_get_HighlightChangesOnScreen(This,RHS)	\
    ( (This)->lpVtbl -> get_HighlightChangesOnScreen(This,RHS) ) 

#define _Workbook_put_HighlightChangesOnScreen(This,RHS)	\
    ( (This)->lpVtbl -> put_HighlightChangesOnScreen(This,RHS) ) 

#define _Workbook_get_KeepChangeHistory(This,RHS)	\
    ( (This)->lpVtbl -> get_KeepChangeHistory(This,RHS) ) 

#define _Workbook_put_KeepChangeHistory(This,RHS)	\
    ( (This)->lpVtbl -> put_KeepChangeHistory(This,RHS) ) 

#define _Workbook_get_ListChangesOnNewSheet(This,RHS)	\
    ( (This)->lpVtbl -> get_ListChangesOnNewSheet(This,RHS) ) 

#define _Workbook_put_ListChangesOnNewSheet(This,RHS)	\
    ( (This)->lpVtbl -> put_ListChangesOnNewSheet(This,RHS) ) 

#define _Workbook_PurgeChangeHistoryNow(This,Days,SharingPassword)	\
    ( (This)->lpVtbl -> PurgeChangeHistoryNow(This,Days,SharingPassword) ) 

#define _Workbook_AcceptAllChanges(This,When,Who,Where)	\
    ( (This)->lpVtbl -> AcceptAllChanges(This,When,Who,Where) ) 

#define _Workbook_RejectAllChanges(This,When,Who,Where)	\
    ( (This)->lpVtbl -> RejectAllChanges(This,When,Who,Where) ) 

#define _Workbook_PivotTableWizard(This,SourceType,SourceData,TableDestination,TableName,RowGrand,ColumnGrand,SaveData,HasAutoFormat,AutoPage,Reserved,BackgroundQuery,OptimizeCache,PageFieldOrder,PageFieldWrapCount,ReadData,Connection,lcid)	\
    ( (This)->lpVtbl -> PivotTableWizard(This,SourceType,SourceData,TableDestination,TableName,RowGrand,ColumnGrand,SaveData,HasAutoFormat,AutoPage,Reserved,BackgroundQuery,OptimizeCache,PageFieldOrder,PageFieldWrapCount,ReadData,Connection,lcid) ) 

#define _Workbook_ResetColors(This)	\
    ( (This)->lpVtbl -> ResetColors(This) ) 

#define _Workbook_get_VBProject(This,RHS)	\
    ( (This)->lpVtbl -> get_VBProject(This,RHS) ) 

#define _Workbook_FollowHyperlink(This,Address,SubAddress,NewWindow,AddHistory,ExtraInfo,Method,HeaderInfo)	\
    ( (This)->lpVtbl -> FollowHyperlink(This,Address,SubAddress,NewWindow,AddHistory,ExtraInfo,Method,HeaderInfo) ) 

#define _Workbook_AddToFavorites(This)	\
    ( (This)->lpVtbl -> AddToFavorites(This) ) 

#define _Workbook_get_IsInplace(This,RHS)	\
    ( (This)->lpVtbl -> get_IsInplace(This,RHS) ) 

#define _Workbook__PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid)	\
    ( (This)->lpVtbl -> _PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid) ) 

#define _Workbook_WebPagePreview(This)	\
    ( (This)->lpVtbl -> WebPagePreview(This) ) 

#define _Workbook_get_PublishObjects(This,RHS)	\
    ( (This)->lpVtbl -> get_PublishObjects(This,RHS) ) 

#define _Workbook_get_WebOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_WebOptions(This,RHS) ) 

#define _Workbook_ReloadAs(This,Encoding)	\
    ( (This)->lpVtbl -> ReloadAs(This,Encoding) ) 

#define _Workbook_get_HTMLProject(This,RHS)	\
    ( (This)->lpVtbl -> get_HTMLProject(This,RHS) ) 

#define _Workbook_get_EnvelopeVisible(This,RHS)	\
    ( (This)->lpVtbl -> get_EnvelopeVisible(This,RHS) ) 

#define _Workbook_put_EnvelopeVisible(This,RHS)	\
    ( (This)->lpVtbl -> put_EnvelopeVisible(This,RHS) ) 

#define _Workbook_get_CalculationVersion(This,RHS)	\
    ( (This)->lpVtbl -> get_CalculationVersion(This,RHS) ) 

#define _Workbook_Dummy17(This,calcid)	\
    ( (This)->lpVtbl -> Dummy17(This,calcid) ) 

#define _Workbook_sblt(This,s)	\
    ( (This)->lpVtbl -> sblt(This,s) ) 

#define _Workbook_get_VBASigned(This,RHS)	\
    ( (This)->lpVtbl -> get_VBASigned(This,RHS) ) 

#define _Workbook_get_ShowPivotTableFieldList(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowPivotTableFieldList(This,RHS) ) 

#define _Workbook_put_ShowPivotTableFieldList(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowPivotTableFieldList(This,RHS) ) 

#define _Workbook_get_UpdateLinks(This,RHS)	\
    ( (This)->lpVtbl -> get_UpdateLinks(This,RHS) ) 

#define _Workbook_put_UpdateLinks(This,RHS)	\
    ( (This)->lpVtbl -> put_UpdateLinks(This,RHS) ) 

#define _Workbook_BreakLink(This,Name,Type)	\
    ( (This)->lpVtbl -> BreakLink(This,Name,Type) ) 

#define _Workbook_Dummy16(This)	\
    ( (This)->lpVtbl -> Dummy16(This) ) 

#define _Workbook_SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AccessMode,ConflictResolution,AddToMru,TextCodepage,TextVisualLayout,Local,lcid)	\
    ( (This)->lpVtbl -> SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AccessMode,ConflictResolution,AddToMru,TextCodepage,TextVisualLayout,Local,lcid) ) 

#define _Workbook_get_EnableAutoRecover(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableAutoRecover(This,RHS) ) 

#define _Workbook_put_EnableAutoRecover(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableAutoRecover(This,RHS) ) 

#define _Workbook_get_RemovePersonalInformation(This,RHS)	\
    ( (This)->lpVtbl -> get_RemovePersonalInformation(This,RHS) ) 

#define _Workbook_put_RemovePersonalInformation(This,RHS)	\
    ( (This)->lpVtbl -> put_RemovePersonalInformation(This,RHS) ) 

#define _Workbook_get_FullNameURLEncoded(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FullNameURLEncoded(This,lcid,RHS) ) 

#define _Workbook_CheckIn(This,SaveChanges,Comments,MakePublic)	\
    ( (This)->lpVtbl -> CheckIn(This,SaveChanges,Comments,MakePublic) ) 

#define _Workbook_CanCheckIn(This,RHS)	\
    ( (This)->lpVtbl -> CanCheckIn(This,RHS) ) 

#define _Workbook_SendForReview(This,Recipients,Subject,ShowMessage,IncludeAttachment)	\
    ( (This)->lpVtbl -> SendForReview(This,Recipients,Subject,ShowMessage,IncludeAttachment) ) 

#define _Workbook_ReplyWithChanges(This,ShowMessage)	\
    ( (This)->lpVtbl -> ReplyWithChanges(This,ShowMessage) ) 

#define _Workbook_EndReview(This)	\
    ( (This)->lpVtbl -> EndReview(This) ) 

#define _Workbook_get_Password(This,RHS)	\
    ( (This)->lpVtbl -> get_Password(This,RHS) ) 

#define _Workbook_put_Password(This,RHS)	\
    ( (This)->lpVtbl -> put_Password(This,RHS) ) 

#define _Workbook_get_WritePassword(This,RHS)	\
    ( (This)->lpVtbl -> get_WritePassword(This,RHS) ) 

#define _Workbook_put_WritePassword(This,RHS)	\
    ( (This)->lpVtbl -> put_WritePassword(This,RHS) ) 

#define _Workbook_get_PasswordEncryptionProvider(This,RHS)	\
    ( (This)->lpVtbl -> get_PasswordEncryptionProvider(This,RHS) ) 

#define _Workbook_get_PasswordEncryptionAlgorithm(This,RHS)	\
    ( (This)->lpVtbl -> get_PasswordEncryptionAlgorithm(This,RHS) ) 

#define _Workbook_get_PasswordEncryptionKeyLength(This,RHS)	\
    ( (This)->lpVtbl -> get_PasswordEncryptionKeyLength(This,RHS) ) 

#define _Workbook_SetPasswordEncryptionOptions(This,PasswordEncryptionProvider,PasswordEncryptionAlgorithm,PasswordEncryptionKeyLength,PasswordEncryptionFileProperties)	\
    ( (This)->lpVtbl -> SetPasswordEncryptionOptions(This,PasswordEncryptionProvider,PasswordEncryptionAlgorithm,PasswordEncryptionKeyLength,PasswordEncryptionFileProperties) ) 

#define _Workbook_get_PasswordEncryptionFileProperties(This,RHS)	\
    ( (This)->lpVtbl -> get_PasswordEncryptionFileProperties(This,RHS) ) 

#define _Workbook_get_ReadOnlyRecommended(This,RHS)	\
    ( (This)->lpVtbl -> get_ReadOnlyRecommended(This,RHS) ) 

#define _Workbook_put_ReadOnlyRecommended(This,RHS)	\
    ( (This)->lpVtbl -> put_ReadOnlyRecommended(This,RHS) ) 

#define _Workbook_Protect(This,Password,Structure,Windows)	\
    ( (This)->lpVtbl -> Protect(This,Password,Structure,Windows) ) 

#define _Workbook_get_SmartTagOptions(This,RHS)	\
    ( (This)->lpVtbl -> get_SmartTagOptions(This,RHS) ) 

#define _Workbook_RecheckSmartTags(This)	\
    ( (This)->lpVtbl -> RecheckSmartTags(This) ) 

#define _Workbook_get_Permission(This,RHS)	\
    ( (This)->lpVtbl -> get_Permission(This,RHS) ) 

#define _Workbook_get_SharedWorkspace(This,RHS)	\
    ( (This)->lpVtbl -> get_SharedWorkspace(This,RHS) ) 

#define _Workbook_get_Sync(This,RHS)	\
    ( (This)->lpVtbl -> get_Sync(This,RHS) ) 

#define _Workbook_SendFaxOverInternet(This,Recipients,Subject,ShowMessage)	\
    ( (This)->lpVtbl -> SendFaxOverInternet(This,Recipients,Subject,ShowMessage) ) 

#define _Workbook_get_XmlNamespaces(This,RHS)	\
    ( (This)->lpVtbl -> get_XmlNamespaces(This,RHS) ) 

#define _Workbook_get_XmlMaps(This,RHS)	\
    ( (This)->lpVtbl -> get_XmlMaps(This,RHS) ) 

#define _Workbook_XmlImport(This,Url,ImportMap,Overwrite,Destination,RHS)	\
    ( (This)->lpVtbl -> XmlImport(This,Url,ImportMap,Overwrite,Destination,RHS) ) 

#define _Workbook_get_SmartDocument(This,RHS)	\
    ( (This)->lpVtbl -> get_SmartDocument(This,RHS) ) 

#define _Workbook_get_DocumentLibraryVersions(This,RHS)	\
    ( (This)->lpVtbl -> get_DocumentLibraryVersions(This,RHS) ) 

#define _Workbook_get_InactiveListBorderVisible(This,RHS)	\
    ( (This)->lpVtbl -> get_InactiveListBorderVisible(This,RHS) ) 

#define _Workbook_put_InactiveListBorderVisible(This,RHS)	\
    ( (This)->lpVtbl -> put_InactiveListBorderVisible(This,RHS) ) 

#define _Workbook_get_DisplayInkComments(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayInkComments(This,RHS) ) 

#define _Workbook_put_DisplayInkComments(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayInkComments(This,RHS) ) 

#define _Workbook_XmlImportXml(This,Data,ImportMap,Overwrite,Destination,RHS)	\
    ( (This)->lpVtbl -> XmlImportXml(This,Data,ImportMap,Overwrite,Destination,RHS) ) 

#define _Workbook_SaveAsXMLData(This,Filename,Map)	\
    ( (This)->lpVtbl -> SaveAsXMLData(This,Filename,Map) ) 

#define _Workbook_ToggleFormsDesign(This)	\
    ( (This)->lpVtbl -> ToggleFormsDesign(This) ) 

#define _Workbook_get_ContentTypeProperties(This,RHS)	\
    ( (This)->lpVtbl -> get_ContentTypeProperties(This,RHS) ) 

#define _Workbook_get_Connections(This,RHS)	\
    ( (This)->lpVtbl -> get_Connections(This,RHS) ) 

#define _Workbook_RemoveDocumentInformation(This,RemoveDocInfoType)	\
    ( (This)->lpVtbl -> RemoveDocumentInformation(This,RemoveDocInfoType) ) 

#define _Workbook_get_Signatures(This,RHS)	\
    ( (This)->lpVtbl -> get_Signatures(This,RHS) ) 

#define _Workbook_CheckInWithVersion(This,SaveChanges,Comments,MakePublic,VersionType)	\
    ( (This)->lpVtbl -> CheckInWithVersion(This,SaveChanges,Comments,MakePublic,VersionType) ) 

#define _Workbook_get_ServerPolicy(This,RHS)	\
    ( (This)->lpVtbl -> get_ServerPolicy(This,RHS) ) 

#define _Workbook_LockServerFile(This)	\
    ( (This)->lpVtbl -> LockServerFile(This) ) 

#define _Workbook_get_DocumentInspectors(This,RHS)	\
    ( (This)->lpVtbl -> get_DocumentInspectors(This,RHS) ) 

#define _Workbook_GetWorkflowTasks(This,RHS)	\
    ( (This)->lpVtbl -> GetWorkflowTasks(This,RHS) ) 

#define _Workbook_GetWorkflowTemplates(This,RHS)	\
    ( (This)->lpVtbl -> GetWorkflowTemplates(This,RHS) ) 

#define _Workbook_PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid)	\
    ( (This)->lpVtbl -> PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid) ) 

#define _Workbook_get_ServerViewableItems(This,RHS)	\
    ( (This)->lpVtbl -> get_ServerViewableItems(This,RHS) ) 

#define _Workbook_get_TableStyles(This,RHS)	\
    ( (This)->lpVtbl -> get_TableStyles(This,RHS) ) 

#define _Workbook_get_DefaultTableStyle(This,RHS)	\
    ( (This)->lpVtbl -> get_DefaultTableStyle(This,RHS) ) 

#define _Workbook_put_DefaultTableStyle(This,RHS)	\
    ( (This)->lpVtbl -> put_DefaultTableStyle(This,RHS) ) 

#define _Workbook_get_DefaultPivotTableStyle(This,RHS)	\
    ( (This)->lpVtbl -> get_DefaultPivotTableStyle(This,RHS) ) 

#define _Workbook_put_DefaultPivotTableStyle(This,RHS)	\
    ( (This)->lpVtbl -> put_DefaultPivotTableStyle(This,RHS) ) 

#define _Workbook_get_CheckCompatibility(This,RHS)	\
    ( (This)->lpVtbl -> get_CheckCompatibility(This,RHS) ) 

#define _Workbook_put_CheckCompatibility(This,RHS)	\
    ( (This)->lpVtbl -> put_CheckCompatibility(This,RHS) ) 

#define _Workbook_get_HasVBProject(This,RHS)	\
    ( (This)->lpVtbl -> get_HasVBProject(This,RHS) ) 

#define _Workbook_get_CustomXMLParts(This,RHS)	\
    ( (This)->lpVtbl -> get_CustomXMLParts(This,RHS) ) 

#define _Workbook_get_Final(This,RHS)	\
    ( (This)->lpVtbl -> get_Final(This,RHS) ) 

#define _Workbook_put_Final(This,RHS)	\
    ( (This)->lpVtbl -> put_Final(This,RHS) ) 

#define _Workbook_get_Research(This,RHS)	\
    ( (This)->lpVtbl -> get_Research(This,RHS) ) 

#define _Workbook_get_Theme(This,RHS)	\
    ( (This)->lpVtbl -> get_Theme(This,RHS) ) 

#define _Workbook_ApplyTheme(This,Filename)	\
    ( (This)->lpVtbl -> ApplyTheme(This,Filename) ) 

#define _Workbook_get_Excel8CompatibilityMode(This,RHS)	\
    ( (This)->lpVtbl -> get_Excel8CompatibilityMode(This,RHS) ) 

#define _Workbook_get_ConnectionsDisabled(This,RHS)	\
    ( (This)->lpVtbl -> get_ConnectionsDisabled(This,RHS) ) 

#define _Workbook_EnableConnections(This)	\
    ( (This)->lpVtbl -> EnableConnections(This) ) 

#define _Workbook_get_ShowPivotChartActiveFields(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowPivotChartActiveFields(This,RHS) ) 

#define _Workbook_put_ShowPivotChartActiveFields(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowPivotChartActiveFields(This,RHS) ) 

#define _Workbook_ExportAsFixedFormat(This,Type,Filename,Quality,IncludeDocProperties,IgnorePrintAreas,From,To,OpenAfterPublish,FixedFormatExtClassPtr)	\
    ( (This)->lpVtbl -> ExportAsFixedFormat(This,Type,Filename,Quality,IncludeDocProperties,IgnorePrintAreas,From,To,OpenAfterPublish,FixedFormatExtClassPtr) ) 

#define _Workbook_get_IconSets(This,RHS)	\
    ( (This)->lpVtbl -> get_IconSets(This,RHS) ) 

#define _Workbook_get_EncryptionProvider(This,RHS)	\
    ( (This)->lpVtbl -> get_EncryptionProvider(This,RHS) ) 

#define _Workbook_put_EncryptionProvider(This,RHS)	\
    ( (This)->lpVtbl -> put_EncryptionProvider(This,RHS) ) 

#define _Workbook_get_DoNotPromptForConvert(This,RHS)	\
    ( (This)->lpVtbl -> get_DoNotPromptForConvert(This,RHS) ) 

#define _Workbook_put_DoNotPromptForConvert(This,RHS)	\
    ( (This)->lpVtbl -> put_DoNotPromptForConvert(This,RHS) ) 

#define _Workbook_get_ForceFullCalculation(This,RHS)	\
    ( (This)->lpVtbl -> get_ForceFullCalculation(This,RHS) ) 

#define _Workbook_put_ForceFullCalculation(This,RHS)	\
    ( (This)->lpVtbl -> put_ForceFullCalculation(This,RHS) ) 

#define _Workbook_ProtectSharing(This,Filename,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,SharingPassword,FileFormat)	\
    ( (This)->lpVtbl -> ProtectSharing(This,Filename,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,SharingPassword,FileFormat) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_UserStatus_Proxy( 
    _Workbook * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Workbook_get_UserStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_CustomViews_Proxy( 
    _Workbook * This,
    /* [retval][out] */ CustomViews **RHS);


void __RPC_STUB _Workbook_get_CustomViews_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Windows_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Windows **RHS);


void __RPC_STUB _Workbook_get_Windows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Worksheets_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Sheets **RHS);


void __RPC_STUB _Workbook_get_Worksheets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_WriteReserved_Proxy( 
    _Workbook * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_WriteReserved_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_WriteReservedBy_Proxy( 
    _Workbook * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_WriteReservedBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Excel4IntlMacroSheets_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Sheets **RHS);


void __RPC_STUB _Workbook_get_Excel4IntlMacroSheets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Excel4MacroSheets_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Sheets **RHS);


void __RPC_STUB _Workbook_get_Excel4MacroSheets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_TemplateRemoveExtData_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_TemplateRemoveExtData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_TemplateRemoveExtData_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_TemplateRemoveExtData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_HighlightChangesOptions_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT When,
    /* [optional][in] */ VARIANT Who,
    /* [optional][in] */ VARIANT Where);


void __RPC_STUB _Workbook_HighlightChangesOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_HighlightChangesOnScreen_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_HighlightChangesOnScreen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_HighlightChangesOnScreen_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_HighlightChangesOnScreen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_KeepChangeHistory_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_KeepChangeHistory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_KeepChangeHistory_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_KeepChangeHistory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ListChangesOnNewSheet_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_ListChangesOnNewSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_ListChangesOnNewSheet_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_ListChangesOnNewSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_PurgeChangeHistoryNow_Proxy( 
    _Workbook * This,
    /* [in] */ long Days,
    /* [optional][in] */ VARIANT SharingPassword);


void __RPC_STUB _Workbook_PurgeChangeHistoryNow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_AcceptAllChanges_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT When,
    /* [optional][in] */ VARIANT Who,
    /* [optional][in] */ VARIANT Where);


void __RPC_STUB _Workbook_AcceptAllChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_RejectAllChanges_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT When,
    /* [optional][in] */ VARIANT Who,
    /* [optional][in] */ VARIANT Where);


void __RPC_STUB _Workbook_RejectAllChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Workbook_PivotTableWizard_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT SourceType,
    /* [optional][in] */ VARIANT SourceData,
    /* [optional][in] */ VARIANT TableDestination,
    /* [optional][in] */ VARIANT TableName,
    /* [optional][in] */ VARIANT RowGrand,
    /* [optional][in] */ VARIANT ColumnGrand,
    /* [optional][in] */ VARIANT SaveData,
    /* [optional][in] */ VARIANT HasAutoFormat,
    /* [optional][in] */ VARIANT AutoPage,
    /* [optional][in] */ VARIANT Reserved,
    /* [optional][in] */ VARIANT BackgroundQuery,
    /* [optional][in] */ VARIANT OptimizeCache,
    /* [optional][in] */ VARIANT PageFieldOrder,
    /* [optional][in] */ VARIANT PageFieldWrapCount,
    /* [optional][in] */ VARIANT ReadData,
    /* [optional][in] */ VARIANT Connection,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Workbook_PivotTableWizard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ResetColors_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_ResetColors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_VBProject_Proxy( 
    _Workbook * This,
    /* [retval][out] */ IDispatch **RHS);


void __RPC_STUB _Workbook_get_VBProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_FollowHyperlink_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR Address,
    /* [optional][in] */ VARIANT SubAddress,
    /* [optional][in] */ VARIANT NewWindow,
    /* [optional][in] */ VARIANT AddHistory,
    /* [optional][in] */ VARIANT ExtraInfo,
    /* [optional][in] */ VARIANT Method,
    /* [optional][in] */ VARIANT HeaderInfo);


void __RPC_STUB _Workbook_FollowHyperlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_AddToFavorites_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_AddToFavorites_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_IsInplace_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_IsInplace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Workbook__PrintOut_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [optional][in] */ VARIANT PrToFileName,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Workbook__PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_WebPagePreview_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_WebPagePreview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_PublishObjects_Proxy( 
    _Workbook * This,
    /* [retval][out] */ PublishObjects **RHS);


void __RPC_STUB _Workbook_get_PublishObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_WebOptions_Proxy( 
    _Workbook * This,
    /* [retval][out] */ WebOptions **RHS);


void __RPC_STUB _Workbook_get_WebOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ReloadAs_Proxy( 
    _Workbook * This,
    /* [in] */ MsoEncoding Encoding);


void __RPC_STUB _Workbook_ReloadAs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_HTMLProject_Proxy( 
    _Workbook * This,
    /* [retval][out] */ HTMLProject **RHS);


void __RPC_STUB _Workbook_get_HTMLProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_EnvelopeVisible_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_EnvelopeVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_EnvelopeVisible_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_EnvelopeVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_CalculationVersion_Proxy( 
    _Workbook * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Workbook_get_CalculationVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Workbook_Dummy17_Proxy( 
    _Workbook * This,
    /* [in] */ long calcid);


void __RPC_STUB _Workbook_Dummy17_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Workbook_sblt_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR s);


void __RPC_STUB _Workbook_sblt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_VBASigned_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_VBASigned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ShowPivotTableFieldList_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_ShowPivotTableFieldList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_ShowPivotTableFieldList_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_ShowPivotTableFieldList_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_UpdateLinks_Proxy( 
    _Workbook * This,
    /* [retval][out] */ XlUpdateLinks *RHS);


void __RPC_STUB _Workbook_get_UpdateLinks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_UpdateLinks_Proxy( 
    _Workbook * This,
    /* [in] */ XlUpdateLinks RHS);


void __RPC_STUB _Workbook_put_UpdateLinks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_BreakLink_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR Name,
    /* [in] */ XlLinkType Type);


void __RPC_STUB _Workbook_BreakLink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Workbook_Dummy16_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_Dummy16_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_SaveAs_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT Filename,
    /* [optional][in] */ VARIANT FileFormat,
    /* [optional][in] */ VARIANT Password,
    /* [optional][in] */ VARIANT WriteResPassword,
    /* [optional][in] */ VARIANT ReadOnlyRecommended,
    /* [optional][in] */ VARIANT CreateBackup,
    /* [defaultvalue][optional][in] */ XlSaveAsAccessMode AccessMode,
    /* [optional][in] */ VARIANT ConflictResolution,
    /* [optional][in] */ VARIANT AddToMru,
    /* [optional][in] */ VARIANT TextCodepage,
    /* [optional][in] */ VARIANT TextVisualLayout,
    /* [optional][in] */ VARIANT Local,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Workbook_SaveAs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_EnableAutoRecover_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_EnableAutoRecover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_EnableAutoRecover_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_EnableAutoRecover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_RemovePersonalInformation_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_RemovePersonalInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_RemovePersonalInformation_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_RemovePersonalInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_FullNameURLEncoded_Proxy( 
    _Workbook * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_FullNameURLEncoded_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_CheckIn_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT SaveChanges,
    /* [optional][in] */ VARIANT Comments,
    /* [optional][in] */ VARIANT MakePublic);


void __RPC_STUB _Workbook_CheckIn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_CanCheckIn_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_CanCheckIn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_SendForReview_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT Recipients,
    /* [optional][in] */ VARIANT Subject,
    /* [optional][in] */ VARIANT ShowMessage,
    /* [optional][in] */ VARIANT IncludeAttachment);


void __RPC_STUB _Workbook_SendForReview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ReplyWithChanges_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT ShowMessage);


void __RPC_STUB _Workbook_ReplyWithChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_EndReview_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_EndReview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Password_Proxy( 
    _Workbook * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_Password_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_Password_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Workbook_put_Password_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_WritePassword_Proxy( 
    _Workbook * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_WritePassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_WritePassword_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Workbook_put_WritePassword_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_PasswordEncryptionProvider_Proxy( 
    _Workbook * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_PasswordEncryptionProvider_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_PasswordEncryptionAlgorithm_Proxy( 
    _Workbook * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_PasswordEncryptionAlgorithm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_PasswordEncryptionKeyLength_Proxy( 
    _Workbook * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB _Workbook_get_PasswordEncryptionKeyLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_SetPasswordEncryptionOptions_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT PasswordEncryptionProvider,
    /* [optional][in] */ VARIANT PasswordEncryptionAlgorithm,
    /* [optional][in] */ VARIANT PasswordEncryptionKeyLength,
    /* [optional][in] */ VARIANT PasswordEncryptionFileProperties);


void __RPC_STUB _Workbook_SetPasswordEncryptionOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_PasswordEncryptionFileProperties_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_PasswordEncryptionFileProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ReadOnlyRecommended_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_ReadOnlyRecommended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_ReadOnlyRecommended_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_ReadOnlyRecommended_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_Protect_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT Password,
    /* [optional][in] */ VARIANT Structure,
    /* [optional][in] */ VARIANT Windows);


void __RPC_STUB _Workbook_Protect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_SmartTagOptions_Proxy( 
    _Workbook * This,
    /* [retval][out] */ SmartTagOptions **RHS);


void __RPC_STUB _Workbook_get_SmartTagOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_RecheckSmartTags_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_RecheckSmartTags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Permission_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Permission **RHS);


void __RPC_STUB _Workbook_get_Permission_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_SharedWorkspace_Proxy( 
    _Workbook * This,
    /* [retval][out] */ SharedWorkspace **RHS);


void __RPC_STUB _Workbook_get_SharedWorkspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Sync_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Sync **RHS);


void __RPC_STUB _Workbook_get_Sync_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_SendFaxOverInternet_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT Recipients,
    /* [optional][in] */ VARIANT Subject,
    /* [optional][in] */ VARIANT ShowMessage);


void __RPC_STUB _Workbook_SendFaxOverInternet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_XmlNamespaces_Proxy( 
    _Workbook * This,
    /* [retval][out] */ XmlNamespaces **RHS);


void __RPC_STUB _Workbook_get_XmlNamespaces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_XmlMaps_Proxy( 
    _Workbook * This,
    /* [retval][out] */ XmlMaps **RHS);


void __RPC_STUB _Workbook_get_XmlMaps_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_XmlImport_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR Url,
    /* [out] */ XmlMap **ImportMap,
    /* [optional][in] */ VARIANT Overwrite,
    /* [optional][in] */ VARIANT Destination,
    /* [retval][out] */ XlXmlImportResult *RHS);


void __RPC_STUB _Workbook_XmlImport_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_SmartDocument_Proxy( 
    _Workbook * This,
    /* [retval][out] */ SmartDocument **RHS);


void __RPC_STUB _Workbook_get_SmartDocument_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_DocumentLibraryVersions_Proxy( 
    _Workbook * This,
    /* [retval][out] */ DocumentLibraryVersions **RHS);


void __RPC_STUB _Workbook_get_DocumentLibraryVersions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_InactiveListBorderVisible_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_InactiveListBorderVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_InactiveListBorderVisible_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_InactiveListBorderVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_DisplayInkComments_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_DisplayInkComments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_DisplayInkComments_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_DisplayInkComments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_XmlImportXml_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR Data,
    /* [out] */ XmlMap **ImportMap,
    /* [optional][in] */ VARIANT Overwrite,
    /* [optional][in] */ VARIANT Destination,
    /* [retval][out] */ XlXmlImportResult *RHS);


void __RPC_STUB _Workbook_XmlImportXml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_SaveAsXMLData_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR Filename,
    /* [in] */ XmlMap *Map);


void __RPC_STUB _Workbook_SaveAsXMLData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ToggleFormsDesign_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_ToggleFormsDesign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ContentTypeProperties_Proxy( 
    _Workbook * This,
    /* [retval][out] */ MetaProperties **RHS);


void __RPC_STUB _Workbook_get_ContentTypeProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Connections_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Connections **RHS);


void __RPC_STUB _Workbook_get_Connections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_RemoveDocumentInformation_Proxy( 
    _Workbook * This,
    /* [in] */ XlRemoveDocInfoType RemoveDocInfoType);


void __RPC_STUB _Workbook_RemoveDocumentInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Signatures_Proxy( 
    _Workbook * This,
    /* [retval][out] */ SignatureSet **RHS);


void __RPC_STUB _Workbook_get_Signatures_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_CheckInWithVersion_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT SaveChanges,
    /* [optional][in] */ VARIANT Comments,
    /* [optional][in] */ VARIANT MakePublic,
    /* [optional][in] */ VARIANT VersionType);


void __RPC_STUB _Workbook_CheckInWithVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ServerPolicy_Proxy( 
    _Workbook * This,
    /* [retval][out] */ ServerPolicy **RHS);


void __RPC_STUB _Workbook_get_ServerPolicy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_LockServerFile_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_LockServerFile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_DocumentInspectors_Proxy( 
    _Workbook * This,
    /* [retval][out] */ DocumentInspectors **RHS);


void __RPC_STUB _Workbook_get_DocumentInspectors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_GetWorkflowTasks_Proxy( 
    _Workbook * This,
    /* [retval][out] */ WorkflowTasks **RHS);


void __RPC_STUB _Workbook_GetWorkflowTasks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_GetWorkflowTemplates_Proxy( 
    _Workbook * This,
    /* [retval][out] */ WorkflowTemplates **RHS);


void __RPC_STUB _Workbook_GetWorkflowTemplates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_PrintOut_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [optional][in] */ VARIANT PrToFileName,
    /* [optional][in] */ VARIANT IgnorePrintAreas,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Workbook_PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ServerViewableItems_Proxy( 
    _Workbook * This,
    /* [retval][out] */ ServerViewableItems **RHS);


void __RPC_STUB _Workbook_get_ServerViewableItems_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_TableStyles_Proxy( 
    _Workbook * This,
    /* [retval][out] */ TableStyles **RHS);


void __RPC_STUB _Workbook_get_TableStyles_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_DefaultTableStyle_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Workbook_get_DefaultTableStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_DefaultTableStyle_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB _Workbook_put_DefaultTableStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_DefaultPivotTableStyle_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB _Workbook_get_DefaultPivotTableStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_DefaultPivotTableStyle_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB _Workbook_put_DefaultPivotTableStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_CheckCompatibility_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_CheckCompatibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_CheckCompatibility_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_CheckCompatibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_HasVBProject_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_HasVBProject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_CustomXMLParts_Proxy( 
    _Workbook * This,
    /* [retval][out] */ CustomXMLParts **RHS);


void __RPC_STUB _Workbook_get_CustomXMLParts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Final_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_Final_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_Final_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_Final_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Research_Proxy( 
    _Workbook * This,
    /* [retval][out] */ Research **RHS);


void __RPC_STUB _Workbook_get_Research_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Theme_Proxy( 
    _Workbook * This,
    /* [retval][out] */ OfficeTheme **RHS);


void __RPC_STUB _Workbook_get_Theme_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ApplyTheme_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR Filename);


void __RPC_STUB _Workbook_ApplyTheme_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_Excel8CompatibilityMode_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_Excel8CompatibilityMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ConnectionsDisabled_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_ConnectionsDisabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_EnableConnections_Proxy( 
    _Workbook * This);


void __RPC_STUB _Workbook_EnableConnections_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ShowPivotChartActiveFields_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_ShowPivotChartActiveFields_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_ShowPivotChartActiveFields_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_ShowPivotChartActiveFields_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ExportAsFixedFormat_Proxy( 
    _Workbook * This,
    /* [in] */ XlFixedFormatType Type,
    /* [optional][in] */ VARIANT Filename,
    /* [optional][in] */ VARIANT Quality,
    /* [optional][in] */ VARIANT IncludeDocProperties,
    /* [optional][in] */ VARIANT IgnorePrintAreas,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT OpenAfterPublish,
    /* [optional][in] */ VARIANT FixedFormatExtClassPtr);


void __RPC_STUB _Workbook_ExportAsFixedFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_IconSets_Proxy( 
    _Workbook * This,
    /* [retval][out] */ IconSets **RHS);


void __RPC_STUB _Workbook_get_IconSets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_EncryptionProvider_Proxy( 
    _Workbook * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB _Workbook_get_EncryptionProvider_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_EncryptionProvider_Proxy( 
    _Workbook * This,
    /* [in] */ BSTR RHS);


void __RPC_STUB _Workbook_put_EncryptionProvider_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_DoNotPromptForConvert_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_DoNotPromptForConvert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_DoNotPromptForConvert_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_DoNotPromptForConvert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Workbook_get_ForceFullCalculation_Proxy( 
    _Workbook * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Workbook_get_ForceFullCalculation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Workbook_put_ForceFullCalculation_Proxy( 
    _Workbook * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Workbook_put_ForceFullCalculation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Workbook_ProtectSharing_Proxy( 
    _Workbook * This,
    /* [optional][in] */ VARIANT Filename,
    /* [optional][in] */ VARIANT Password,
    /* [optional][in] */ VARIANT WriteResPassword,
    /* [optional][in] */ VARIANT ReadOnlyRecommended,
    /* [optional][in] */ VARIANT CreateBackup,
    /* [optional][in] */ VARIANT SharingPassword,
    /* [optional][in] */ VARIANT FileFormat);


void __RPC_STUB _Workbook_ProtectSharing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___Workbook_INTERFACE_DEFINED__ */


#ifndef __IWorkbookEvents_INTERFACE_DEFINED__
#define __IWorkbookEvents_INTERFACE_DEFINED__

/* interface IWorkbookEvents */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IWorkbookEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00024412-0001-0000-C000-000000000046")
    IWorkbookEvents : public IDispatch
    {
    public:
        virtual /* [helpcontext] */ HRESULT __stdcall Open( void) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Activate( void) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Deactivate( void) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall BeforeClose( 
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall BeforeSave( 
            /* [in] */ VARIANT_BOOL SaveAsUI,
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall BeforePrint( 
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall NewSheet( 
            /* [in] */ IDispatch *Sh) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AddinInstall( void) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AddinUninstall( void) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall WindowResize( 
            /* [in] */ Window *Wn) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall WindowActivate( 
            /* [in] */ Window *Wn) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall WindowDeactivate( 
            /* [in] */ Window *Wn) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetSelectionChange( 
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetBeforeDoubleClick( 
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target,
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetBeforeRightClick( 
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target,
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetActivate( 
            /* [in] */ IDispatch *Sh) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetDeactivate( 
            /* [in] */ IDispatch *Sh) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetCalculate( 
            /* [in] */ IDispatch *Sh) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetChange( 
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetFollowHyperlink( 
            /* [in] */ IDispatch *Sh,
            /* [in] */ HyperLink *Target) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SheetPivotTableUpdate( 
            /* [in] */ IDispatch *Sh,
            /* [in] */ PivotTable *Target) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PivotTableCloseConnection( 
            /* [in] */ PivotTable *Target) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PivotTableOpenConnection( 
            /* [in] */ PivotTable *Target) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Sync( 
            /* [in] */ MsoSyncEventType SyncEventType) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall BeforeXmlImport( 
            /* [in] */ XmlMap *Map,
            /* [in] */ BSTR Url,
            /* [in] */ VARIANT_BOOL IsRefresh,
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AfterXmlImport( 
            /* [in] */ XmlMap *Map,
            /* [in] */ VARIANT_BOOL IsRefresh,
            /* [in] */ XlXmlImportResult Result) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall BeforeXmlExport( 
            /* [in] */ XmlMap *Map,
            /* [in] */ BSTR Url,
            /* [out][in] */ VARIANT_BOOL *Cancel) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AfterXmlExport( 
            /* [in] */ XmlMap *Map,
            /* [in] */ BSTR Url,
            /* [in] */ XlXmlExportResult Result) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall RowsetComplete( 
            /* [in] */ BSTR Description,
            /* [in] */ BSTR Sheet,
            /* [in] */ VARIANT_BOOL Success) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWorkbookEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWorkbookEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWorkbookEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWorkbookEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IWorkbookEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IWorkbookEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IWorkbookEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IWorkbookEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Open )( 
            IWorkbookEvents * This);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Activate )( 
            IWorkbookEvents * This);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Deactivate )( 
            IWorkbookEvents * This);
        
        /* [helpcontext] */ HRESULT ( __stdcall *BeforeClose )( 
            IWorkbookEvents * This,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *BeforeSave )( 
            IWorkbookEvents * This,
            /* [in] */ VARIANT_BOOL SaveAsUI,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *BeforePrint )( 
            IWorkbookEvents * This,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *NewSheet )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AddinInstall )( 
            IWorkbookEvents * This);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AddinUninstall )( 
            IWorkbookEvents * This);
        
        /* [helpcontext] */ HRESULT ( __stdcall *WindowResize )( 
            IWorkbookEvents * This,
            /* [in] */ Window *Wn);
        
        /* [helpcontext] */ HRESULT ( __stdcall *WindowActivate )( 
            IWorkbookEvents * This,
            /* [in] */ Window *Wn);
        
        /* [helpcontext] */ HRESULT ( __stdcall *WindowDeactivate )( 
            IWorkbookEvents * This,
            /* [in] */ Window *Wn);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetSelectionChange )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetBeforeDoubleClick )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetBeforeRightClick )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetActivate )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetDeactivate )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetCalculate )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetChange )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh,
            /* [in] */ Range	*Target);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetFollowHyperlink )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh,
            /* [in] */ HyperLink *Target);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SheetPivotTableUpdate )( 
            IWorkbookEvents * This,
            /* [in] */ IDispatch *Sh,
            /* [in] */ PivotTable *Target);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PivotTableCloseConnection )( 
            IWorkbookEvents * This,
            /* [in] */ PivotTable *Target);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PivotTableOpenConnection )( 
            IWorkbookEvents * This,
            /* [in] */ PivotTable *Target);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Sync )( 
            IWorkbookEvents * This,
            /* [in] */ MsoSyncEventType SyncEventType);
        
        /* [helpcontext] */ HRESULT ( __stdcall *BeforeXmlImport )( 
            IWorkbookEvents * This,
            /* [in] */ XmlMap *Map,
            /* [in] */ BSTR Url,
            /* [in] */ VARIANT_BOOL IsRefresh,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AfterXmlImport )( 
            IWorkbookEvents * This,
            /* [in] */ XmlMap *Map,
            /* [in] */ VARIANT_BOOL IsRefresh,
            /* [in] */ XlXmlImportResult Result);
        
        /* [helpcontext] */ HRESULT ( __stdcall *BeforeXmlExport )( 
            IWorkbookEvents * This,
            /* [in] */ XmlMap *Map,
            /* [in] */ BSTR Url,
            /* [out][in] */ VARIANT_BOOL *Cancel);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AfterXmlExport )( 
            IWorkbookEvents * This,
            /* [in] */ XmlMap *Map,
            /* [in] */ BSTR Url,
            /* [in] */ XlXmlExportResult Result);
        
        /* [helpcontext] */ HRESULT ( __stdcall *RowsetComplete )( 
            IWorkbookEvents * This,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR Sheet,
            /* [in] */ VARIANT_BOOL Success);
        
        END_INTERFACE
    } IWorkbookEventsVtbl;

    interface IWorkbookEvents
    {
        CONST_VTBL struct IWorkbookEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWorkbookEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWorkbookEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWorkbookEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWorkbookEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IWorkbookEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IWorkbookEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IWorkbookEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IWorkbookEvents_Open(This)	\
    ( (This)->lpVtbl -> Open(This) ) 

#define IWorkbookEvents_Activate(This)	\
    ( (This)->lpVtbl -> Activate(This) ) 

#define IWorkbookEvents_Deactivate(This)	\
    ( (This)->lpVtbl -> Deactivate(This) ) 

#define IWorkbookEvents_BeforeClose(This,Cancel)	\
    ( (This)->lpVtbl -> BeforeClose(This,Cancel) ) 

#define IWorkbookEvents_BeforeSave(This,SaveAsUI,Cancel)	\
    ( (This)->lpVtbl -> BeforeSave(This,SaveAsUI,Cancel) ) 

#define IWorkbookEvents_BeforePrint(This,Cancel)	\
    ( (This)->lpVtbl -> BeforePrint(This,Cancel) ) 

#define IWorkbookEvents_NewSheet(This,Sh)	\
    ( (This)->lpVtbl -> NewSheet(This,Sh) ) 

#define IWorkbookEvents_AddinInstall(This)	\
    ( (This)->lpVtbl -> AddinInstall(This) ) 

#define IWorkbookEvents_AddinUninstall(This)	\
    ( (This)->lpVtbl -> AddinUninstall(This) ) 

#define IWorkbookEvents_WindowResize(This,Wn)	\
    ( (This)->lpVtbl -> WindowResize(This,Wn) ) 

#define IWorkbookEvents_WindowActivate(This,Wn)	\
    ( (This)->lpVtbl -> WindowActivate(This,Wn) ) 

#define IWorkbookEvents_WindowDeactivate(This,Wn)	\
    ( (This)->lpVtbl -> WindowDeactivate(This,Wn) ) 

#define IWorkbookEvents_SheetSelectionChange(This,Sh,Target)	\
    ( (This)->lpVtbl -> SheetSelectionChange(This,Sh,Target) ) 

#define IWorkbookEvents_SheetBeforeDoubleClick(This,Sh,Target,Cancel)	\
    ( (This)->lpVtbl -> SheetBeforeDoubleClick(This,Sh,Target,Cancel) ) 

#define IWorkbookEvents_SheetBeforeRightClick(This,Sh,Target,Cancel)	\
    ( (This)->lpVtbl -> SheetBeforeRightClick(This,Sh,Target,Cancel) ) 

#define IWorkbookEvents_SheetActivate(This,Sh)	\
    ( (This)->lpVtbl -> SheetActivate(This,Sh) ) 

#define IWorkbookEvents_SheetDeactivate(This,Sh)	\
    ( (This)->lpVtbl -> SheetDeactivate(This,Sh) ) 

#define IWorkbookEvents_SheetCalculate(This,Sh)	\
    ( (This)->lpVtbl -> SheetCalculate(This,Sh) ) 

#define IWorkbookEvents_SheetChange(This,Sh,Target)	\
    ( (This)->lpVtbl -> SheetChange(This,Sh,Target) ) 

#define IWorkbookEvents_SheetFollowHyperlink(This,Sh,Target)	\
    ( (This)->lpVtbl -> SheetFollowHyperlink(This,Sh,Target) ) 

#define IWorkbookEvents_SheetPivotTableUpdate(This,Sh,Target)	\
    ( (This)->lpVtbl -> SheetPivotTableUpdate(This,Sh,Target) ) 

#define IWorkbookEvents_PivotTableCloseConnection(This,Target)	\
    ( (This)->lpVtbl -> PivotTableCloseConnection(This,Target) ) 

#define IWorkbookEvents_PivotTableOpenConnection(This,Target)	\
    ( (This)->lpVtbl -> PivotTableOpenConnection(This,Target) ) 

#define IWorkbookEvents_Sync(This,SyncEventType)	\
    ( (This)->lpVtbl -> Sync(This,SyncEventType) ) 

#define IWorkbookEvents_BeforeXmlImport(This,Map,Url,IsRefresh,Cancel)	\
    ( (This)->lpVtbl -> BeforeXmlImport(This,Map,Url,IsRefresh,Cancel) ) 

#define IWorkbookEvents_AfterXmlImport(This,Map,IsRefresh,Result)	\
    ( (This)->lpVtbl -> AfterXmlImport(This,Map,IsRefresh,Result) ) 

#define IWorkbookEvents_BeforeXmlExport(This,Map,Url,Cancel)	\
    ( (This)->lpVtbl -> BeforeXmlExport(This,Map,Url,Cancel) ) 

#define IWorkbookEvents_AfterXmlExport(This,Map,Url,Result)	\
    ( (This)->lpVtbl -> AfterXmlExport(This,Map,Url,Result) ) 

#define IWorkbookEvents_RowsetComplete(This,Description,Sheet,Success)	\
    ( (This)->lpVtbl -> RowsetComplete(This,Description,Sheet,Success) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWorkbookEvents_INTERFACE_DEFINED__ */


#ifndef __Sheets_INTERFACE_DEFINED__
#define __Sheets_INTERFACE_DEFINED__

/* interface Sheets */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID_Sheets;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208D7-0000-0000-C000-000000000046")
    Sheets : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [optional][in] */ VARIANT Count,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE FillAcrossSheets( 
            /* [in] */ Range	*Range,
            /* [defaultvalue][optional][in] */ XlFillWith Type,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE __PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintPreview( 
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [optional][in] */ VARIANT Replace,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HPageBreaks( 
            /* [retval][out] */ HPageBreaks **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VPageBreaks( 
            /* [retval][out] */ vPageBreaks **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__Default( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct SheetsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Sheets * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Sheets * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Sheets * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Sheets * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Sheets * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Sheets * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Sheets * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            Sheets * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            Sheets * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            Sheets * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            Sheets * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [optional][in] */ VARIANT Count,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            Sheets * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            Sheets * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            Sheets * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *FillAcrossSheets )( 
            Sheets * This,
            /* [in] */ Range	*Range,
            /* [defaultvalue][optional][in] */ XlFillWith Type,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            Sheets * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            Sheets * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            Sheets * This,
            /* [retval][out] */ IUnknown **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *__PrintOut )( 
            Sheets * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintPreview )( 
            Sheets * This,
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            Sheets * This,
            /* [optional][in] */ VARIANT Replace,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HPageBreaks )( 
            Sheets * This,
            /* [retval][out] */ HPageBreaks **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VPageBreaks )( 
            Sheets * This,
            /* [retval][out] */ vPageBreaks **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            Sheets * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            Sheets * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__Default )( 
            Sheets * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_PrintOut )( 
            Sheets * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            Sheets * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid);
        
        END_INTERFACE
    } SheetsVtbl;

    interface Sheets
    {
        CONST_VTBL struct SheetsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Sheets_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Sheets_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Sheets_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Sheets_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Sheets_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Sheets_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Sheets_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define Sheets_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define Sheets_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define Sheets_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define Sheets_Add(This,Before,After,Count,Type,lcid,RHS)	\
    ( (This)->lpVtbl -> Add(This,Before,After,Count,Type,lcid,RHS) ) 

#define Sheets_Copy(This,Before,After,lcid)	\
    ( (This)->lpVtbl -> Copy(This,Before,After,lcid) ) 

#define Sheets_get_Count(This,RHS)	\
    ( (This)->lpVtbl -> get_Count(This,RHS) ) 

#define Sheets_Delete(This,lcid)	\
    ( (This)->lpVtbl -> Delete(This,lcid) ) 

#define Sheets_FillAcrossSheets(This,Range,Type,lcid)	\
    ( (This)->lpVtbl -> FillAcrossSheets(This,Range,Type,lcid) ) 

#define Sheets_get_Item(This,Index,RHS)	\
    ( (This)->lpVtbl -> get_Item(This,Index,RHS) ) 

#define Sheets_Move(This,Before,After,lcid)	\
    ( (This)->lpVtbl -> Move(This,Before,After,lcid) ) 

#define Sheets_get__NewEnum(This,RHS)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RHS) ) 

#define Sheets___PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid)	\
    ( (This)->lpVtbl -> __PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid) ) 

#define Sheets_PrintPreview(This,EnableChanges,lcid)	\
    ( (This)->lpVtbl -> PrintPreview(This,EnableChanges,lcid) ) 

#define Sheets_Select(This,Replace,lcid)	\
    ( (This)->lpVtbl -> Select(This,Replace,lcid) ) 

#define Sheets_get_HPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_HPageBreaks(This,RHS) ) 

#define Sheets_get_VPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_VPageBreaks(This,RHS) ) 

#define Sheets_get_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Visible(This,lcid,RHS) ) 

#define Sheets_put_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Visible(This,lcid,RHS) ) 

#define Sheets_get__Default(This,Index,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,Index,RHS) ) 

#define Sheets__PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid)	\
    ( (This)->lpVtbl -> _PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid) ) 

#define Sheets_PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid)	\
    ( (This)->lpVtbl -> PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __Sheets_INTERFACE_DEFINED__ */


#ifndef __INames_INTERFACE_DEFINED__
#define __INames_INTERFACE_DEFINED__

/* interface INames */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_INames;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208B8-0001-0000-C000-000000000046")
    INames : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Add( 
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT RefersTo,
            /* [optional][in] */ VARIANT Visible,
            /* [optional][in] */ VARIANT MacroType,
            /* [optional][in] */ VARIANT ShortcutKey,
            /* [optional][in] */ VARIANT Category,
            /* [optional][in] */ VARIANT NameLocal,
            /* [optional][in] */ VARIANT RefersToLocal,
            /* [optional][in] */ VARIANT CategoryLocal,
            /* [optional][in] */ VARIANT RefersToR1C1,
            /* [optional][in] */ VARIANT RefersToR1C1Local,
            /* [retval][out] */ Name	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Item( 
            /* [optional][in] */ VARIANT Index,
            /* [optional][in] */ VARIANT IndexLocal,
            /* [optional][in] */ VARIANT RefersTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Name	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall _Default( 
            /* [optional][in] */ VARIANT Index,
            /* [optional][in] */ VARIANT IndexLocal,
            /* [optional][in] */ VARIANT RefersTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Name	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Count( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__NewEnum( 
            /* [retval][out] */ IUnknown **RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INamesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            INames * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            INames * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            INames * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            INames * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            INames * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            INames * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INames * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            INames * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            INames * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            INames * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Add )( 
            INames * This,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT RefersTo,
            /* [optional][in] */ VARIANT Visible,
            /* [optional][in] */ VARIANT MacroType,
            /* [optional][in] */ VARIANT ShortcutKey,
            /* [optional][in] */ VARIANT Category,
            /* [optional][in] */ VARIANT NameLocal,
            /* [optional][in] */ VARIANT RefersToLocal,
            /* [optional][in] */ VARIANT CategoryLocal,
            /* [optional][in] */ VARIANT RefersToR1C1,
            /* [optional][in] */ VARIANT RefersToR1C1Local,
            /* [retval][out] */ Name	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Item )( 
            INames * This,
            /* [optional][in] */ VARIANT Index,
            /* [optional][in] */ VARIANT IndexLocal,
            /* [optional][in] */ VARIANT RefersTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Name	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *_Default )( 
            INames * This,
            /* [optional][in] */ VARIANT Index,
            /* [optional][in] */ VARIANT IndexLocal,
            /* [optional][in] */ VARIANT RefersTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Name	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Count )( 
            INames * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__NewEnum )( 
            INames * This,
            /* [retval][out] */ IUnknown **RHS);
        
        END_INTERFACE
    } INamesVtbl;

    interface INames
    {
        CONST_VTBL struct INamesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INames_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INames_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INames_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INames_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INames_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INames_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INames_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define INames_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define INames_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define INames_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define INames_Add(This,Name,RefersTo,Visible,MacroType,ShortcutKey,Category,NameLocal,RefersToLocal,CategoryLocal,RefersToR1C1,RefersToR1C1Local,RHS)	\
    ( (This)->lpVtbl -> Add(This,Name,RefersTo,Visible,MacroType,ShortcutKey,Category,NameLocal,RefersToLocal,CategoryLocal,RefersToR1C1,RefersToR1C1Local,RHS) ) 

#define INames_Item(This,Index,IndexLocal,RefersTo,lcid,RHS)	\
    ( (This)->lpVtbl -> Item(This,Index,IndexLocal,RefersTo,lcid,RHS) ) 

#define INames__Default(This,Index,IndexLocal,RefersTo,lcid,RHS)	\
    ( (This)->lpVtbl -> _Default(This,Index,IndexLocal,RefersTo,lcid,RHS) ) 

#define INames_get_Count(This,RHS)	\
    ( (This)->lpVtbl -> get_Count(This,RHS) ) 

#define INames_get__NewEnum(This,RHS)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INames_INTERFACE_DEFINED__ */


#ifndef __IName_INTERFACE_DEFINED__
#define __IName_INTERFACE_DEFINED__

/* interface IName */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208B9-0001-0000-C000-000000000046")
    IName : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__Default( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Index( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Category( 
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Category( 
            /* [lcid][in] */ long lcidIn,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CategoryLocal( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_CategoryLocal( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Delete( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_MacroType( 
            /* [retval][out] */ XlXLMMacroType *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_MacroType( 
            /* [in] */ XlXLMMacroType RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Name( 
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Name( 
            /* [lcid][in] */ long lcidIn,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RefersTo( 
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RefersTo( 
            /* [lcid][in] */ long lcidIn,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ShortcutKey( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ShortcutKey( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Value( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Value( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Visible( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Visible( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_NameLocal( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_NameLocal( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RefersToLocal( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RefersToLocal( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RefersToR1C1( 
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RefersToR1C1( 
            /* [lcid][in] */ long lcidIn,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RefersToR1C1Local( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RefersToR1C1Local( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RefersToRange( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Comment( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Comment( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_WorkbookParameter( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_WorkbookParameter( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ValidWorkbookParameter( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IName * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IName * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IName * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IName * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IName * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IName * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IName * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__Default )( 
            IName * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Index )( 
            IName * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Category )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Category )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CategoryLocal )( 
            IName * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_CategoryLocal )( 
            IName * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Delete )( 
            IName * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_MacroType )( 
            IName * This,
            /* [retval][out] */ XlXLMMacroType *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_MacroType )( 
            IName * This,
            /* [in] */ XlXLMMacroType RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Name )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Name )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RefersTo )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RefersTo )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ShortcutKey )( 
            IName * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ShortcutKey )( 
            IName * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Value )( 
            IName * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Value )( 
            IName * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Visible )( 
            IName * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Visible )( 
            IName * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_NameLocal )( 
            IName * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_NameLocal )( 
            IName * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RefersToLocal )( 
            IName * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RefersToLocal )( 
            IName * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RefersToR1C1 )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RefersToR1C1 )( 
            IName * This,
            /* [lcid][in] */ long lcidIn,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RefersToR1C1Local )( 
            IName * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RefersToR1C1Local )( 
            IName * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RefersToRange )( 
            IName * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Comment )( 
            IName * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Comment )( 
            IName * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_WorkbookParameter )( 
            IName * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_WorkbookParameter )( 
            IName * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ValidWorkbookParameter )( 
            IName * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        END_INTERFACE
    } INameVtbl;

    interface IName
    {
        CONST_VTBL struct INameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IName_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IName_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IName_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IName_get__Default(This,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,RHS) ) 

#define IName_get_Index(This,RHS)	\
    ( (This)->lpVtbl -> get_Index(This,RHS) ) 

#define IName_get_Category(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> get_Category(This,lcidIn,RHS) ) 

#define IName_put_Category(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> put_Category(This,lcidIn,RHS) ) 

#define IName_get_CategoryLocal(This,RHS)	\
    ( (This)->lpVtbl -> get_CategoryLocal(This,RHS) ) 

#define IName_put_CategoryLocal(This,RHS)	\
    ( (This)->lpVtbl -> put_CategoryLocal(This,RHS) ) 

#define IName_Delete(This)	\
    ( (This)->lpVtbl -> Delete(This) ) 

#define IName_get_MacroType(This,RHS)	\
    ( (This)->lpVtbl -> get_MacroType(This,RHS) ) 

#define IName_put_MacroType(This,RHS)	\
    ( (This)->lpVtbl -> put_MacroType(This,RHS) ) 

#define IName_get_Name(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> get_Name(This,lcidIn,RHS) ) 

#define IName_put_Name(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> put_Name(This,lcidIn,RHS) ) 

#define IName_get_RefersTo(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> get_RefersTo(This,lcidIn,RHS) ) 

#define IName_put_RefersTo(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> put_RefersTo(This,lcidIn,RHS) ) 

#define IName_get_ShortcutKey(This,RHS)	\
    ( (This)->lpVtbl -> get_ShortcutKey(This,RHS) ) 

#define IName_put_ShortcutKey(This,RHS)	\
    ( (This)->lpVtbl -> put_ShortcutKey(This,RHS) ) 

#define IName_get_Value(This,RHS)	\
    ( (This)->lpVtbl -> get_Value(This,RHS) ) 

#define IName_put_Value(This,RHS)	\
    ( (This)->lpVtbl -> put_Value(This,RHS) ) 

#define IName_get_Visible(This,RHS)	\
    ( (This)->lpVtbl -> get_Visible(This,RHS) ) 

#define IName_put_Visible(This,RHS)	\
    ( (This)->lpVtbl -> put_Visible(This,RHS) ) 

#define IName_get_NameLocal(This,RHS)	\
    ( (This)->lpVtbl -> get_NameLocal(This,RHS) ) 

#define IName_put_NameLocal(This,RHS)	\
    ( (This)->lpVtbl -> put_NameLocal(This,RHS) ) 

#define IName_get_RefersToLocal(This,RHS)	\
    ( (This)->lpVtbl -> get_RefersToLocal(This,RHS) ) 

#define IName_put_RefersToLocal(This,RHS)	\
    ( (This)->lpVtbl -> put_RefersToLocal(This,RHS) ) 

#define IName_get_RefersToR1C1(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> get_RefersToR1C1(This,lcidIn,RHS) ) 

#define IName_put_RefersToR1C1(This,lcidIn,RHS)	\
    ( (This)->lpVtbl -> put_RefersToR1C1(This,lcidIn,RHS) ) 

#define IName_get_RefersToR1C1Local(This,RHS)	\
    ( (This)->lpVtbl -> get_RefersToR1C1Local(This,RHS) ) 

#define IName_put_RefersToR1C1Local(This,RHS)	\
    ( (This)->lpVtbl -> put_RefersToR1C1Local(This,RHS) ) 

#define IName_get_RefersToRange(This,RHS)	\
    ( (This)->lpVtbl -> get_RefersToRange(This,RHS) ) 

#define IName_get_Comment(This,RHS)	\
    ( (This)->lpVtbl -> get_Comment(This,RHS) ) 

#define IName_put_Comment(This,RHS)	\
    ( (This)->lpVtbl -> put_Comment(This,RHS) ) 

#define IName_get_WorkbookParameter(This,RHS)	\
    ( (This)->lpVtbl -> get_WorkbookParameter(This,RHS) ) 

#define IName_put_WorkbookParameter(This,RHS)	\
    ( (This)->lpVtbl -> put_WorkbookParameter(This,RHS) ) 

#define IName_get_ValidWorkbookParameter(This,RHS)	\
    ( (This)->lpVtbl -> get_ValidWorkbookParameter(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IName_INTERFACE_DEFINED__ */


#ifndef __IBorders_INTERFACE_DEFINED__
#define __IBorders_INTERFACE_DEFINED__

/* interface IBorders */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IBorders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00020855-0001-0000-C000-000000000046")
    IBorders : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Color( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Color( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ColorIndex( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ColorIndex( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Count( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Item( 
            /* [in] */ XlBordersIndex Index,
            /* [retval][out] */ Border	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LineStyle( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LineStyle( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__NewEnum( 
            /* [retval][out] */ IUnknown **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Value( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Value( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Weight( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Weight( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__Default( 
            /* [in] */ XlBordersIndex Index,
            /* [retval][out] */ Border	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ThemeColor( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ThemeColor( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_TintAndShade( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_TintAndShade( 
            /* [in] */ VARIANT RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBordersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBorders * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBorders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBorders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IBorders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IBorders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IBorders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IBorders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IBorders * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IBorders * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IBorders * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Color )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Color )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ColorIndex )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ColorIndex )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Count )( 
            IBorders * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Item )( 
            IBorders * This,
            /* [in] */ XlBordersIndex Index,
            /* [retval][out] */ Border	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LineStyle )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LineStyle )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__NewEnum )( 
            IBorders * This,
            /* [retval][out] */ IUnknown **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Value )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Value )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Weight )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Weight )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__Default )( 
            IBorders * This,
            /* [in] */ XlBordersIndex Index,
            /* [retval][out] */ Border	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ThemeColor )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ThemeColor )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_TintAndShade )( 
            IBorders * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_TintAndShade )( 
            IBorders * This,
            /* [in] */ VARIANT RHS);
        
        END_INTERFACE
    } IBordersVtbl;

    interface IBorders
    {
        CONST_VTBL struct IBordersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBorders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBorders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBorders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBorders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IBorders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IBorders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IBorders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IBorders_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IBorders_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IBorders_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IBorders_get_Color(This,RHS)	\
    ( (This)->lpVtbl -> get_Color(This,RHS) ) 

#define IBorders_put_Color(This,RHS)	\
    ( (This)->lpVtbl -> put_Color(This,RHS) ) 

#define IBorders_get_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> get_ColorIndex(This,RHS) ) 

#define IBorders_put_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> put_ColorIndex(This,RHS) ) 

#define IBorders_get_Count(This,RHS)	\
    ( (This)->lpVtbl -> get_Count(This,RHS) ) 

#define IBorders_get_Item(This,Index,RHS)	\
    ( (This)->lpVtbl -> get_Item(This,Index,RHS) ) 

#define IBorders_get_LineStyle(This,RHS)	\
    ( (This)->lpVtbl -> get_LineStyle(This,RHS) ) 

#define IBorders_put_LineStyle(This,RHS)	\
    ( (This)->lpVtbl -> put_LineStyle(This,RHS) ) 

#define IBorders_get__NewEnum(This,RHS)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RHS) ) 

#define IBorders_get_Value(This,RHS)	\
    ( (This)->lpVtbl -> get_Value(This,RHS) ) 

#define IBorders_put_Value(This,RHS)	\
    ( (This)->lpVtbl -> put_Value(This,RHS) ) 

#define IBorders_get_Weight(This,RHS)	\
    ( (This)->lpVtbl -> get_Weight(This,RHS) ) 

#define IBorders_put_Weight(This,RHS)	\
    ( (This)->lpVtbl -> put_Weight(This,RHS) ) 

#define IBorders_get__Default(This,Index,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,Index,RHS) ) 

#define IBorders_get_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> get_ThemeColor(This,RHS) ) 

#define IBorders_put_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> put_ThemeColor(This,RHS) ) 

#define IBorders_get_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> get_TintAndShade(This,RHS) ) 

#define IBorders_put_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> put_TintAndShade(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBorders_INTERFACE_DEFINED__ */


#ifndef __IBorder_INTERFACE_DEFINED__
#define __IBorder_INTERFACE_DEFINED__

/* interface IBorder */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IBorder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00020854-0001-0000-C000-000000000046")
    IBorder : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Color( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Color( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ColorIndex( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ColorIndex( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LineStyle( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LineStyle( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Weight( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Weight( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ThemeColor( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ThemeColor( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_TintAndShade( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_TintAndShade( 
            /* [in] */ VARIANT RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IBorderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IBorder * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IBorder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IBorder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IBorder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IBorder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IBorder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IBorder * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IBorder * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IBorder * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IBorder * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Color )( 
            IBorder * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Color )( 
            IBorder * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ColorIndex )( 
            IBorder * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ColorIndex )( 
            IBorder * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LineStyle )( 
            IBorder * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LineStyle )( 
            IBorder * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Weight )( 
            IBorder * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Weight )( 
            IBorder * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ThemeColor )( 
            IBorder * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ThemeColor )( 
            IBorder * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_TintAndShade )( 
            IBorder * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_TintAndShade )( 
            IBorder * This,
            /* [in] */ VARIANT RHS);
        
        END_INTERFACE
    } IBorderVtbl;

    interface IBorder
    {
        CONST_VTBL struct IBorderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IBorder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IBorder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IBorder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IBorder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IBorder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IBorder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IBorder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IBorder_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IBorder_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IBorder_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IBorder_get_Color(This,RHS)	\
    ( (This)->lpVtbl -> get_Color(This,RHS) ) 

#define IBorder_put_Color(This,RHS)	\
    ( (This)->lpVtbl -> put_Color(This,RHS) ) 

#define IBorder_get_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> get_ColorIndex(This,RHS) ) 

#define IBorder_put_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> put_ColorIndex(This,RHS) ) 

#define IBorder_get_LineStyle(This,RHS)	\
    ( (This)->lpVtbl -> get_LineStyle(This,RHS) ) 

#define IBorder_put_LineStyle(This,RHS)	\
    ( (This)->lpVtbl -> put_LineStyle(This,RHS) ) 

#define IBorder_get_Weight(This,RHS)	\
    ( (This)->lpVtbl -> get_Weight(This,RHS) ) 

#define IBorder_put_Weight(This,RHS)	\
    ( (This)->lpVtbl -> put_Weight(This,RHS) ) 

#define IBorder_get_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> get_ThemeColor(This,RHS) ) 

#define IBorder_put_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> put_ThemeColor(This,RHS) ) 

#define IBorder_get_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> get_TintAndShade(This,RHS) ) 

#define IBorder_put_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> put_TintAndShade(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IBorder_INTERFACE_DEFINED__ */


#ifndef __IInterior_INTERFACE_DEFINED__
#define __IInterior_INTERFACE_DEFINED__

/* interface IInterior */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IInterior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00020870-0001-0000-C000-000000000046")
    IInterior : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Color( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Color( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ColorIndex( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ColorIndex( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_InvertIfNegative( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_InvertIfNegative( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Pattern( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Pattern( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PatternColor( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PatternColor( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PatternColorIndex( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PatternColorIndex( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ThemeColor( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ThemeColor( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_TintAndShade( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_TintAndShade( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PatternThemeColor( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PatternThemeColor( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PatternTintAndShade( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PatternTintAndShade( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Gradient( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IInteriorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IInterior * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IInterior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IInterior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IInterior * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IInterior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IInterior * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IInterior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IInterior * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IInterior * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IInterior * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Color )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Color )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ColorIndex )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ColorIndex )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_InvertIfNegative )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_InvertIfNegative )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Pattern )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Pattern )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PatternColor )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PatternColor )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PatternColorIndex )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PatternColorIndex )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ThemeColor )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ThemeColor )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_TintAndShade )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_TintAndShade )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PatternThemeColor )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PatternThemeColor )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PatternTintAndShade )( 
            IInterior * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PatternTintAndShade )( 
            IInterior * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Gradient )( 
            IInterior * This,
            /* [retval][out] */ IDispatch **RHS);
        
        END_INTERFACE
    } IInteriorVtbl;

    interface IInterior
    {
        CONST_VTBL struct IInteriorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IInterior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IInterior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IInterior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IInterior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IInterior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IInterior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IInterior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IInterior_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IInterior_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IInterior_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IInterior_get_Color(This,RHS)	\
    ( (This)->lpVtbl -> get_Color(This,RHS) ) 

#define IInterior_put_Color(This,RHS)	\
    ( (This)->lpVtbl -> put_Color(This,RHS) ) 

#define IInterior_get_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> get_ColorIndex(This,RHS) ) 

#define IInterior_put_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> put_ColorIndex(This,RHS) ) 

#define IInterior_get_InvertIfNegative(This,RHS)	\
    ( (This)->lpVtbl -> get_InvertIfNegative(This,RHS) ) 

#define IInterior_put_InvertIfNegative(This,RHS)	\
    ( (This)->lpVtbl -> put_InvertIfNegative(This,RHS) ) 

#define IInterior_get_Pattern(This,RHS)	\
    ( (This)->lpVtbl -> get_Pattern(This,RHS) ) 

#define IInterior_put_Pattern(This,RHS)	\
    ( (This)->lpVtbl -> put_Pattern(This,RHS) ) 

#define IInterior_get_PatternColor(This,RHS)	\
    ( (This)->lpVtbl -> get_PatternColor(This,RHS) ) 

#define IInterior_put_PatternColor(This,RHS)	\
    ( (This)->lpVtbl -> put_PatternColor(This,RHS) ) 

#define IInterior_get_PatternColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> get_PatternColorIndex(This,RHS) ) 

#define IInterior_put_PatternColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> put_PatternColorIndex(This,RHS) ) 

#define IInterior_get_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> get_ThemeColor(This,RHS) ) 

#define IInterior_put_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> put_ThemeColor(This,RHS) ) 

#define IInterior_get_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> get_TintAndShade(This,RHS) ) 

#define IInterior_put_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> put_TintAndShade(This,RHS) ) 

#define IInterior_get_PatternThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> get_PatternThemeColor(This,RHS) ) 

#define IInterior_put_PatternThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> put_PatternThemeColor(This,RHS) ) 

#define IInterior_get_PatternTintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> get_PatternTintAndShade(This,RHS) ) 

#define IInterior_put_PatternTintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> put_PatternTintAndShade(This,RHS) ) 

#define IInterior_get_Gradient(This,RHS)	\
    ( (This)->lpVtbl -> get_Gradient(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IInterior_INTERFACE_DEFINED__ */


#ifndef __IOutline_INTERFACE_DEFINED__
#define __IOutline_INTERFACE_DEFINED__

/* interface IOutline */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IOutline;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208AB-0001-0000-C000-000000000046")
    IOutline : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_AutomaticStyles( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_AutomaticStyles( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ShowLevels( 
            /* [optional][in] */ VARIANT RowLevels,
            /* [optional][in] */ VARIANT ColumnLevels,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_SummaryColumn( 
            /* [retval][out] */ XlSummaryColumn *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_SummaryColumn( 
            /* [in] */ XlSummaryColumn RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_SummaryRow( 
            /* [retval][out] */ XlSummaryRow *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_SummaryRow( 
            /* [in] */ XlSummaryRow RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IOutlineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IOutline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IOutline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IOutline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IOutline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IOutline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IOutline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IOutline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IOutline * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IOutline * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IOutline * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_AutomaticStyles )( 
            IOutline * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_AutomaticStyles )( 
            IOutline * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ShowLevels )( 
            IOutline * This,
            /* [optional][in] */ VARIANT RowLevels,
            /* [optional][in] */ VARIANT ColumnLevels,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_SummaryColumn )( 
            IOutline * This,
            /* [retval][out] */ XlSummaryColumn *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_SummaryColumn )( 
            IOutline * This,
            /* [in] */ XlSummaryColumn RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_SummaryRow )( 
            IOutline * This,
            /* [retval][out] */ XlSummaryRow *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_SummaryRow )( 
            IOutline * This,
            /* [in] */ XlSummaryRow RHS);
        
        END_INTERFACE
    } IOutlineVtbl;

    interface IOutline
    {
        CONST_VTBL struct IOutlineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IOutline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IOutline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IOutline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IOutline_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IOutline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IOutline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IOutline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IOutline_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IOutline_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IOutline_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IOutline_get_AutomaticStyles(This,RHS)	\
    ( (This)->lpVtbl -> get_AutomaticStyles(This,RHS) ) 

#define IOutline_put_AutomaticStyles(This,RHS)	\
    ( (This)->lpVtbl -> put_AutomaticStyles(This,RHS) ) 

#define IOutline_ShowLevels(This,RowLevels,ColumnLevels,RHS)	\
    ( (This)->lpVtbl -> ShowLevels(This,RowLevels,ColumnLevels,RHS) ) 

#define IOutline_get_SummaryColumn(This,RHS)	\
    ( (This)->lpVtbl -> get_SummaryColumn(This,RHS) ) 

#define IOutline_put_SummaryColumn(This,RHS)	\
    ( (This)->lpVtbl -> put_SummaryColumn(This,RHS) ) 

#define IOutline_get_SummaryRow(This,RHS)	\
    ( (This)->lpVtbl -> get_SummaryRow(This,RHS) ) 

#define IOutline_put_SummaryRow(This,RHS)	\
    ( (This)->lpVtbl -> put_SummaryRow(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IOutline_INTERFACE_DEFINED__ */


#ifndef __IPageSetup_INTERFACE_DEFINED__
#define __IPageSetup_INTERFACE_DEFINED__

/* interface IPageSetup */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IPageSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208B4-0001-0000-C000-000000000046")
    IPageSetup : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_BlackAndWhite( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_BlackAndWhite( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_BottomMargin( 
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_BottomMargin( 
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CenterFooter( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_CenterFooter( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CenterHeader( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_CenterHeader( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CenterHorizontally( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_CenterHorizontally( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CenterVertically( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_CenterVertically( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget] */ HRESULT __stdcall get_ChartSize( 
            /* [retval][out] */ XlObjectSize *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput] */ HRESULT __stdcall put_ChartSize( 
            /* [in] */ XlObjectSize RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Draft( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Draft( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FirstPageNumber( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FirstPageNumber( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FitToPagesTall( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FitToPagesTall( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FitToPagesWide( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FitToPagesWide( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FooterMargin( 
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FooterMargin( 
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_HeaderMargin( 
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_HeaderMargin( 
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LeftFooter( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LeftFooter( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LeftHeader( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LeftHeader( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LeftMargin( 
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_LeftMargin( 
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Order( 
            /* [retval][out] */ XlOrder *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Order( 
            /* [in] */ XlOrder RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Orientation( 
            /* [retval][out] */ XlPageOrientation *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Orientation( 
            /* [in] */ XlPageOrientation RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PaperSize( 
            /* [retval][out] */ XlPaperSize *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PaperSize( 
            /* [in] */ XlPaperSize RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintArea( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintArea( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintGridlines( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintGridlines( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintHeadings( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintHeadings( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintNotes( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintNotes( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintQuality( 
            /* [optional][in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintQuality( 
            /* [optional][in] */ VARIANT Index,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintTitleColumns( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintTitleColumns( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintTitleRows( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintTitleRows( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RightFooter( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RightFooter( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RightHeader( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RightHeader( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RightMargin( 
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RightMargin( 
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_TopMargin( 
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_TopMargin( 
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Zoom( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Zoom( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintComments( 
            /* [retval][out] */ XlPrintLocation *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintComments( 
            /* [in] */ XlPrintLocation RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrintErrors( 
            /* [retval][out] */ XlPrintErrors *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PrintErrors( 
            /* [in] */ XlPrintErrors RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CenterHeaderPicture( 
            /* [retval][out] */ Graphic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CenterFooterPicture( 
            /* [retval][out] */ Graphic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LeftHeaderPicture( 
            /* [retval][out] */ Graphic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LeftFooterPicture( 
            /* [retval][out] */ Graphic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RightHeaderPicture( 
            /* [retval][out] */ Graphic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RightFooterPicture( 
            /* [retval][out] */ Graphic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_OddAndEvenPagesHeaderFooter( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_OddAndEvenPagesHeaderFooter( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_DifferentFirstPageHeaderFooter( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_DifferentFirstPageHeaderFooter( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ScaleWithDocHeaderFooter( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ScaleWithDocHeaderFooter( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_AlignMarginsHeaderFooter( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_AlignMarginsHeaderFooter( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Pages( 
            /* [retval][out] */ Pages **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_EvenPage( 
            /* [retval][out] */ Page **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FirstPage( 
            /* [retval][out] */ Page **RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IPageSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPageSetup * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPageSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPageSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPageSetup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPageSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPageSetup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPageSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IPageSetup * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IPageSetup * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IPageSetup * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_BlackAndWhite )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_BlackAndWhite )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_BottomMargin )( 
            IPageSetup * This,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_BottomMargin )( 
            IPageSetup * This,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CenterFooter )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_CenterFooter )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CenterHeader )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_CenterHeader )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CenterHorizontally )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_CenterHorizontally )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CenterVertically )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_CenterVertically )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget] */ HRESULT ( __stdcall *get_ChartSize )( 
            IPageSetup * This,
            /* [retval][out] */ XlObjectSize *RHS);
        
        /* [helpcontext][hidden][propput] */ HRESULT ( __stdcall *put_ChartSize )( 
            IPageSetup * This,
            /* [in] */ XlObjectSize RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Draft )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Draft )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FirstPageNumber )( 
            IPageSetup * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FirstPageNumber )( 
            IPageSetup * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FitToPagesTall )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FitToPagesTall )( 
            IPageSetup * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FitToPagesWide )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FitToPagesWide )( 
            IPageSetup * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FooterMargin )( 
            IPageSetup * This,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FooterMargin )( 
            IPageSetup * This,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_HeaderMargin )( 
            IPageSetup * This,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_HeaderMargin )( 
            IPageSetup * This,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LeftFooter )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LeftFooter )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LeftHeader )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LeftHeader )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LeftMargin )( 
            IPageSetup * This,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_LeftMargin )( 
            IPageSetup * This,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Order )( 
            IPageSetup * This,
            /* [retval][out] */ XlOrder *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Order )( 
            IPageSetup * This,
            /* [in] */ XlOrder RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Orientation )( 
            IPageSetup * This,
            /* [retval][out] */ XlPageOrientation *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Orientation )( 
            IPageSetup * This,
            /* [in] */ XlPageOrientation RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PaperSize )( 
            IPageSetup * This,
            /* [retval][out] */ XlPaperSize *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PaperSize )( 
            IPageSetup * This,
            /* [in] */ XlPaperSize RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintArea )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintArea )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintGridlines )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintGridlines )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintHeadings )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintHeadings )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintNotes )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintNotes )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintQuality )( 
            IPageSetup * This,
            /* [optional][in] */ VARIANT Index,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintQuality )( 
            IPageSetup * This,
            /* [optional][in] */ VARIANT Index,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintTitleColumns )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintTitleColumns )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintTitleRows )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintTitleRows )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RightFooter )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RightFooter )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RightHeader )( 
            IPageSetup * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RightHeader )( 
            IPageSetup * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RightMargin )( 
            IPageSetup * This,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RightMargin )( 
            IPageSetup * This,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_TopMargin )( 
            IPageSetup * This,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_TopMargin )( 
            IPageSetup * This,
            /* [in] */ double RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Zoom )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Zoom )( 
            IPageSetup * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintComments )( 
            IPageSetup * This,
            /* [retval][out] */ XlPrintLocation *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintComments )( 
            IPageSetup * This,
            /* [in] */ XlPrintLocation RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrintErrors )( 
            IPageSetup * This,
            /* [retval][out] */ XlPrintErrors *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PrintErrors )( 
            IPageSetup * This,
            /* [in] */ XlPrintErrors RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CenterHeaderPicture )( 
            IPageSetup * This,
            /* [retval][out] */ Graphic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CenterFooterPicture )( 
            IPageSetup * This,
            /* [retval][out] */ Graphic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LeftHeaderPicture )( 
            IPageSetup * This,
            /* [retval][out] */ Graphic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LeftFooterPicture )( 
            IPageSetup * This,
            /* [retval][out] */ Graphic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RightHeaderPicture )( 
            IPageSetup * This,
            /* [retval][out] */ Graphic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RightFooterPicture )( 
            IPageSetup * This,
            /* [retval][out] */ Graphic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_OddAndEvenPagesHeaderFooter )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_OddAndEvenPagesHeaderFooter )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_DifferentFirstPageHeaderFooter )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_DifferentFirstPageHeaderFooter )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ScaleWithDocHeaderFooter )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ScaleWithDocHeaderFooter )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_AlignMarginsHeaderFooter )( 
            IPageSetup * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_AlignMarginsHeaderFooter )( 
            IPageSetup * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Pages )( 
            IPageSetup * This,
            /* [retval][out] */ Pages **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_EvenPage )( 
            IPageSetup * This,
            /* [retval][out] */ Page **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FirstPage )( 
            IPageSetup * This,
            /* [retval][out] */ Page **RHS);
        
        END_INTERFACE
    } IPageSetupVtbl;

    interface IPageSetup
    {
        CONST_VTBL struct IPageSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPageSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPageSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPageSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPageSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPageSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPageSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPageSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPageSetup_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IPageSetup_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IPageSetup_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IPageSetup_get_BlackAndWhite(This,RHS)	\
    ( (This)->lpVtbl -> get_BlackAndWhite(This,RHS) ) 

#define IPageSetup_put_BlackAndWhite(This,RHS)	\
    ( (This)->lpVtbl -> put_BlackAndWhite(This,RHS) ) 

#define IPageSetup_get_BottomMargin(This,RHS)	\
    ( (This)->lpVtbl -> get_BottomMargin(This,RHS) ) 

#define IPageSetup_put_BottomMargin(This,RHS)	\
    ( (This)->lpVtbl -> put_BottomMargin(This,RHS) ) 

#define IPageSetup_get_CenterFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_CenterFooter(This,RHS) ) 

#define IPageSetup_put_CenterFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_CenterFooter(This,RHS) ) 

#define IPageSetup_get_CenterHeader(This,RHS)	\
    ( (This)->lpVtbl -> get_CenterHeader(This,RHS) ) 

#define IPageSetup_put_CenterHeader(This,RHS)	\
    ( (This)->lpVtbl -> put_CenterHeader(This,RHS) ) 

#define IPageSetup_get_CenterHorizontally(This,RHS)	\
    ( (This)->lpVtbl -> get_CenterHorizontally(This,RHS) ) 

#define IPageSetup_put_CenterHorizontally(This,RHS)	\
    ( (This)->lpVtbl -> put_CenterHorizontally(This,RHS) ) 

#define IPageSetup_get_CenterVertically(This,RHS)	\
    ( (This)->lpVtbl -> get_CenterVertically(This,RHS) ) 

#define IPageSetup_put_CenterVertically(This,RHS)	\
    ( (This)->lpVtbl -> put_CenterVertically(This,RHS) ) 

#define IPageSetup_get_ChartSize(This,RHS)	\
    ( (This)->lpVtbl -> get_ChartSize(This,RHS) ) 

#define IPageSetup_put_ChartSize(This,RHS)	\
    ( (This)->lpVtbl -> put_ChartSize(This,RHS) ) 

#define IPageSetup_get_Draft(This,RHS)	\
    ( (This)->lpVtbl -> get_Draft(This,RHS) ) 

#define IPageSetup_put_Draft(This,RHS)	\
    ( (This)->lpVtbl -> put_Draft(This,RHS) ) 

#define IPageSetup_get_FirstPageNumber(This,RHS)	\
    ( (This)->lpVtbl -> get_FirstPageNumber(This,RHS) ) 

#define IPageSetup_put_FirstPageNumber(This,RHS)	\
    ( (This)->lpVtbl -> put_FirstPageNumber(This,RHS) ) 

#define IPageSetup_get_FitToPagesTall(This,RHS)	\
    ( (This)->lpVtbl -> get_FitToPagesTall(This,RHS) ) 

#define IPageSetup_put_FitToPagesTall(This,RHS)	\
    ( (This)->lpVtbl -> put_FitToPagesTall(This,RHS) ) 

#define IPageSetup_get_FitToPagesWide(This,RHS)	\
    ( (This)->lpVtbl -> get_FitToPagesWide(This,RHS) ) 

#define IPageSetup_put_FitToPagesWide(This,RHS)	\
    ( (This)->lpVtbl -> put_FitToPagesWide(This,RHS) ) 

#define IPageSetup_get_FooterMargin(This,RHS)	\
    ( (This)->lpVtbl -> get_FooterMargin(This,RHS) ) 

#define IPageSetup_put_FooterMargin(This,RHS)	\
    ( (This)->lpVtbl -> put_FooterMargin(This,RHS) ) 

#define IPageSetup_get_HeaderMargin(This,RHS)	\
    ( (This)->lpVtbl -> get_HeaderMargin(This,RHS) ) 

#define IPageSetup_put_HeaderMargin(This,RHS)	\
    ( (This)->lpVtbl -> put_HeaderMargin(This,RHS) ) 

#define IPageSetup_get_LeftFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_LeftFooter(This,RHS) ) 

#define IPageSetup_put_LeftFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_LeftFooter(This,RHS) ) 

#define IPageSetup_get_LeftHeader(This,RHS)	\
    ( (This)->lpVtbl -> get_LeftHeader(This,RHS) ) 

#define IPageSetup_put_LeftHeader(This,RHS)	\
    ( (This)->lpVtbl -> put_LeftHeader(This,RHS) ) 

#define IPageSetup_get_LeftMargin(This,RHS)	\
    ( (This)->lpVtbl -> get_LeftMargin(This,RHS) ) 

#define IPageSetup_put_LeftMargin(This,RHS)	\
    ( (This)->lpVtbl -> put_LeftMargin(This,RHS) ) 

#define IPageSetup_get_Order(This,RHS)	\
    ( (This)->lpVtbl -> get_Order(This,RHS) ) 

#define IPageSetup_put_Order(This,RHS)	\
    ( (This)->lpVtbl -> put_Order(This,RHS) ) 

#define IPageSetup_get_Orientation(This,RHS)	\
    ( (This)->lpVtbl -> get_Orientation(This,RHS) ) 

#define IPageSetup_put_Orientation(This,RHS)	\
    ( (This)->lpVtbl -> put_Orientation(This,RHS) ) 

#define IPageSetup_get_PaperSize(This,RHS)	\
    ( (This)->lpVtbl -> get_PaperSize(This,RHS) ) 

#define IPageSetup_put_PaperSize(This,RHS)	\
    ( (This)->lpVtbl -> put_PaperSize(This,RHS) ) 

#define IPageSetup_get_PrintArea(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintArea(This,RHS) ) 

#define IPageSetup_put_PrintArea(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintArea(This,RHS) ) 

#define IPageSetup_get_PrintGridlines(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintGridlines(This,RHS) ) 

#define IPageSetup_put_PrintGridlines(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintGridlines(This,RHS) ) 

#define IPageSetup_get_PrintHeadings(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintHeadings(This,RHS) ) 

#define IPageSetup_put_PrintHeadings(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintHeadings(This,RHS) ) 

#define IPageSetup_get_PrintNotes(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintNotes(This,RHS) ) 

#define IPageSetup_put_PrintNotes(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintNotes(This,RHS) ) 

#define IPageSetup_get_PrintQuality(This,Index,RHS)	\
    ( (This)->lpVtbl -> get_PrintQuality(This,Index,RHS) ) 

#define IPageSetup_put_PrintQuality(This,Index,RHS)	\
    ( (This)->lpVtbl -> put_PrintQuality(This,Index,RHS) ) 

#define IPageSetup_get_PrintTitleColumns(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintTitleColumns(This,RHS) ) 

#define IPageSetup_put_PrintTitleColumns(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintTitleColumns(This,RHS) ) 

#define IPageSetup_get_PrintTitleRows(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintTitleRows(This,RHS) ) 

#define IPageSetup_put_PrintTitleRows(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintTitleRows(This,RHS) ) 

#define IPageSetup_get_RightFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_RightFooter(This,RHS) ) 

#define IPageSetup_put_RightFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_RightFooter(This,RHS) ) 

#define IPageSetup_get_RightHeader(This,RHS)	\
    ( (This)->lpVtbl -> get_RightHeader(This,RHS) ) 

#define IPageSetup_put_RightHeader(This,RHS)	\
    ( (This)->lpVtbl -> put_RightHeader(This,RHS) ) 

#define IPageSetup_get_RightMargin(This,RHS)	\
    ( (This)->lpVtbl -> get_RightMargin(This,RHS) ) 

#define IPageSetup_put_RightMargin(This,RHS)	\
    ( (This)->lpVtbl -> put_RightMargin(This,RHS) ) 

#define IPageSetup_get_TopMargin(This,RHS)	\
    ( (This)->lpVtbl -> get_TopMargin(This,RHS) ) 

#define IPageSetup_put_TopMargin(This,RHS)	\
    ( (This)->lpVtbl -> put_TopMargin(This,RHS) ) 

#define IPageSetup_get_Zoom(This,RHS)	\
    ( (This)->lpVtbl -> get_Zoom(This,RHS) ) 

#define IPageSetup_put_Zoom(This,RHS)	\
    ( (This)->lpVtbl -> put_Zoom(This,RHS) ) 

#define IPageSetup_get_PrintComments(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintComments(This,RHS) ) 

#define IPageSetup_put_PrintComments(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintComments(This,RHS) ) 

#define IPageSetup_get_PrintErrors(This,RHS)	\
    ( (This)->lpVtbl -> get_PrintErrors(This,RHS) ) 

#define IPageSetup_put_PrintErrors(This,RHS)	\
    ( (This)->lpVtbl -> put_PrintErrors(This,RHS) ) 

#define IPageSetup_get_CenterHeaderPicture(This,RHS)	\
    ( (This)->lpVtbl -> get_CenterHeaderPicture(This,RHS) ) 

#define IPageSetup_get_CenterFooterPicture(This,RHS)	\
    ( (This)->lpVtbl -> get_CenterFooterPicture(This,RHS) ) 

#define IPageSetup_get_LeftHeaderPicture(This,RHS)	\
    ( (This)->lpVtbl -> get_LeftHeaderPicture(This,RHS) ) 

#define IPageSetup_get_LeftFooterPicture(This,RHS)	\
    ( (This)->lpVtbl -> get_LeftFooterPicture(This,RHS) ) 

#define IPageSetup_get_RightHeaderPicture(This,RHS)	\
    ( (This)->lpVtbl -> get_RightHeaderPicture(This,RHS) ) 

#define IPageSetup_get_RightFooterPicture(This,RHS)	\
    ( (This)->lpVtbl -> get_RightFooterPicture(This,RHS) ) 

#define IPageSetup_get_OddAndEvenPagesHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_OddAndEvenPagesHeaderFooter(This,RHS) ) 

#define IPageSetup_put_OddAndEvenPagesHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_OddAndEvenPagesHeaderFooter(This,RHS) ) 

#define IPageSetup_get_DifferentFirstPageHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_DifferentFirstPageHeaderFooter(This,RHS) ) 

#define IPageSetup_put_DifferentFirstPageHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_DifferentFirstPageHeaderFooter(This,RHS) ) 

#define IPageSetup_get_ScaleWithDocHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_ScaleWithDocHeaderFooter(This,RHS) ) 

#define IPageSetup_put_ScaleWithDocHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_ScaleWithDocHeaderFooter(This,RHS) ) 

#define IPageSetup_get_AlignMarginsHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> get_AlignMarginsHeaderFooter(This,RHS) ) 

#define IPageSetup_put_AlignMarginsHeaderFooter(This,RHS)	\
    ( (This)->lpVtbl -> put_AlignMarginsHeaderFooter(This,RHS) ) 

#define IPageSetup_get_Pages(This,RHS)	\
    ( (This)->lpVtbl -> get_Pages(This,RHS) ) 

#define IPageSetup_get_EvenPage(This,RHS)	\
    ( (This)->lpVtbl -> get_EvenPage(This,RHS) ) 

#define IPageSetup_get_FirstPage(This,RHS)	\
    ( (This)->lpVtbl -> get_FirstPage(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPageSetup_INTERFACE_DEFINED__ */


#ifndef ___IFont_INTERFACE_DEFINED__
#define ___IFont_INTERFACE_DEFINED__

/* interface _IFont */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID__IFont;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0002084D-0001-0000-C000-000000000046")
    _IFont : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Background( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Background( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Bold( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Bold( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Color( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Color( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ColorIndex( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ColorIndex( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FontStyle( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FontStyle( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Italic( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Italic( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Name( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Name( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget] */ HRESULT __stdcall get_OutlineFont( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput] */ HRESULT __stdcall put_OutlineFont( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget] */ HRESULT __stdcall get_Shadow( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput] */ HRESULT __stdcall put_Shadow( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Size( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Size( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Strikethrough( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Strikethrough( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Subscript( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Subscript( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Superscript( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Superscript( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Underline( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Underline( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ThemeColor( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ThemeColor( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_TintAndShade( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_TintAndShade( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ThemeFont( 
            /* [retval][out] */ XlThemeFont *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ThemeFont( 
            /* [in] */ XlThemeFont RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _IFontVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IFont * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IFont * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IFont * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IFont * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IFont * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IFont * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IFont * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            _IFont * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            _IFont * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            _IFont * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Background )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Background )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Bold )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Bold )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Color )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Color )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ColorIndex )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ColorIndex )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FontStyle )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FontStyle )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Italic )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Italic )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Name )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Name )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][hidden][propget] */ HRESULT ( __stdcall *get_OutlineFont )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][propput] */ HRESULT ( __stdcall *put_OutlineFont )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][hidden][propget] */ HRESULT ( __stdcall *get_Shadow )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][propput] */ HRESULT ( __stdcall *put_Shadow )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Size )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Size )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Strikethrough )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Strikethrough )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Subscript )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Subscript )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Superscript )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Superscript )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Underline )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Underline )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ThemeColor )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ThemeColor )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_TintAndShade )( 
            _IFont * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_TintAndShade )( 
            _IFont * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ThemeFont )( 
            _IFont * This,
            /* [retval][out] */ XlThemeFont *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ThemeFont )( 
            _IFont * This,
            /* [in] */ XlThemeFont RHS);
        
        END_INTERFACE
    } _IFontVtbl;

    interface _IFont
    {
        CONST_VTBL struct _IFontVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IFont_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IFont_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IFont_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IFont_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IFont_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IFont_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IFont_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _IFont_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define _IFont_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define _IFont_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define _IFont_get_Background(This,RHS)	\
    ( (This)->lpVtbl -> get_Background(This,RHS) ) 

#define _IFont_put_Background(This,RHS)	\
    ( (This)->lpVtbl -> put_Background(This,RHS) ) 

#define _IFont_get_Bold(This,RHS)	\
    ( (This)->lpVtbl -> get_Bold(This,RHS) ) 

#define _IFont_put_Bold(This,RHS)	\
    ( (This)->lpVtbl -> put_Bold(This,RHS) ) 

#define _IFont_get_Color(This,RHS)	\
    ( (This)->lpVtbl -> get_Color(This,RHS) ) 

#define _IFont_put_Color(This,RHS)	\
    ( (This)->lpVtbl -> put_Color(This,RHS) ) 

#define _IFont_get_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> get_ColorIndex(This,RHS) ) 

#define _IFont_put_ColorIndex(This,RHS)	\
    ( (This)->lpVtbl -> put_ColorIndex(This,RHS) ) 

#define _IFont_get_FontStyle(This,RHS)	\
    ( (This)->lpVtbl -> get_FontStyle(This,RHS) ) 

#define _IFont_put_FontStyle(This,RHS)	\
    ( (This)->lpVtbl -> put_FontStyle(This,RHS) ) 

#define _IFont_get_Italic(This,RHS)	\
    ( (This)->lpVtbl -> get_Italic(This,RHS) ) 

#define _IFont_put_Italic(This,RHS)	\
    ( (This)->lpVtbl -> put_Italic(This,RHS) ) 

#define _IFont_get_Name(This,RHS)	\
    ( (This)->lpVtbl -> get_Name(This,RHS) ) 

#define _IFont_put_Name(This,RHS)	\
    ( (This)->lpVtbl -> put_Name(This,RHS) ) 

#define _IFont_get_OutlineFont(This,RHS)	\
    ( (This)->lpVtbl -> get_OutlineFont(This,RHS) ) 

#define _IFont_put_OutlineFont(This,RHS)	\
    ( (This)->lpVtbl -> put_OutlineFont(This,RHS) ) 

#define _IFont_get_Shadow(This,RHS)	\
    ( (This)->lpVtbl -> get_Shadow(This,RHS) ) 

#define _IFont_put_Shadow(This,RHS)	\
    ( (This)->lpVtbl -> put_Shadow(This,RHS) ) 

#define _IFont_get_Size(This,RHS)	\
    ( (This)->lpVtbl -> get_Size(This,RHS) ) 

#define _IFont_put_Size(This,RHS)	\
    ( (This)->lpVtbl -> put_Size(This,RHS) ) 

#define _IFont_get_Strikethrough(This,RHS)	\
    ( (This)->lpVtbl -> get_Strikethrough(This,RHS) ) 

#define _IFont_put_Strikethrough(This,RHS)	\
    ( (This)->lpVtbl -> put_Strikethrough(This,RHS) ) 

#define _IFont_get_Subscript(This,RHS)	\
    ( (This)->lpVtbl -> get_Subscript(This,RHS) ) 

#define _IFont_put_Subscript(This,RHS)	\
    ( (This)->lpVtbl -> put_Subscript(This,RHS) ) 

#define _IFont_get_Superscript(This,RHS)	\
    ( (This)->lpVtbl -> get_Superscript(This,RHS) ) 

#define _IFont_put_Superscript(This,RHS)	\
    ( (This)->lpVtbl -> put_Superscript(This,RHS) ) 

#define _IFont_get_Underline(This,RHS)	\
    ( (This)->lpVtbl -> get_Underline(This,RHS) ) 

#define _IFont_put_Underline(This,RHS)	\
    ( (This)->lpVtbl -> put_Underline(This,RHS) ) 

#define _IFont_get_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> get_ThemeColor(This,RHS) ) 

#define _IFont_put_ThemeColor(This,RHS)	\
    ( (This)->lpVtbl -> put_ThemeColor(This,RHS) ) 

#define _IFont_get_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> get_TintAndShade(This,RHS) ) 

#define _IFont_put_TintAndShade(This,RHS)	\
    ( (This)->lpVtbl -> put_TintAndShade(This,RHS) ) 

#define _IFont_get_ThemeFont(This,RHS)	\
    ( (This)->lpVtbl -> get_ThemeFont(This,RHS) ) 

#define _IFont_put_ThemeFont(This,RHS)	\
    ( (This)->lpVtbl -> put_ThemeFont(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IFont_INTERFACE_DEFINED__ */


#ifndef __IRange_INTERFACE_DEFINED__
#define __IRange_INTERFACE_DEFINED__

/* interface IRange */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IRange;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00020846-0001-0000-C000-000000000046")
    IRange : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Activate( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_AddIndent( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_AddIndent( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Address( 
            /* [optional][in] */ VARIANT RowAbsolute,
            /* [optional][in] */ VARIANT ColumnAbsolute,
            /* [defaultvalue][optional][in] */ XlReferenceStyle ReferenceStyle,
            /* [optional][in] */ VARIANT External,
            /* [optional][in] */ VARIANT RelativeTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_AddressLocal( 
            /* [optional][in] */ VARIANT RowAbsolute,
            /* [optional][in] */ VARIANT ColumnAbsolute,
            /* [defaultvalue][optional][in] */ XlReferenceStyle ReferenceStyle,
            /* [optional][in] */ VARIANT External,
            /* [optional][in] */ VARIANT RelativeTo,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AdvancedFilter( 
            /* [in] */ XlFilterAction Action,
            /* [optional][in] */ VARIANT CriteriaRange,
            /* [optional][in] */ VARIANT CopyToRange,
            /* [optional][in] */ VARIANT Unique,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ApplyNames( 
            /* [optional][in] */ VARIANT Names,
            /* [optional][in] */ VARIANT IgnoreRelativeAbsolute,
            /* [optional][in] */ VARIANT UseRowColumnNames,
            /* [optional][in] */ VARIANT OmitColumn,
            /* [optional][in] */ VARIANT OmitRow,
            /* [defaultvalue][optional][in] */ XlApplyNamesOrder Order,
            /* [optional][in] */ VARIANT AppendLast,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ApplyOutlineStyles( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Areas( 
            /* [retval][out] */ Areas **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AutoComplete( 
            /* [in] */ BSTR String,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AutoFill( 
            /* [in] */ Range	*Destination,
            /* [defaultvalue][optional][in] */ XlAutoFillType Type,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AutoFilter( 
            /* [optional][in] */ VARIANT Field,
            /* [optional][in] */ VARIANT Criteria1,
            /* [defaultvalue][optional][in] */ XlAutoFilterOperator Operator,
            /* [optional][in] */ VARIANT Criteria2,
            /* [optional][in] */ VARIANT VisibleDropDown,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AutoFit( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall AutoFormat( 
            /* [defaultvalue][optional][in] */ XlRangeAutoFormat Format,
            /* [optional][in] */ VARIANT Number,
            /* [optional][in] */ VARIANT Font,
            /* [optional][in] */ VARIANT Alignment,
            /* [optional][in] */ VARIANT Border,
            /* [optional][in] */ VARIANT Pattern,
            /* [optional][in] */ VARIANT Width,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AutoOutline( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall BorderAround( 
            /* [optional][in] */ VARIANT LineStyle,
            /* [defaultvalue][optional][in] */ XlBorderWeight Weight,
            /* [defaultvalue][optional][in] */ XlColorIndex ColorIndex,
            /* [optional][in] */ VARIANT Color,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Borders( 
            /* [retval][out] */ Borders	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Calculate( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Cells( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Characters( 
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Length,
            /* [retval][out] */ Characters **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall CheckSpelling( 
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [optional][in] */ VARIANT AlwaysSuggest,
            /* [optional][in] */ VARIANT SpellLang,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Clear( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ClearContents( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ClearFormats( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ClearNotes( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ClearOutline( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Column( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ColumnDifferences( 
            /* [in] */ VARIANT Comparison,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Columns( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ColumnWidth( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ColumnWidth( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Consolidate( 
            /* [optional][in] */ VARIANT Sources,
            /* [optional][in] */ VARIANT Function,
            /* [optional][in] */ VARIANT TopRow,
            /* [optional][in] */ VARIANT LeftColumn,
            /* [optional][in] */ VARIANT CreateLinks,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Copy( 
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall CopyFromRecordset( 
            /* [in] */ IUnknown *Data,
            /* [optional][in] */ VARIANT MaxRows,
            /* [optional][in] */ VARIANT MaxColumns,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall CopyPicture( 
            /* [defaultvalue][optional][in] */ XlPictureAppearance Appearance,
            /* [defaultvalue][optional][in] */ XlCopyPictureFormat Format,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Count( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall CreateNames( 
            /* [optional][in] */ VARIANT Top,
            /* [optional][in] */ VARIANT Left,
            /* [optional][in] */ VARIANT Bottom,
            /* [optional][in] */ VARIANT Right,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall CreatePublisher( 
            /* [optional][in] */ VARIANT Edition,
            /* [defaultvalue][optional][in] */ XlPictureAppearance Appearance,
            /* [optional][in] */ VARIANT ContainsPICT,
            /* [optional][in] */ VARIANT ContainsBIFF,
            /* [optional][in] */ VARIANT ContainsRTF,
            /* [optional][in] */ VARIANT ContainsVALU,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CurrentArray( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CurrentRegion( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Cut( 
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall DataSeries( 
            /* [optional][in] */ VARIANT Rowcol,
            /* [defaultvalue][optional][in] */ XlDataSeriesType Type,
            /* [defaultvalue][optional][in] */ XlDataSeriesDate Date,
            /* [optional][in] */ VARIANT Step,
            /* [optional][in] */ VARIANT Stop,
            /* [optional][in] */ VARIANT Trend,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT __stdcall get__Default( 
            /* [optional][in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT __stdcall put__Default( 
            /* [optional][in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Delete( 
            /* [optional][in] */ VARIANT Shift,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Dependents( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall DialogBox( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_DirectDependents( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_DirectPrecedents( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall EditionOptions( 
            /* [in] */ XlEditionType Type,
            /* [in] */ XlEditionOptionsOption Option,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Reference,
            /* [defaultvalue][optional][in] */ XlPictureAppearance Appearance,
            /* [defaultvalue][optional][in] */ XlPictureAppearance ChartSize,
            /* [optional][in] */ VARIANT Format,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_End( 
            /* [in] */ XlDirection Direction,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_EntireColumn( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_EntireRow( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FillDown( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FillLeft( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FillRight( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FillUp( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Find( 
            /* [in] */ VARIANT What,
            /* [optional][in] */ VARIANT After,
            /* [optional][in] */ VARIANT LookIn,
            /* [optional][in] */ VARIANT LookAt,
            /* [optional][in] */ VARIANT SearchOrder,
            /* [defaultvalue][optional][in] */ XlSearchDirection SearchDirection,
            /* [optional][in] */ VARIANT MatchCase,
            /* [optional][in] */ VARIANT MatchByte,
            /* [optional][in] */ VARIANT SearchFormat,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FindNext( 
            /* [optional][in] */ VARIANT After,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FindPrevious( 
            /* [optional][in] */ VARIANT After,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Font( 
            /* [retval][out] */ /* external definition not present */ Font **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Formula( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Formula( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FormulaArray( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FormulaArray( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget] */ HRESULT __stdcall get_FormulaLabel( 
            /* [retval][out] */ XlFormulaLabel *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput] */ HRESULT __stdcall put_FormulaLabel( 
            /* [in] */ XlFormulaLabel RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FormulaHidden( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FormulaHidden( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FormulaLocal( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FormulaLocal( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FormulaR1C1( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FormulaR1C1( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FormulaR1C1Local( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_FormulaR1C1Local( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FunctionWizard( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall GoalSeek( 
            /* [in] */ VARIANT Goal,
            /* [in] */ Range	*ChangingCell,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Group( 
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT End,
            /* [optional][in] */ VARIANT By,
            /* [optional][in] */ VARIANT Periods,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_HasArray( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_HasFormula( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Height( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Hidden( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Hidden( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_HorizontalAlignment( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_HorizontalAlignment( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_IndentLevel( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_IndentLevel( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall InsertIndent( 
            /* [in] */ long InsertAmount) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Insert( 
            /* [optional][in] */ VARIANT Shift,
            /* [optional][in] */ VARIANT CopyOrigin,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Interior( 
            /* [retval][out] */ Interior	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Item( 
            /* [in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Item( 
            /* [in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Justify( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Left( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ListHeaderRows( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ListNames( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_LocationInTable( 
            /* [retval][out] */ XlLocationInTable *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Locked( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Locked( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Merge( 
            /* [optional][in] */ VARIANT Across) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall UnMerge( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_MergeArea( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_MergeCells( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_MergeCells( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Name( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Name( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall NavigateArrow( 
            /* [optional][in] */ VARIANT TowardPrecedent,
            /* [optional][in] */ VARIANT ArrowNumber,
            /* [optional][in] */ VARIANT LinkNumber,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__NewEnum( 
            /* [retval][out] */ IUnknown **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Next( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall NoteText( 
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Length,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_NumberFormat( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_NumberFormat( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_NumberFormatLocal( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_NumberFormatLocal( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Offset( 
            /* [optional][in] */ VARIANT RowOffset,
            /* [optional][in] */ VARIANT ColumnOffset,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Orientation( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Orientation( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_OutlineLevel( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_OutlineLevel( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PageBreak( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_PageBreak( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Parse( 
            /* [optional][in] */ VARIANT ParseLine,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall _PasteSpecial( 
            /* [defaultvalue][optional][in] */ XlPasteType Paste,
            /* [defaultvalue][optional][in] */ XlPasteSpecialOperation Operation,
            /* [optional][in] */ VARIANT SkipBlanks,
            /* [optional][in] */ VARIANT Transpose,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PivotField( 
            /* [retval][out] */ PivotField **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PivotItem( 
            /* [retval][out] */ PivotItem **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PivotTable( 
            /* [retval][out] */ PivotTable **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Precedents( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PrefixCharacter( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Previous( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall __PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PrintPreview( 
            /* [optional][in] */ VARIANT EnableChanges,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_QueryTable( 
            /* [retval][out] */ QueryTable **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Range( 
            /* [in] */ VARIANT Cell1,
            /* [optional][in] */ VARIANT Cell2,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall RemoveSubtotal( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Replace( 
            /* [in] */ VARIANT What,
            /* [in] */ VARIANT Replacement,
            /* [optional][in] */ VARIANT LookAt,
            /* [optional][in] */ VARIANT SearchOrder,
            /* [optional][in] */ VARIANT MatchCase,
            /* [optional][in] */ VARIANT MatchByte,
            /* [optional][in] */ VARIANT SearchFormat,
            /* [optional][in] */ VARIANT ReplaceFormat,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Resize( 
            /* [optional][in] */ VARIANT RowSize,
            /* [optional][in] */ VARIANT ColumnSize,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Row( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall RowDifferences( 
            /* [in] */ VARIANT Comparison,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_RowHeight( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_RowHeight( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Rows( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Run( 
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Select( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Show( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ShowDependents( 
            /* [optional][in] */ VARIANT Remove,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ShowDetail( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ShowDetail( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ShowErrors( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ShowPrecedents( 
            /* [optional][in] */ VARIANT Remove,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ShrinkToFit( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ShrinkToFit( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Sort( 
            /* [optional][in] */ VARIANT Key1,
            /* [defaultvalue][optional][in] */ XlSortOrder Order1,
            /* [optional][in] */ VARIANT Key2,
            /* [optional][in] */ VARIANT Type,
            /* [defaultvalue][optional][in] */ XlSortOrder Order2,
            /* [optional][in] */ VARIANT Key3,
            /* [defaultvalue][optional][in] */ XlSortOrder Order3,
            /* [defaultvalue][optional][in] */ XlYesNoGuess Header,
            /* [optional][in] */ VARIANT OrderCustom,
            /* [optional][in] */ VARIANT MatchCase,
            /* [defaultvalue][optional][in] */ XlSortOrientation Orientation,
            /* [defaultvalue][optional][in] */ XlSortMethod SortMethod,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption1,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption2,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption3,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SortSpecial( 
            /* [defaultvalue][optional][in] */ XlSortMethod SortMethod,
            /* [optional][in] */ VARIANT Key1,
            /* [defaultvalue][optional][in] */ XlSortOrder Order1,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Key2,
            /* [defaultvalue][optional][in] */ XlSortOrder Order2,
            /* [optional][in] */ VARIANT Key3,
            /* [defaultvalue][optional][in] */ XlSortOrder Order3,
            /* [defaultvalue][optional][in] */ XlYesNoGuess Header,
            /* [optional][in] */ VARIANT OrderCustom,
            /* [optional][in] */ VARIANT MatchCase,
            /* [defaultvalue][optional][in] */ XlSortOrientation Orientation,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption1,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption2,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption3,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_SoundNote( 
            /* [retval][out] */ SoundNote **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SpecialCells( 
            /* [in] */ XlCellType Type,
            /* [optional][in] */ VARIANT Value,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Style( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Style( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SubscribeTo( 
            /* [in] */ BSTR Edition,
            /* [defaultvalue][optional][in] */ XlSubscribeToFormat Format,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Subtotal( 
            /* [in] */ long GroupBy,
            /* [in] */ XlConsolidationFunction Function,
            /* [in] */ VARIANT TotalList,
            /* [optional][in] */ VARIANT Replace,
            /* [optional][in] */ VARIANT PageBreaks,
            /* [defaultvalue][optional][in] */ XlSummaryRow SummaryBelowData,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Summary( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Table( 
            /* [optional][in] */ VARIANT RowInput,
            /* [optional][in] */ VARIANT ColumnInput,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Text( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall TextToColumns( 
            /* [optional][in] */ VARIANT Destination,
            /* [defaultvalue][optional][in] */ XlTextParsingType DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT DecimalSeparator,
            /* [optional][in] */ VARIANT ThousandsSeparator,
            /* [optional][in] */ VARIANT TrailingMinusNumbers,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Top( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Ungroup( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_UseStandardHeight( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_UseStandardHeight( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_UseStandardWidth( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_UseStandardWidth( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Validation( 
            /* [retval][out] */ Validation **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Value( 
            /* [optional][in] */ VARIANT RangeValueDataType,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Value( 
            /* [optional][in] */ VARIANT RangeValueDataType,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Value2( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Value2( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_VerticalAlignment( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_VerticalAlignment( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Width( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Worksheet( 
            /* [retval][out] */ Worksheet	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_WrapText( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_WrapText( 
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall AddComment( 
            /* [optional][in] */ VARIANT Text,
            /* [retval][out] */ Comment **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Comment( 
            /* [retval][out] */ Comment **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ClearComments( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Phonetic( 
            /* [retval][out] */ Phonetic **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_FormatConditions( 
            /* [retval][out] */ FormatConditions **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ReadingOrder( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ReadingOrder( 
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Hyperlinks( 
            /* [retval][out] */ HyperLinks **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Phonetics( 
            /* [retval][out] */ Phonetics **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall SetPhonetic( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ID( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_ID( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall _PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_PivotCell( 
            /* [retval][out] */ PivotCell **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Dirty( void) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Errors( 
            /* [retval][out] */ Errors **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_SmartTags( 
            /* [retval][out] */ SmartTags **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Speak( 
            /* [optional][in] */ VARIANT SpeakDirection,
            /* [optional][in] */ VARIANT SpeakFormulas) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PasteSpecial( 
            /* [defaultvalue][optional][in] */ XlPasteType Paste,
            /* [defaultvalue][optional][in] */ XlPasteSpecialOperation Operation,
            /* [optional][in] */ VARIANT SkipBlanks,
            /* [optional][in] */ VARIANT Transpose,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_AllowEdit( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ListObject( 
            /* [retval][out] */ ListObject **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_XPath( 
            /* [retval][out] */ XPath **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_ServerActions( 
            /* [retval][out] */ Actions **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall RemoveDuplicates( 
            /* [optional][in] */ VARIANT Columns,
            /* [defaultvalue][optional][in] */ XlYesNoGuess Header = 2) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_MDX( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall ExportAsFixedFormat( 
            /* [in] */ XlFixedFormatType Type,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Quality,
            /* [optional][in] */ VARIANT IncludeDocProperties,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT OpenAfterPublish,
            /* [optional][in] */ VARIANT FixedFormatExtClassPtr) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_CountLarge( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall CalculateRowMajorOrder( 
            /* [retval][out] */ VARIANT *RHS) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IRangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRange * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRange * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRange * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRange * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRange * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRange * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRange * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IRange * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IRange * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IRange * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Activate )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_AddIndent )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_AddIndent )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Address )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowAbsolute,
            /* [optional][in] */ VARIANT ColumnAbsolute,
            /* [defaultvalue][optional][in] */ XlReferenceStyle ReferenceStyle,
            /* [optional][in] */ VARIANT External,
            /* [optional][in] */ VARIANT RelativeTo,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_AddressLocal )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowAbsolute,
            /* [optional][in] */ VARIANT ColumnAbsolute,
            /* [defaultvalue][optional][in] */ XlReferenceStyle ReferenceStyle,
            /* [optional][in] */ VARIANT External,
            /* [optional][in] */ VARIANT RelativeTo,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AdvancedFilter )( 
            IRange * This,
            /* [in] */ XlFilterAction Action,
            /* [optional][in] */ VARIANT CriteriaRange,
            /* [optional][in] */ VARIANT CopyToRange,
            /* [optional][in] */ VARIANT Unique,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ApplyNames )( 
            IRange * This,
            /* [optional][in] */ VARIANT Names,
            /* [optional][in] */ VARIANT IgnoreRelativeAbsolute,
            /* [optional][in] */ VARIANT UseRowColumnNames,
            /* [optional][in] */ VARIANT OmitColumn,
            /* [optional][in] */ VARIANT OmitRow,
            /* [defaultvalue][optional][in] */ XlApplyNamesOrder Order,
            /* [optional][in] */ VARIANT AppendLast,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ApplyOutlineStyles )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Areas )( 
            IRange * This,
            /* [retval][out] */ Areas **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AutoComplete )( 
            IRange * This,
            /* [in] */ BSTR String,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AutoFill )( 
            IRange * This,
            /* [in] */ Range	*Destination,
            /* [defaultvalue][optional][in] */ XlAutoFillType Type,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AutoFilter )( 
            IRange * This,
            /* [optional][in] */ VARIANT Field,
            /* [optional][in] */ VARIANT Criteria1,
            /* [defaultvalue][optional][in] */ XlAutoFilterOperator Operator,
            /* [optional][in] */ VARIANT Criteria2,
            /* [optional][in] */ VARIANT VisibleDropDown,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AutoFit )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *AutoFormat )( 
            IRange * This,
            /* [defaultvalue][optional][in] */ XlRangeAutoFormat Format,
            /* [optional][in] */ VARIANT Number,
            /* [optional][in] */ VARIANT Font,
            /* [optional][in] */ VARIANT Alignment,
            /* [optional][in] */ VARIANT Border,
            /* [optional][in] */ VARIANT Pattern,
            /* [optional][in] */ VARIANT Width,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AutoOutline )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *BorderAround )( 
            IRange * This,
            /* [optional][in] */ VARIANT LineStyle,
            /* [defaultvalue][optional][in] */ XlBorderWeight Weight,
            /* [defaultvalue][optional][in] */ XlColorIndex ColorIndex,
            /* [optional][in] */ VARIANT Color,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Borders )( 
            IRange * This,
            /* [retval][out] */ Borders	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Calculate )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Cells )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Characters )( 
            IRange * This,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Length,
            /* [retval][out] */ Characters **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *CheckSpelling )( 
            IRange * This,
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [optional][in] */ VARIANT AlwaysSuggest,
            /* [optional][in] */ VARIANT SpellLang,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Clear )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ClearContents )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ClearFormats )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ClearNotes )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ClearOutline )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Column )( 
            IRange * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ColumnDifferences )( 
            IRange * This,
            /* [in] */ VARIANT Comparison,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Columns )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ColumnWidth )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ColumnWidth )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Consolidate )( 
            IRange * This,
            /* [optional][in] */ VARIANT Sources,
            /* [optional][in] */ VARIANT Function,
            /* [optional][in] */ VARIANT TopRow,
            /* [optional][in] */ VARIANT LeftColumn,
            /* [optional][in] */ VARIANT CreateLinks,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Copy )( 
            IRange * This,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *CopyFromRecordset )( 
            IRange * This,
            /* [in] */ IUnknown *Data,
            /* [optional][in] */ VARIANT MaxRows,
            /* [optional][in] */ VARIANT MaxColumns,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *CopyPicture )( 
            IRange * This,
            /* [defaultvalue][optional][in] */ XlPictureAppearance Appearance,
            /* [defaultvalue][optional][in] */ XlCopyPictureFormat Format,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Count )( 
            IRange * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *CreateNames )( 
            IRange * This,
            /* [optional][in] */ VARIANT Top,
            /* [optional][in] */ VARIANT Left,
            /* [optional][in] */ VARIANT Bottom,
            /* [optional][in] */ VARIANT Right,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *CreatePublisher )( 
            IRange * This,
            /* [optional][in] */ VARIANT Edition,
            /* [defaultvalue][optional][in] */ XlPictureAppearance Appearance,
            /* [optional][in] */ VARIANT ContainsPICT,
            /* [optional][in] */ VARIANT ContainsBIFF,
            /* [optional][in] */ VARIANT ContainsRTF,
            /* [optional][in] */ VARIANT ContainsVALU,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CurrentArray )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CurrentRegion )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Cut )( 
            IRange * This,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *DataSeries )( 
            IRange * This,
            /* [optional][in] */ VARIANT Rowcol,
            /* [defaultvalue][optional][in] */ XlDataSeriesType Type,
            /* [defaultvalue][optional][in] */ XlDataSeriesDate Date,
            /* [optional][in] */ VARIANT Step,
            /* [optional][in] */ VARIANT Stop,
            /* [optional][in] */ VARIANT Trend,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( __stdcall *get__Default )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( __stdcall *put__Default )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Delete )( 
            IRange * This,
            /* [optional][in] */ VARIANT Shift,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Dependents )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *DialogBox )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_DirectDependents )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_DirectPrecedents )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *EditionOptions )( 
            IRange * This,
            /* [in] */ XlEditionType Type,
            /* [in] */ XlEditionOptionsOption Option,
            /* [optional][in] */ VARIANT Name,
            /* [optional][in] */ VARIANT Reference,
            /* [defaultvalue][optional][in] */ XlPictureAppearance Appearance,
            /* [defaultvalue][optional][in] */ XlPictureAppearance ChartSize,
            /* [optional][in] */ VARIANT Format,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_End )( 
            IRange * This,
            /* [in] */ XlDirection Direction,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_EntireColumn )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_EntireRow )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FillDown )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FillLeft )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FillRight )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FillUp )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Find )( 
            IRange * This,
            /* [in] */ VARIANT What,
            /* [optional][in] */ VARIANT After,
            /* [optional][in] */ VARIANT LookIn,
            /* [optional][in] */ VARIANT LookAt,
            /* [optional][in] */ VARIANT SearchOrder,
            /* [defaultvalue][optional][in] */ XlSearchDirection SearchDirection,
            /* [optional][in] */ VARIANT MatchCase,
            /* [optional][in] */ VARIANT MatchByte,
            /* [optional][in] */ VARIANT SearchFormat,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FindNext )( 
            IRange * This,
            /* [optional][in] */ VARIANT After,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FindPrevious )( 
            IRange * This,
            /* [optional][in] */ VARIANT After,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Font )( 
            IRange * This,
            /* [retval][out] */ /* external definition not present */ Font **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Formula )( 
            IRange * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Formula )( 
            IRange * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FormulaArray )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FormulaArray )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][hidden][propget] */ HRESULT ( __stdcall *get_FormulaLabel )( 
            IRange * This,
            /* [retval][out] */ XlFormulaLabel *RHS);
        
        /* [helpcontext][hidden][propput] */ HRESULT ( __stdcall *put_FormulaLabel )( 
            IRange * This,
            /* [in] */ XlFormulaLabel RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FormulaHidden )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FormulaHidden )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FormulaLocal )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FormulaLocal )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FormulaR1C1 )( 
            IRange * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FormulaR1C1 )( 
            IRange * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FormulaR1C1Local )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_FormulaR1C1Local )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FunctionWizard )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *GoalSeek )( 
            IRange * This,
            /* [in] */ VARIANT Goal,
            /* [in] */ Range	*ChangingCell,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Group )( 
            IRange * This,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT End,
            /* [optional][in] */ VARIANT By,
            /* [optional][in] */ VARIANT Periods,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_HasArray )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_HasFormula )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Height )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Hidden )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Hidden )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_HorizontalAlignment )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_HorizontalAlignment )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_IndentLevel )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_IndentLevel )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *InsertIndent )( 
            IRange * This,
            /* [in] */ long InsertAmount);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Insert )( 
            IRange * This,
            /* [optional][in] */ VARIANT Shift,
            /* [optional][in] */ VARIANT CopyOrigin,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Interior )( 
            IRange * This,
            /* [retval][out] */ Interior	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Item )( 
            IRange * This,
            /* [in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Item )( 
            IRange * This,
            /* [in] */ VARIANT RowIndex,
            /* [optional][in] */ VARIANT ColumnIndex,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Justify )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Left )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ListHeaderRows )( 
            IRange * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ListNames )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_LocationInTable )( 
            IRange * This,
            /* [retval][out] */ XlLocationInTable *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Locked )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Locked )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Merge )( 
            IRange * This,
            /* [optional][in] */ VARIANT Across);
        
        /* [helpcontext] */ HRESULT ( __stdcall *UnMerge )( 
            IRange * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_MergeArea )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_MergeCells )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_MergeCells )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Name )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Name )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *NavigateArrow )( 
            IRange * This,
            /* [optional][in] */ VARIANT TowardPrecedent,
            /* [optional][in] */ VARIANT ArrowNumber,
            /* [optional][in] */ VARIANT LinkNumber,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__NewEnum )( 
            IRange * This,
            /* [retval][out] */ IUnknown **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Next )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *NoteText )( 
            IRange * This,
            /* [optional][in] */ VARIANT Text,
            /* [optional][in] */ VARIANT Start,
            /* [optional][in] */ VARIANT Length,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_NumberFormat )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_NumberFormat )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_NumberFormatLocal )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_NumberFormatLocal )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Offset )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowOffset,
            /* [optional][in] */ VARIANT ColumnOffset,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Orientation )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Orientation )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_OutlineLevel )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_OutlineLevel )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PageBreak )( 
            IRange * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_PageBreak )( 
            IRange * This,
            /* [in] */ long RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Parse )( 
            IRange * This,
            /* [optional][in] */ VARIANT ParseLine,
            /* [optional][in] */ VARIANT Destination,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *_PasteSpecial )( 
            IRange * This,
            /* [defaultvalue][optional][in] */ XlPasteType Paste,
            /* [defaultvalue][optional][in] */ XlPasteSpecialOperation Operation,
            /* [optional][in] */ VARIANT SkipBlanks,
            /* [optional][in] */ VARIANT Transpose,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PivotField )( 
            IRange * This,
            /* [retval][out] */ PivotField **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PivotItem )( 
            IRange * This,
            /* [retval][out] */ PivotItem **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PivotTable )( 
            IRange * This,
            /* [retval][out] */ PivotTable **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Precedents )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PrefixCharacter )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Previous )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *__PrintOut )( 
            IRange * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PrintPreview )( 
            IRange * This,
            /* [optional][in] */ VARIANT EnableChanges,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_QueryTable )( 
            IRange * This,
            /* [retval][out] */ QueryTable **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Range )( 
            IRange * This,
            /* [in] */ VARIANT Cell1,
            /* [optional][in] */ VARIANT Cell2,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *RemoveSubtotal )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Replace )( 
            IRange * This,
            /* [in] */ VARIANT What,
            /* [in] */ VARIANT Replacement,
            /* [optional][in] */ VARIANT LookAt,
            /* [optional][in] */ VARIANT SearchOrder,
            /* [optional][in] */ VARIANT MatchCase,
            /* [optional][in] */ VARIANT MatchByte,
            /* [optional][in] */ VARIANT SearchFormat,
            /* [optional][in] */ VARIANT ReplaceFormat,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Resize )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowSize,
            /* [optional][in] */ VARIANT ColumnSize,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Row )( 
            IRange * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *RowDifferences )( 
            IRange * This,
            /* [in] */ VARIANT Comparison,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_RowHeight )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_RowHeight )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Rows )( 
            IRange * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Run )( 
            IRange * This,
            /* [optional][in] */ VARIANT Arg1,
            /* [optional][in] */ VARIANT Arg2,
            /* [optional][in] */ VARIANT Arg3,
            /* [optional][in] */ VARIANT Arg4,
            /* [optional][in] */ VARIANT Arg5,
            /* [optional][in] */ VARIANT Arg6,
            /* [optional][in] */ VARIANT Arg7,
            /* [optional][in] */ VARIANT Arg8,
            /* [optional][in] */ VARIANT Arg9,
            /* [optional][in] */ VARIANT Arg10,
            /* [optional][in] */ VARIANT Arg11,
            /* [optional][in] */ VARIANT Arg12,
            /* [optional][in] */ VARIANT Arg13,
            /* [optional][in] */ VARIANT Arg14,
            /* [optional][in] */ VARIANT Arg15,
            /* [optional][in] */ VARIANT Arg16,
            /* [optional][in] */ VARIANT Arg17,
            /* [optional][in] */ VARIANT Arg18,
            /* [optional][in] */ VARIANT Arg19,
            /* [optional][in] */ VARIANT Arg20,
            /* [optional][in] */ VARIANT Arg21,
            /* [optional][in] */ VARIANT Arg22,
            /* [optional][in] */ VARIANT Arg23,
            /* [optional][in] */ VARIANT Arg24,
            /* [optional][in] */ VARIANT Arg25,
            /* [optional][in] */ VARIANT Arg26,
            /* [optional][in] */ VARIANT Arg27,
            /* [optional][in] */ VARIANT Arg28,
            /* [optional][in] */ VARIANT Arg29,
            /* [optional][in] */ VARIANT Arg30,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Select )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Show )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ShowDependents )( 
            IRange * This,
            /* [optional][in] */ VARIANT Remove,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ShowDetail )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ShowDetail )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ShowErrors )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ShowPrecedents )( 
            IRange * This,
            /* [optional][in] */ VARIANT Remove,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ShrinkToFit )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ShrinkToFit )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Sort )( 
            IRange * This,
            /* [optional][in] */ VARIANT Key1,
            /* [defaultvalue][optional][in] */ XlSortOrder Order1,
            /* [optional][in] */ VARIANT Key2,
            /* [optional][in] */ VARIANT Type,
            /* [defaultvalue][optional][in] */ XlSortOrder Order2,
            /* [optional][in] */ VARIANT Key3,
            /* [defaultvalue][optional][in] */ XlSortOrder Order3,
            /* [defaultvalue][optional][in] */ XlYesNoGuess Header,
            /* [optional][in] */ VARIANT OrderCustom,
            /* [optional][in] */ VARIANT MatchCase,
            /* [defaultvalue][optional][in] */ XlSortOrientation Orientation,
            /* [defaultvalue][optional][in] */ XlSortMethod SortMethod,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption1,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption2,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption3,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SortSpecial )( 
            IRange * This,
            /* [defaultvalue][optional][in] */ XlSortMethod SortMethod,
            /* [optional][in] */ VARIANT Key1,
            /* [defaultvalue][optional][in] */ XlSortOrder Order1,
            /* [optional][in] */ VARIANT Type,
            /* [optional][in] */ VARIANT Key2,
            /* [defaultvalue][optional][in] */ XlSortOrder Order2,
            /* [optional][in] */ VARIANT Key3,
            /* [defaultvalue][optional][in] */ XlSortOrder Order3,
            /* [defaultvalue][optional][in] */ XlYesNoGuess Header,
            /* [optional][in] */ VARIANT OrderCustom,
            /* [optional][in] */ VARIANT MatchCase,
            /* [defaultvalue][optional][in] */ XlSortOrientation Orientation,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption1,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption2,
            /* [defaultvalue][optional][in] */ XlSortDataOption DataOption3,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_SoundNote )( 
            IRange * This,
            /* [retval][out] */ SoundNote **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SpecialCells )( 
            IRange * This,
            /* [in] */ XlCellType Type,
            /* [optional][in] */ VARIANT Value,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Style )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Style )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SubscribeTo )( 
            IRange * This,
            /* [in] */ BSTR Edition,
            /* [defaultvalue][optional][in] */ XlSubscribeToFormat Format,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Subtotal )( 
            IRange * This,
            /* [in] */ long GroupBy,
            /* [in] */ XlConsolidationFunction Function,
            /* [in] */ VARIANT TotalList,
            /* [optional][in] */ VARIANT Replace,
            /* [optional][in] */ VARIANT PageBreaks,
            /* [defaultvalue][optional][in] */ XlSummaryRow SummaryBelowData,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Summary )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Table )( 
            IRange * This,
            /* [optional][in] */ VARIANT RowInput,
            /* [optional][in] */ VARIANT ColumnInput,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Text )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *TextToColumns )( 
            IRange * This,
            /* [optional][in] */ VARIANT Destination,
            /* [defaultvalue][optional][in] */ XlTextParsingType DataType,
            /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
            /* [optional][in] */ VARIANT ConsecutiveDelimiter,
            /* [optional][in] */ VARIANT Tab,
            /* [optional][in] */ VARIANT Semicolon,
            /* [optional][in] */ VARIANT Comma,
            /* [optional][in] */ VARIANT Space,
            /* [optional][in] */ VARIANT Other,
            /* [optional][in] */ VARIANT OtherChar,
            /* [optional][in] */ VARIANT FieldInfo,
            /* [optional][in] */ VARIANT DecimalSeparator,
            /* [optional][in] */ VARIANT ThousandsSeparator,
            /* [optional][in] */ VARIANT TrailingMinusNumbers,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Top )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Ungroup )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_UseStandardHeight )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_UseStandardHeight )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_UseStandardWidth )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_UseStandardWidth )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Validation )( 
            IRange * This,
            /* [retval][out] */ Validation **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Value )( 
            IRange * This,
            /* [optional][in] */ VARIANT RangeValueDataType,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Value )( 
            IRange * This,
            /* [optional][in] */ VARIANT RangeValueDataType,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Value2 )( 
            IRange * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Value2 )( 
            IRange * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_VerticalAlignment )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_VerticalAlignment )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Width )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Worksheet )( 
            IRange * This,
            /* [retval][out] */ Worksheet	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_WrapText )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_WrapText )( 
            IRange * This,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *AddComment )( 
            IRange * This,
            /* [optional][in] */ VARIANT Text,
            /* [retval][out] */ Comment **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Comment )( 
            IRange * This,
            /* [retval][out] */ Comment **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ClearComments )( 
            IRange * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Phonetic )( 
            IRange * This,
            /* [retval][out] */ Phonetic **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_FormatConditions )( 
            IRange * This,
            /* [retval][out] */ FormatConditions **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ReadingOrder )( 
            IRange * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ReadingOrder )( 
            IRange * This,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Hyperlinks )( 
            IRange * This,
            /* [retval][out] */ HyperLinks **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Phonetics )( 
            IRange * This,
            /* [retval][out] */ Phonetics **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *SetPhonetic )( 
            IRange * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ID )( 
            IRange * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_ID )( 
            IRange * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *_PrintOut )( 
            IRange * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_PivotCell )( 
            IRange * This,
            /* [retval][out] */ PivotCell **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Dirty )( 
            IRange * This);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Errors )( 
            IRange * This,
            /* [retval][out] */ Errors **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_SmartTags )( 
            IRange * This,
            /* [retval][out] */ SmartTags **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Speak )( 
            IRange * This,
            /* [optional][in] */ VARIANT SpeakDirection,
            /* [optional][in] */ VARIANT SpeakFormulas);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PasteSpecial )( 
            IRange * This,
            /* [defaultvalue][optional][in] */ XlPasteType Paste,
            /* [defaultvalue][optional][in] */ XlPasteSpecialOperation Operation,
            /* [optional][in] */ VARIANT SkipBlanks,
            /* [optional][in] */ VARIANT Transpose,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_AllowEdit )( 
            IRange * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ListObject )( 
            IRange * This,
            /* [retval][out] */ ListObject **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_XPath )( 
            IRange * This,
            /* [retval][out] */ XPath **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_ServerActions )( 
            IRange * This,
            /* [retval][out] */ Actions **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *RemoveDuplicates )( 
            IRange * This,
            /* [optional][in] */ VARIANT Columns,
            /* [defaultvalue][optional][in] */ XlYesNoGuess Header);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PrintOut )( 
            IRange * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_MDX )( 
            IRange * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *ExportAsFixedFormat )( 
            IRange * This,
            /* [in] */ XlFixedFormatType Type,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Quality,
            /* [optional][in] */ VARIANT IncludeDocProperties,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT OpenAfterPublish,
            /* [optional][in] */ VARIANT FixedFormatExtClassPtr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_CountLarge )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *CalculateRowMajorOrder )( 
            IRange * This,
            /* [retval][out] */ VARIANT *RHS);
        
        END_INTERFACE
    } IRangeVtbl;

    interface IRange
    {
        CONST_VTBL struct IRangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRange_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRange_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRange_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRange_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRange_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRange_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRange_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRange_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IRange_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IRange_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IRange_Activate(This,RHS)	\
    ( (This)->lpVtbl -> Activate(This,RHS) ) 

#define IRange_get_AddIndent(This,RHS)	\
    ( (This)->lpVtbl -> get_AddIndent(This,RHS) ) 

#define IRange_put_AddIndent(This,RHS)	\
    ( (This)->lpVtbl -> put_AddIndent(This,RHS) ) 

#define IRange_get_Address(This,RowAbsolute,ColumnAbsolute,ReferenceStyle,External,RelativeTo,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Address(This,RowAbsolute,ColumnAbsolute,ReferenceStyle,External,RelativeTo,lcid,RHS) ) 

#define IRange_get_AddressLocal(This,RowAbsolute,ColumnAbsolute,ReferenceStyle,External,RelativeTo,RHS)	\
    ( (This)->lpVtbl -> get_AddressLocal(This,RowAbsolute,ColumnAbsolute,ReferenceStyle,External,RelativeTo,RHS) ) 

#define IRange_AdvancedFilter(This,Action,CriteriaRange,CopyToRange,Unique,RHS)	\
    ( (This)->lpVtbl -> AdvancedFilter(This,Action,CriteriaRange,CopyToRange,Unique,RHS) ) 

#define IRange_ApplyNames(This,Names,IgnoreRelativeAbsolute,UseRowColumnNames,OmitColumn,OmitRow,Order,AppendLast,RHS)	\
    ( (This)->lpVtbl -> ApplyNames(This,Names,IgnoreRelativeAbsolute,UseRowColumnNames,OmitColumn,OmitRow,Order,AppendLast,RHS) ) 

#define IRange_ApplyOutlineStyles(This,RHS)	\
    ( (This)->lpVtbl -> ApplyOutlineStyles(This,RHS) ) 

#define IRange_get_Areas(This,RHS)	\
    ( (This)->lpVtbl -> get_Areas(This,RHS) ) 

#define IRange_AutoComplete(This,String,RHS)	\
    ( (This)->lpVtbl -> AutoComplete(This,String,RHS) ) 

#define IRange_AutoFill(This,Destination,Type,RHS)	\
    ( (This)->lpVtbl -> AutoFill(This,Destination,Type,RHS) ) 

#define IRange_AutoFilter(This,Field,Criteria1,Operator,Criteria2,VisibleDropDown,RHS)	\
    ( (This)->lpVtbl -> AutoFilter(This,Field,Criteria1,Operator,Criteria2,VisibleDropDown,RHS) ) 

#define IRange_AutoFit(This,RHS)	\
    ( (This)->lpVtbl -> AutoFit(This,RHS) ) 

#define IRange_AutoFormat(This,Format,Number,Font,Alignment,Border,Pattern,Width,RHS)	\
    ( (This)->lpVtbl -> AutoFormat(This,Format,Number,Font,Alignment,Border,Pattern,Width,RHS) ) 

#define IRange_AutoOutline(This,RHS)	\
    ( (This)->lpVtbl -> AutoOutline(This,RHS) ) 

#define IRange_BorderAround(This,LineStyle,Weight,ColorIndex,Color,RHS)	\
    ( (This)->lpVtbl -> BorderAround(This,LineStyle,Weight,ColorIndex,Color,RHS) ) 

#define IRange_get_Borders(This,RHS)	\
    ( (This)->lpVtbl -> get_Borders(This,RHS) ) 

#define IRange_Calculate(This,RHS)	\
    ( (This)->lpVtbl -> Calculate(This,RHS) ) 

#define IRange_get_Cells(This,RHS)	\
    ( (This)->lpVtbl -> get_Cells(This,RHS) ) 

#define IRange_get_Characters(This,Start,Length,RHS)	\
    ( (This)->lpVtbl -> get_Characters(This,Start,Length,RHS) ) 

#define IRange_CheckSpelling(This,CustomDictionary,IgnoreUppercase,AlwaysSuggest,SpellLang,RHS)	\
    ( (This)->lpVtbl -> CheckSpelling(This,CustomDictionary,IgnoreUppercase,AlwaysSuggest,SpellLang,RHS) ) 

#define IRange_Clear(This,RHS)	\
    ( (This)->lpVtbl -> Clear(This,RHS) ) 

#define IRange_ClearContents(This,RHS)	\
    ( (This)->lpVtbl -> ClearContents(This,RHS) ) 

#define IRange_ClearFormats(This,RHS)	\
    ( (This)->lpVtbl -> ClearFormats(This,RHS) ) 

#define IRange_ClearNotes(This,RHS)	\
    ( (This)->lpVtbl -> ClearNotes(This,RHS) ) 

#define IRange_ClearOutline(This,RHS)	\
    ( (This)->lpVtbl -> ClearOutline(This,RHS) ) 

#define IRange_get_Column(This,RHS)	\
    ( (This)->lpVtbl -> get_Column(This,RHS) ) 

#define IRange_ColumnDifferences(This,Comparison,RHS)	\
    ( (This)->lpVtbl -> ColumnDifferences(This,Comparison,RHS) ) 

#define IRange_get_Columns(This,RHS)	\
    ( (This)->lpVtbl -> get_Columns(This,RHS) ) 

#define IRange_get_ColumnWidth(This,RHS)	\
    ( (This)->lpVtbl -> get_ColumnWidth(This,RHS) ) 

#define IRange_put_ColumnWidth(This,RHS)	\
    ( (This)->lpVtbl -> put_ColumnWidth(This,RHS) ) 

#define IRange_Consolidate(This,Sources,Function,TopRow,LeftColumn,CreateLinks,RHS)	\
    ( (This)->lpVtbl -> Consolidate(This,Sources,Function,TopRow,LeftColumn,CreateLinks,RHS) ) 

#define IRange_Copy(This,Destination,RHS)	\
    ( (This)->lpVtbl -> Copy(This,Destination,RHS) ) 

#define IRange_CopyFromRecordset(This,Data,MaxRows,MaxColumns,RHS)	\
    ( (This)->lpVtbl -> CopyFromRecordset(This,Data,MaxRows,MaxColumns,RHS) ) 

#define IRange_CopyPicture(This,Appearance,Format,RHS)	\
    ( (This)->lpVtbl -> CopyPicture(This,Appearance,Format,RHS) ) 

#define IRange_get_Count(This,RHS)	\
    ( (This)->lpVtbl -> get_Count(This,RHS) ) 

#define IRange_CreateNames(This,Top,Left,Bottom,Right,RHS)	\
    ( (This)->lpVtbl -> CreateNames(This,Top,Left,Bottom,Right,RHS) ) 

#define IRange_CreatePublisher(This,Edition,Appearance,ContainsPICT,ContainsBIFF,ContainsRTF,ContainsVALU,RHS)	\
    ( (This)->lpVtbl -> CreatePublisher(This,Edition,Appearance,ContainsPICT,ContainsBIFF,ContainsRTF,ContainsVALU,RHS) ) 

#define IRange_get_CurrentArray(This,RHS)	\
    ( (This)->lpVtbl -> get_CurrentArray(This,RHS) ) 

#define IRange_get_CurrentRegion(This,RHS)	\
    ( (This)->lpVtbl -> get_CurrentRegion(This,RHS) ) 

#define IRange_Cut(This,Destination,RHS)	\
    ( (This)->lpVtbl -> Cut(This,Destination,RHS) ) 

#define IRange_DataSeries(This,Rowcol,Type,Date,Step,Stop,Trend,RHS)	\
    ( (This)->lpVtbl -> DataSeries(This,Rowcol,Type,Date,Step,Stop,Trend,RHS) ) 

#define IRange_get__Default(This,RowIndex,ColumnIndex,lcid,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,RowIndex,ColumnIndex,lcid,RHS) ) 

#define IRange_put__Default(This,RowIndex,ColumnIndex,lcid,RHS)	\
    ( (This)->lpVtbl -> put__Default(This,RowIndex,ColumnIndex,lcid,RHS) ) 

#define IRange_Delete(This,Shift,RHS)	\
    ( (This)->lpVtbl -> Delete(This,Shift,RHS) ) 

#define IRange_get_Dependents(This,RHS)	\
    ( (This)->lpVtbl -> get_Dependents(This,RHS) ) 

#define IRange_DialogBox(This,RHS)	\
    ( (This)->lpVtbl -> DialogBox(This,RHS) ) 

#define IRange_get_DirectDependents(This,RHS)	\
    ( (This)->lpVtbl -> get_DirectDependents(This,RHS) ) 

#define IRange_get_DirectPrecedents(This,RHS)	\
    ( (This)->lpVtbl -> get_DirectPrecedents(This,RHS) ) 

#define IRange_EditionOptions(This,Type,Option,Name,Reference,Appearance,ChartSize,Format,RHS)	\
    ( (This)->lpVtbl -> EditionOptions(This,Type,Option,Name,Reference,Appearance,ChartSize,Format,RHS) ) 

#define IRange_get_End(This,Direction,RHS)	\
    ( (This)->lpVtbl -> get_End(This,Direction,RHS) ) 

#define IRange_get_EntireColumn(This,RHS)	\
    ( (This)->lpVtbl -> get_EntireColumn(This,RHS) ) 

#define IRange_get_EntireRow(This,RHS)	\
    ( (This)->lpVtbl -> get_EntireRow(This,RHS) ) 

#define IRange_FillDown(This,RHS)	\
    ( (This)->lpVtbl -> FillDown(This,RHS) ) 

#define IRange_FillLeft(This,RHS)	\
    ( (This)->lpVtbl -> FillLeft(This,RHS) ) 

#define IRange_FillRight(This,RHS)	\
    ( (This)->lpVtbl -> FillRight(This,RHS) ) 

#define IRange_FillUp(This,RHS)	\
    ( (This)->lpVtbl -> FillUp(This,RHS) ) 

#define IRange_Find(This,What,After,LookIn,LookAt,SearchOrder,SearchDirection,MatchCase,MatchByte,SearchFormat,RHS)	\
    ( (This)->lpVtbl -> Find(This,What,After,LookIn,LookAt,SearchOrder,SearchDirection,MatchCase,MatchByte,SearchFormat,RHS) ) 

#define IRange_FindNext(This,After,RHS)	\
    ( (This)->lpVtbl -> FindNext(This,After,RHS) ) 

#define IRange_FindPrevious(This,After,RHS)	\
    ( (This)->lpVtbl -> FindPrevious(This,After,RHS) ) 

#define IRange_get_Font(This,RHS)	\
    ( (This)->lpVtbl -> get_Font(This,RHS) ) 

#define IRange_get_Formula(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Formula(This,lcid,RHS) ) 

#define IRange_put_Formula(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Formula(This,lcid,RHS) ) 

#define IRange_get_FormulaArray(This,RHS)	\
    ( (This)->lpVtbl -> get_FormulaArray(This,RHS) ) 

#define IRange_put_FormulaArray(This,RHS)	\
    ( (This)->lpVtbl -> put_FormulaArray(This,RHS) ) 

#define IRange_get_FormulaLabel(This,RHS)	\
    ( (This)->lpVtbl -> get_FormulaLabel(This,RHS) ) 

#define IRange_put_FormulaLabel(This,RHS)	\
    ( (This)->lpVtbl -> put_FormulaLabel(This,RHS) ) 

#define IRange_get_FormulaHidden(This,RHS)	\
    ( (This)->lpVtbl -> get_FormulaHidden(This,RHS) ) 

#define IRange_put_FormulaHidden(This,RHS)	\
    ( (This)->lpVtbl -> put_FormulaHidden(This,RHS) ) 

#define IRange_get_FormulaLocal(This,RHS)	\
    ( (This)->lpVtbl -> get_FormulaLocal(This,RHS) ) 

#define IRange_put_FormulaLocal(This,RHS)	\
    ( (This)->lpVtbl -> put_FormulaLocal(This,RHS) ) 

#define IRange_get_FormulaR1C1(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FormulaR1C1(This,lcid,RHS) ) 

#define IRange_put_FormulaR1C1(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_FormulaR1C1(This,lcid,RHS) ) 

#define IRange_get_FormulaR1C1Local(This,RHS)	\
    ( (This)->lpVtbl -> get_FormulaR1C1Local(This,RHS) ) 

#define IRange_put_FormulaR1C1Local(This,RHS)	\
    ( (This)->lpVtbl -> put_FormulaR1C1Local(This,RHS) ) 

#define IRange_FunctionWizard(This,RHS)	\
    ( (This)->lpVtbl -> FunctionWizard(This,RHS) ) 

#define IRange_GoalSeek(This,Goal,ChangingCell,RHS)	\
    ( (This)->lpVtbl -> GoalSeek(This,Goal,ChangingCell,RHS) ) 

#define IRange_Group(This,Start,End,By,Periods,RHS)	\
    ( (This)->lpVtbl -> Group(This,Start,End,By,Periods,RHS) ) 

#define IRange_get_HasArray(This,RHS)	\
    ( (This)->lpVtbl -> get_HasArray(This,RHS) ) 

#define IRange_get_HasFormula(This,RHS)	\
    ( (This)->lpVtbl -> get_HasFormula(This,RHS) ) 

#define IRange_get_Height(This,RHS)	\
    ( (This)->lpVtbl -> get_Height(This,RHS) ) 

#define IRange_get_Hidden(This,RHS)	\
    ( (This)->lpVtbl -> get_Hidden(This,RHS) ) 

#define IRange_put_Hidden(This,RHS)	\
    ( (This)->lpVtbl -> put_Hidden(This,RHS) ) 

#define IRange_get_HorizontalAlignment(This,RHS)	\
    ( (This)->lpVtbl -> get_HorizontalAlignment(This,RHS) ) 

#define IRange_put_HorizontalAlignment(This,RHS)	\
    ( (This)->lpVtbl -> put_HorizontalAlignment(This,RHS) ) 

#define IRange_get_IndentLevel(This,RHS)	\
    ( (This)->lpVtbl -> get_IndentLevel(This,RHS) ) 

#define IRange_put_IndentLevel(This,RHS)	\
    ( (This)->lpVtbl -> put_IndentLevel(This,RHS) ) 

#define IRange_InsertIndent(This,InsertAmount)	\
    ( (This)->lpVtbl -> InsertIndent(This,InsertAmount) ) 

#define IRange_Insert(This,Shift,CopyOrigin,RHS)	\
    ( (This)->lpVtbl -> Insert(This,Shift,CopyOrigin,RHS) ) 

#define IRange_get_Interior(This,RHS)	\
    ( (This)->lpVtbl -> get_Interior(This,RHS) ) 

#define IRange_get_Item(This,RowIndex,ColumnIndex,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Item(This,RowIndex,ColumnIndex,lcid,RHS) ) 

#define IRange_put_Item(This,RowIndex,ColumnIndex,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Item(This,RowIndex,ColumnIndex,lcid,RHS) ) 

#define IRange_Justify(This,RHS)	\
    ( (This)->lpVtbl -> Justify(This,RHS) ) 

#define IRange_get_Left(This,RHS)	\
    ( (This)->lpVtbl -> get_Left(This,RHS) ) 

#define IRange_get_ListHeaderRows(This,RHS)	\
    ( (This)->lpVtbl -> get_ListHeaderRows(This,RHS) ) 

#define IRange_ListNames(This,RHS)	\
    ( (This)->lpVtbl -> ListNames(This,RHS) ) 

#define IRange_get_LocationInTable(This,RHS)	\
    ( (This)->lpVtbl -> get_LocationInTable(This,RHS) ) 

#define IRange_get_Locked(This,RHS)	\
    ( (This)->lpVtbl -> get_Locked(This,RHS) ) 

#define IRange_put_Locked(This,RHS)	\
    ( (This)->lpVtbl -> put_Locked(This,RHS) ) 

#define IRange_Merge(This,Across)	\
    ( (This)->lpVtbl -> Merge(This,Across) ) 

#define IRange_UnMerge(This)	\
    ( (This)->lpVtbl -> UnMerge(This) ) 

#define IRange_get_MergeArea(This,RHS)	\
    ( (This)->lpVtbl -> get_MergeArea(This,RHS) ) 

#define IRange_get_MergeCells(This,RHS)	\
    ( (This)->lpVtbl -> get_MergeCells(This,RHS) ) 

#define IRange_put_MergeCells(This,RHS)	\
    ( (This)->lpVtbl -> put_MergeCells(This,RHS) ) 

#define IRange_get_Name(This,RHS)	\
    ( (This)->lpVtbl -> get_Name(This,RHS) ) 

#define IRange_put_Name(This,RHS)	\
    ( (This)->lpVtbl -> put_Name(This,RHS) ) 

#define IRange_NavigateArrow(This,TowardPrecedent,ArrowNumber,LinkNumber,RHS)	\
    ( (This)->lpVtbl -> NavigateArrow(This,TowardPrecedent,ArrowNumber,LinkNumber,RHS) ) 

#define IRange_get__NewEnum(This,RHS)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RHS) ) 

#define IRange_get_Next(This,RHS)	\
    ( (This)->lpVtbl -> get_Next(This,RHS) ) 

#define IRange_NoteText(This,Text,Start,Length,RHS)	\
    ( (This)->lpVtbl -> NoteText(This,Text,Start,Length,RHS) ) 

#define IRange_get_NumberFormat(This,RHS)	\
    ( (This)->lpVtbl -> get_NumberFormat(This,RHS) ) 

#define IRange_put_NumberFormat(This,RHS)	\
    ( (This)->lpVtbl -> put_NumberFormat(This,RHS) ) 

#define IRange_get_NumberFormatLocal(This,RHS)	\
    ( (This)->lpVtbl -> get_NumberFormatLocal(This,RHS) ) 

#define IRange_put_NumberFormatLocal(This,RHS)	\
    ( (This)->lpVtbl -> put_NumberFormatLocal(This,RHS) ) 

#define IRange_get_Offset(This,RowOffset,ColumnOffset,RHS)	\
    ( (This)->lpVtbl -> get_Offset(This,RowOffset,ColumnOffset,RHS) ) 

#define IRange_get_Orientation(This,RHS)	\
    ( (This)->lpVtbl -> get_Orientation(This,RHS) ) 

#define IRange_put_Orientation(This,RHS)	\
    ( (This)->lpVtbl -> put_Orientation(This,RHS) ) 

#define IRange_get_OutlineLevel(This,RHS)	\
    ( (This)->lpVtbl -> get_OutlineLevel(This,RHS) ) 

#define IRange_put_OutlineLevel(This,RHS)	\
    ( (This)->lpVtbl -> put_OutlineLevel(This,RHS) ) 

#define IRange_get_PageBreak(This,RHS)	\
    ( (This)->lpVtbl -> get_PageBreak(This,RHS) ) 

#define IRange_put_PageBreak(This,RHS)	\
    ( (This)->lpVtbl -> put_PageBreak(This,RHS) ) 

#define IRange_Parse(This,ParseLine,Destination,RHS)	\
    ( (This)->lpVtbl -> Parse(This,ParseLine,Destination,RHS) ) 

#define IRange__PasteSpecial(This,Paste,Operation,SkipBlanks,Transpose,RHS)	\
    ( (This)->lpVtbl -> _PasteSpecial(This,Paste,Operation,SkipBlanks,Transpose,RHS) ) 

#define IRange_get_PivotField(This,RHS)	\
    ( (This)->lpVtbl -> get_PivotField(This,RHS) ) 

#define IRange_get_PivotItem(This,RHS)	\
    ( (This)->lpVtbl -> get_PivotItem(This,RHS) ) 

#define IRange_get_PivotTable(This,RHS)	\
    ( (This)->lpVtbl -> get_PivotTable(This,RHS) ) 

#define IRange_get_Precedents(This,RHS)	\
    ( (This)->lpVtbl -> get_Precedents(This,RHS) ) 

#define IRange_get_PrefixCharacter(This,RHS)	\
    ( (This)->lpVtbl -> get_PrefixCharacter(This,RHS) ) 

#define IRange_get_Previous(This,RHS)	\
    ( (This)->lpVtbl -> get_Previous(This,RHS) ) 

#define IRange___PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,RHS)	\
    ( (This)->lpVtbl -> __PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,RHS) ) 

#define IRange_PrintPreview(This,EnableChanges,RHS)	\
    ( (This)->lpVtbl -> PrintPreview(This,EnableChanges,RHS) ) 

#define IRange_get_QueryTable(This,RHS)	\
    ( (This)->lpVtbl -> get_QueryTable(This,RHS) ) 

#define IRange_get_Range(This,Cell1,Cell2,RHS)	\
    ( (This)->lpVtbl -> get_Range(This,Cell1,Cell2,RHS) ) 

#define IRange_RemoveSubtotal(This,RHS)	\
    ( (This)->lpVtbl -> RemoveSubtotal(This,RHS) ) 

#define IRange_Replace(This,What,Replacement,LookAt,SearchOrder,MatchCase,MatchByte,SearchFormat,ReplaceFormat,RHS)	\
    ( (This)->lpVtbl -> Replace(This,What,Replacement,LookAt,SearchOrder,MatchCase,MatchByte,SearchFormat,ReplaceFormat,RHS) ) 

#define IRange_get_Resize(This,RowSize,ColumnSize,RHS)	\
    ( (This)->lpVtbl -> get_Resize(This,RowSize,ColumnSize,RHS) ) 

#define IRange_get_Row(This,RHS)	\
    ( (This)->lpVtbl -> get_Row(This,RHS) ) 

#define IRange_RowDifferences(This,Comparison,RHS)	\
    ( (This)->lpVtbl -> RowDifferences(This,Comparison,RHS) ) 

#define IRange_get_RowHeight(This,RHS)	\
    ( (This)->lpVtbl -> get_RowHeight(This,RHS) ) 

#define IRange_put_RowHeight(This,RHS)	\
    ( (This)->lpVtbl -> put_RowHeight(This,RHS) ) 

#define IRange_get_Rows(This,RHS)	\
    ( (This)->lpVtbl -> get_Rows(This,RHS) ) 

#define IRange_Run(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,RHS)	\
    ( (This)->lpVtbl -> Run(This,Arg1,Arg2,Arg3,Arg4,Arg5,Arg6,Arg7,Arg8,Arg9,Arg10,Arg11,Arg12,Arg13,Arg14,Arg15,Arg16,Arg17,Arg18,Arg19,Arg20,Arg21,Arg22,Arg23,Arg24,Arg25,Arg26,Arg27,Arg28,Arg29,Arg30,RHS) ) 

#define IRange_Select(This,RHS)	\
    ( (This)->lpVtbl -> Select(This,RHS) ) 

#define IRange_Show(This,RHS)	\
    ( (This)->lpVtbl -> Show(This,RHS) ) 

#define IRange_ShowDependents(This,Remove,RHS)	\
    ( (This)->lpVtbl -> ShowDependents(This,Remove,RHS) ) 

#define IRange_get_ShowDetail(This,RHS)	\
    ( (This)->lpVtbl -> get_ShowDetail(This,RHS) ) 

#define IRange_put_ShowDetail(This,RHS)	\
    ( (This)->lpVtbl -> put_ShowDetail(This,RHS) ) 

#define IRange_ShowErrors(This,RHS)	\
    ( (This)->lpVtbl -> ShowErrors(This,RHS) ) 

#define IRange_ShowPrecedents(This,Remove,RHS)	\
    ( (This)->lpVtbl -> ShowPrecedents(This,Remove,RHS) ) 

#define IRange_get_ShrinkToFit(This,RHS)	\
    ( (This)->lpVtbl -> get_ShrinkToFit(This,RHS) ) 

#define IRange_put_ShrinkToFit(This,RHS)	\
    ( (This)->lpVtbl -> put_ShrinkToFit(This,RHS) ) 

#define IRange_Sort(This,Key1,Order1,Key2,Type,Order2,Key3,Order3,Header,OrderCustom,MatchCase,Orientation,SortMethod,DataOption1,DataOption2,DataOption3,RHS)	\
    ( (This)->lpVtbl -> Sort(This,Key1,Order1,Key2,Type,Order2,Key3,Order3,Header,OrderCustom,MatchCase,Orientation,SortMethod,DataOption1,DataOption2,DataOption3,RHS) ) 

#define IRange_SortSpecial(This,SortMethod,Key1,Order1,Type,Key2,Order2,Key3,Order3,Header,OrderCustom,MatchCase,Orientation,DataOption1,DataOption2,DataOption3,RHS)	\
    ( (This)->lpVtbl -> SortSpecial(This,SortMethod,Key1,Order1,Type,Key2,Order2,Key3,Order3,Header,OrderCustom,MatchCase,Orientation,DataOption1,DataOption2,DataOption3,RHS) ) 

#define IRange_get_SoundNote(This,RHS)	\
    ( (This)->lpVtbl -> get_SoundNote(This,RHS) ) 

#define IRange_SpecialCells(This,Type,Value,RHS)	\
    ( (This)->lpVtbl -> SpecialCells(This,Type,Value,RHS) ) 

#define IRange_get_Style(This,RHS)	\
    ( (This)->lpVtbl -> get_Style(This,RHS) ) 

#define IRange_put_Style(This,RHS)	\
    ( (This)->lpVtbl -> put_Style(This,RHS) ) 

#define IRange_SubscribeTo(This,Edition,Format,RHS)	\
    ( (This)->lpVtbl -> SubscribeTo(This,Edition,Format,RHS) ) 

#define IRange_Subtotal(This,GroupBy,Function,TotalList,Replace,PageBreaks,SummaryBelowData,RHS)	\
    ( (This)->lpVtbl -> Subtotal(This,GroupBy,Function,TotalList,Replace,PageBreaks,SummaryBelowData,RHS) ) 

#define IRange_get_Summary(This,RHS)	\
    ( (This)->lpVtbl -> get_Summary(This,RHS) ) 

#define IRange_Table(This,RowInput,ColumnInput,RHS)	\
    ( (This)->lpVtbl -> Table(This,RowInput,ColumnInput,RHS) ) 

#define IRange_get_Text(This,RHS)	\
    ( (This)->lpVtbl -> get_Text(This,RHS) ) 

#define IRange_TextToColumns(This,Destination,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,DecimalSeparator,ThousandsSeparator,TrailingMinusNumbers,RHS)	\
    ( (This)->lpVtbl -> TextToColumns(This,Destination,DataType,TextQualifier,ConsecutiveDelimiter,Tab,Semicolon,Comma,Space,Other,OtherChar,FieldInfo,DecimalSeparator,ThousandsSeparator,TrailingMinusNumbers,RHS) ) 

#define IRange_get_Top(This,RHS)	\
    ( (This)->lpVtbl -> get_Top(This,RHS) ) 

#define IRange_Ungroup(This,RHS)	\
    ( (This)->lpVtbl -> Ungroup(This,RHS) ) 

#define IRange_get_UseStandardHeight(This,RHS)	\
    ( (This)->lpVtbl -> get_UseStandardHeight(This,RHS) ) 

#define IRange_put_UseStandardHeight(This,RHS)	\
    ( (This)->lpVtbl -> put_UseStandardHeight(This,RHS) ) 

#define IRange_get_UseStandardWidth(This,RHS)	\
    ( (This)->lpVtbl -> get_UseStandardWidth(This,RHS) ) 

#define IRange_put_UseStandardWidth(This,RHS)	\
    ( (This)->lpVtbl -> put_UseStandardWidth(This,RHS) ) 

#define IRange_get_Validation(This,RHS)	\
    ( (This)->lpVtbl -> get_Validation(This,RHS) ) 

#define IRange_get_Value(This,RangeValueDataType,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Value(This,RangeValueDataType,lcid,RHS) ) 

#define IRange_put_Value(This,RangeValueDataType,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Value(This,RangeValueDataType,lcid,RHS) ) 

#define IRange_get_Value2(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Value2(This,lcid,RHS) ) 

#define IRange_put_Value2(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Value2(This,lcid,RHS) ) 

#define IRange_get_VerticalAlignment(This,RHS)	\
    ( (This)->lpVtbl -> get_VerticalAlignment(This,RHS) ) 

#define IRange_put_VerticalAlignment(This,RHS)	\
    ( (This)->lpVtbl -> put_VerticalAlignment(This,RHS) ) 

#define IRange_get_Width(This,RHS)	\
    ( (This)->lpVtbl -> get_Width(This,RHS) ) 

#define IRange_get_Worksheet(This,RHS)	\
    ( (This)->lpVtbl -> get_Worksheet(This,RHS) ) 

#define IRange_get_WrapText(This,RHS)	\
    ( (This)->lpVtbl -> get_WrapText(This,RHS) ) 

#define IRange_put_WrapText(This,RHS)	\
    ( (This)->lpVtbl -> put_WrapText(This,RHS) ) 

#define IRange_AddComment(This,Text,RHS)	\
    ( (This)->lpVtbl -> AddComment(This,Text,RHS) ) 

#define IRange_get_Comment(This,RHS)	\
    ( (This)->lpVtbl -> get_Comment(This,RHS) ) 

#define IRange_ClearComments(This)	\
    ( (This)->lpVtbl -> ClearComments(This) ) 

#define IRange_get_Phonetic(This,RHS)	\
    ( (This)->lpVtbl -> get_Phonetic(This,RHS) ) 

#define IRange_get_FormatConditions(This,RHS)	\
    ( (This)->lpVtbl -> get_FormatConditions(This,RHS) ) 

#define IRange_get_ReadingOrder(This,RHS)	\
    ( (This)->lpVtbl -> get_ReadingOrder(This,RHS) ) 

#define IRange_put_ReadingOrder(This,RHS)	\
    ( (This)->lpVtbl -> put_ReadingOrder(This,RHS) ) 

#define IRange_get_Hyperlinks(This,RHS)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,RHS) ) 

#define IRange_get_Phonetics(This,RHS)	\
    ( (This)->lpVtbl -> get_Phonetics(This,RHS) ) 

#define IRange_SetPhonetic(This)	\
    ( (This)->lpVtbl -> SetPhonetic(This) ) 

#define IRange_get_ID(This,RHS)	\
    ( (This)->lpVtbl -> get_ID(This,RHS) ) 

#define IRange_put_ID(This,RHS)	\
    ( (This)->lpVtbl -> put_ID(This,RHS) ) 

#define IRange__PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,RHS)	\
    ( (This)->lpVtbl -> _PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,RHS) ) 

#define IRange_get_PivotCell(This,RHS)	\
    ( (This)->lpVtbl -> get_PivotCell(This,RHS) ) 

#define IRange_Dirty(This)	\
    ( (This)->lpVtbl -> Dirty(This) ) 

#define IRange_get_Errors(This,RHS)	\
    ( (This)->lpVtbl -> get_Errors(This,RHS) ) 

#define IRange_get_SmartTags(This,RHS)	\
    ( (This)->lpVtbl -> get_SmartTags(This,RHS) ) 

#define IRange_Speak(This,SpeakDirection,SpeakFormulas)	\
    ( (This)->lpVtbl -> Speak(This,SpeakDirection,SpeakFormulas) ) 

#define IRange_PasteSpecial(This,Paste,Operation,SkipBlanks,Transpose,RHS)	\
    ( (This)->lpVtbl -> PasteSpecial(This,Paste,Operation,SkipBlanks,Transpose,RHS) ) 

#define IRange_get_AllowEdit(This,RHS)	\
    ( (This)->lpVtbl -> get_AllowEdit(This,RHS) ) 

#define IRange_get_ListObject(This,RHS)	\
    ( (This)->lpVtbl -> get_ListObject(This,RHS) ) 

#define IRange_get_XPath(This,RHS)	\
    ( (This)->lpVtbl -> get_XPath(This,RHS) ) 

#define IRange_get_ServerActions(This,RHS)	\
    ( (This)->lpVtbl -> get_ServerActions(This,RHS) ) 

#define IRange_RemoveDuplicates(This,Columns,Header)	\
    ( (This)->lpVtbl -> RemoveDuplicates(This,Columns,Header) ) 

#define IRange_PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,RHS)	\
    ( (This)->lpVtbl -> PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,RHS) ) 

#define IRange_get_MDX(This,RHS)	\
    ( (This)->lpVtbl -> get_MDX(This,RHS) ) 

#define IRange_ExportAsFixedFormat(This,Type,Filename,Quality,IncludeDocProperties,IgnorePrintAreas,From,To,OpenAfterPublish,FixedFormatExtClassPtr)	\
    ( (This)->lpVtbl -> ExportAsFixedFormat(This,Type,Filename,Quality,IncludeDocProperties,IgnorePrintAreas,From,To,OpenAfterPublish,FixedFormatExtClassPtr) ) 

#define IRange_get_CountLarge(This,RHS)	\
    ( (This)->lpVtbl -> get_CountLarge(This,RHS) ) 

#define IRange_CalculateRowMajorOrder(This,RHS)	\
    ( (This)->lpVtbl -> CalculateRowMajorOrder(This,RHS) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_OutlineLevel_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_OutlineLevel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_PageBreak_Proxy( 
    IRange * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB IRange_get_PageBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_PageBreak_Proxy( 
    IRange * This,
    /* [in] */ long RHS);


void __RPC_STUB IRange_put_PageBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Parse_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT ParseLine,
    /* [optional][in] */ VARIANT Destination,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Parse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden] */ HRESULT __stdcall IRange__PasteSpecial_Proxy( 
    IRange * This,
    /* [defaultvalue][optional][in] */ XlPasteType Paste,
    /* [defaultvalue][optional][in] */ XlPasteSpecialOperation Operation,
    /* [optional][in] */ VARIANT SkipBlanks,
    /* [optional][in] */ VARIANT Transpose,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange__PasteSpecial_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_PivotField_Proxy( 
    IRange * This,
    /* [retval][out] */ PivotField **RHS);


void __RPC_STUB IRange_get_PivotField_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_PivotItem_Proxy( 
    IRange * This,
    /* [retval][out] */ PivotItem **RHS);


void __RPC_STUB IRange_get_PivotItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_PivotTable_Proxy( 
    IRange * This,
    /* [retval][out] */ PivotTable **RHS);


void __RPC_STUB IRange_get_PivotTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Precedents_Proxy( 
    IRange * This,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_get_Precedents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_PrefixCharacter_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_PrefixCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Previous_Proxy( 
    IRange * This,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_get_Previous_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden] */ HRESULT __stdcall IRange___PrintOut_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange___PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_PrintPreview_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT EnableChanges,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_PrintPreview_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_QueryTable_Proxy( 
    IRange * This,
    /* [retval][out] */ QueryTable **RHS);


void __RPC_STUB IRange_get_QueryTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Range_Proxy( 
    IRange * This,
    /* [in] */ VARIANT Cell1,
    /* [optional][in] */ VARIANT Cell2,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_get_Range_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_RemoveSubtotal_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_RemoveSubtotal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Replace_Proxy( 
    IRange * This,
    /* [in] */ VARIANT What,
    /* [in] */ VARIANT Replacement,
    /* [optional][in] */ VARIANT LookAt,
    /* [optional][in] */ VARIANT SearchOrder,
    /* [optional][in] */ VARIANT MatchCase,
    /* [optional][in] */ VARIANT MatchByte,
    /* [optional][in] */ VARIANT SearchFormat,
    /* [optional][in] */ VARIANT ReplaceFormat,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB IRange_Replace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Resize_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT RowSize,
    /* [optional][in] */ VARIANT ColumnSize,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_get_Resize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Row_Proxy( 
    IRange * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB IRange_get_Row_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_RowDifferences_Proxy( 
    IRange * This,
    /* [in] */ VARIANT Comparison,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_RowDifferences_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_RowHeight_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_RowHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_RowHeight_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_RowHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Rows_Proxy( 
    IRange * This,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_get_Rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Run_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Arg1,
    /* [optional][in] */ VARIANT Arg2,
    /* [optional][in] */ VARIANT Arg3,
    /* [optional][in] */ VARIANT Arg4,
    /* [optional][in] */ VARIANT Arg5,
    /* [optional][in] */ VARIANT Arg6,
    /* [optional][in] */ VARIANT Arg7,
    /* [optional][in] */ VARIANT Arg8,
    /* [optional][in] */ VARIANT Arg9,
    /* [optional][in] */ VARIANT Arg10,
    /* [optional][in] */ VARIANT Arg11,
    /* [optional][in] */ VARIANT Arg12,
    /* [optional][in] */ VARIANT Arg13,
    /* [optional][in] */ VARIANT Arg14,
    /* [optional][in] */ VARIANT Arg15,
    /* [optional][in] */ VARIANT Arg16,
    /* [optional][in] */ VARIANT Arg17,
    /* [optional][in] */ VARIANT Arg18,
    /* [optional][in] */ VARIANT Arg19,
    /* [optional][in] */ VARIANT Arg20,
    /* [optional][in] */ VARIANT Arg21,
    /* [optional][in] */ VARIANT Arg22,
    /* [optional][in] */ VARIANT Arg23,
    /* [optional][in] */ VARIANT Arg24,
    /* [optional][in] */ VARIANT Arg25,
    /* [optional][in] */ VARIANT Arg26,
    /* [optional][in] */ VARIANT Arg27,
    /* [optional][in] */ VARIANT Arg28,
    /* [optional][in] */ VARIANT Arg29,
    /* [optional][in] */ VARIANT Arg30,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Run_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Select_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Select_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Show_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_ShowDependents_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Remove,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_ShowDependents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_ShowDetail_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_ShowDetail_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_ShowDetail_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_ShowDetail_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_ShowErrors_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_ShowErrors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_ShowPrecedents_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Remove,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_ShowPrecedents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_ShrinkToFit_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_ShrinkToFit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_ShrinkToFit_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_ShrinkToFit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Sort_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Key1,
    /* [defaultvalue][optional][in] */ XlSortOrder Order1,
    /* [optional][in] */ VARIANT Key2,
    /* [optional][in] */ VARIANT Type,
    /* [defaultvalue][optional][in] */ XlSortOrder Order2,
    /* [optional][in] */ VARIANT Key3,
    /* [defaultvalue][optional][in] */ XlSortOrder Order3,
    /* [defaultvalue][optional][in] */ XlYesNoGuess Header,
    /* [optional][in] */ VARIANT OrderCustom,
    /* [optional][in] */ VARIANT MatchCase,
    /* [defaultvalue][optional][in] */ XlSortOrientation Orientation,
    /* [defaultvalue][optional][in] */ XlSortMethod SortMethod,
    /* [defaultvalue][optional][in] */ XlSortDataOption DataOption1,
    /* [defaultvalue][optional][in] */ XlSortDataOption DataOption2,
    /* [defaultvalue][optional][in] */ XlSortDataOption DataOption3,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Sort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_SortSpecial_Proxy( 
    IRange * This,
    /* [defaultvalue][optional][in] */ XlSortMethod SortMethod,
    /* [optional][in] */ VARIANT Key1,
    /* [defaultvalue][optional][in] */ XlSortOrder Order1,
    /* [optional][in] */ VARIANT Type,
    /* [optional][in] */ VARIANT Key2,
    /* [defaultvalue][optional][in] */ XlSortOrder Order2,
    /* [optional][in] */ VARIANT Key3,
    /* [defaultvalue][optional][in] */ XlSortOrder Order3,
    /* [defaultvalue][optional][in] */ XlYesNoGuess Header,
    /* [optional][in] */ VARIANT OrderCustom,
    /* [optional][in] */ VARIANT MatchCase,
    /* [defaultvalue][optional][in] */ XlSortOrientation Orientation,
    /* [defaultvalue][optional][in] */ XlSortDataOption DataOption1,
    /* [defaultvalue][optional][in] */ XlSortDataOption DataOption2,
    /* [defaultvalue][optional][in] */ XlSortDataOption DataOption3,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_SortSpecial_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_SoundNote_Proxy( 
    IRange * This,
    /* [retval][out] */ SoundNote **RHS);


void __RPC_STUB IRange_get_SoundNote_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_SpecialCells_Proxy( 
    IRange * This,
    /* [in] */ XlCellType Type,
    /* [optional][in] */ VARIANT Value,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB IRange_SpecialCells_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Style_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_Style_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_Style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_SubscribeTo_Proxy( 
    IRange * This,
    /* [in] */ BSTR Edition,
    /* [defaultvalue][optional][in] */ XlSubscribeToFormat Format,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_SubscribeTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Subtotal_Proxy( 
    IRange * This,
    /* [in] */ long GroupBy,
    /* [in] */ XlConsolidationFunction Function,
    /* [in] */ VARIANT TotalList,
    /* [optional][in] */ VARIANT Replace,
    /* [optional][in] */ VARIANT PageBreaks,
    /* [defaultvalue][optional][in] */ XlSummaryRow SummaryBelowData,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Subtotal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Summary_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Summary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Table_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT RowInput,
    /* [optional][in] */ VARIANT ColumnInput,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Table_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Text_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_TextToColumns_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Destination,
    /* [defaultvalue][optional][in] */ XlTextParsingType DataType,
    /* [defaultvalue][optional][in] */ XlTextQualifier TextQualifier,
    /* [optional][in] */ VARIANT ConsecutiveDelimiter,
    /* [optional][in] */ VARIANT Tab,
    /* [optional][in] */ VARIANT Semicolon,
    /* [optional][in] */ VARIANT Comma,
    /* [optional][in] */ VARIANT Space,
    /* [optional][in] */ VARIANT Other,
    /* [optional][in] */ VARIANT OtherChar,
    /* [optional][in] */ VARIANT FieldInfo,
    /* [optional][in] */ VARIANT DecimalSeparator,
    /* [optional][in] */ VARIANT ThousandsSeparator,
    /* [optional][in] */ VARIANT TrailingMinusNumbers,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_TextToColumns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Top_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Ungroup_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_Ungroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_UseStandardHeight_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_UseStandardHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_UseStandardHeight_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_UseStandardHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_UseStandardWidth_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_UseStandardWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_UseStandardWidth_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_UseStandardWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Validation_Proxy( 
    IRange * This,
    /* [retval][out] */ Validation **RHS);


void __RPC_STUB IRange_get_Validation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Value_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT RangeValueDataType,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_Value_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT RangeValueDataType,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Value2_Proxy( 
    IRange * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Value2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_Value2_Proxy( 
    IRange * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_Value2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_VerticalAlignment_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_VerticalAlignment_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_VerticalAlignment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Width_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_Width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Worksheet_Proxy( 
    IRange * This,
    /* [retval][out] */ Worksheet	**RHS);


void __RPC_STUB IRange_get_Worksheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_WrapText_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_WrapText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_WrapText_Proxy( 
    IRange * This,
    /* [in] */ VARIANT RHS);


void __RPC_STUB IRange_put_WrapText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_AddComment_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Text,
    /* [retval][out] */ Comment **RHS);


void __RPC_STUB IRange_AddComment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Comment_Proxy( 
    IRange * This,
    /* [retval][out] */ Comment **RHS);


void __RPC_STUB IRange_get_Comment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_ClearComments_Proxy( 
    IRange * This);


void __RPC_STUB IRange_ClearComments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Phonetic_Proxy( 
    IRange * This,
    /* [retval][out] */ Phonetic **RHS);


void __RPC_STUB IRange_get_Phonetic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_FormatConditions_Proxy( 
    IRange * This,
    /* [retval][out] */ FormatConditions **RHS);


void __RPC_STUB IRange_get_FormatConditions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_ReadingOrder_Proxy( 
    IRange * This,
    /* [retval][out] */ long *RHS);


void __RPC_STUB IRange_get_ReadingOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_ReadingOrder_Proxy( 
    IRange * This,
    /* [in] */ long RHS);


void __RPC_STUB IRange_put_ReadingOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Hyperlinks_Proxy( 
    IRange * This,
    /* [retval][out] */ HyperLinks **RHS);


void __RPC_STUB IRange_get_Hyperlinks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Phonetics_Proxy( 
    IRange * This,
    /* [retval][out] */ Phonetics **RHS);


void __RPC_STUB IRange_get_Phonetics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_SetPhonetic_Proxy( 
    IRange * This);


void __RPC_STUB IRange_SetPhonetic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_ID_Proxy( 
    IRange * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB IRange_get_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput] */ HRESULT __stdcall IRange_put_ID_Proxy( 
    IRange * This,
    /* [in] */ BSTR RHS);


void __RPC_STUB IRange_put_ID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden] */ HRESULT __stdcall IRange__PrintOut_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [optional][in] */ VARIANT PrToFileName,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange__PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_PivotCell_Proxy( 
    IRange * This,
    /* [retval][out] */ PivotCell **RHS);


void __RPC_STUB IRange_get_PivotCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Dirty_Proxy( 
    IRange * This);


void __RPC_STUB IRange_Dirty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_Errors_Proxy( 
    IRange * This,
    /* [retval][out] */ Errors **RHS);


void __RPC_STUB IRange_get_Errors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_SmartTags_Proxy( 
    IRange * This,
    /* [retval][out] */ SmartTags **RHS);


void __RPC_STUB IRange_get_SmartTags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_Speak_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT SpeakDirection,
    /* [optional][in] */ VARIANT SpeakFormulas);


void __RPC_STUB IRange_Speak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_PasteSpecial_Proxy( 
    IRange * This,
    /* [defaultvalue][optional][in] */ XlPasteType Paste,
    /* [defaultvalue][optional][in] */ XlPasteSpecialOperation Operation,
    /* [optional][in] */ VARIANT SkipBlanks,
    /* [optional][in] */ VARIANT Transpose,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_PasteSpecial_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_AllowEdit_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB IRange_get_AllowEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_ListObject_Proxy( 
    IRange * This,
    /* [retval][out] */ ListObject **RHS);


void __RPC_STUB IRange_get_ListObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_XPath_Proxy( 
    IRange * This,
    /* [retval][out] */ XPath **RHS);


void __RPC_STUB IRange_get_XPath_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_ServerActions_Proxy( 
    IRange * This,
    /* [retval][out] */ Actions **RHS);


void __RPC_STUB IRange_get_ServerActions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_RemoveDuplicates_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT Columns,
    /* [defaultvalue][optional][in] */ XlYesNoGuess Header);


void __RPC_STUB IRange_RemoveDuplicates_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_PrintOut_Proxy( 
    IRange * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [optional][in] */ VARIANT PrToFileName,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_MDX_Proxy( 
    IRange * This,
    /* [retval][out] */ BSTR *RHS);


void __RPC_STUB IRange_get_MDX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_ExportAsFixedFormat_Proxy( 
    IRange * This,
    /* [in] */ XlFixedFormatType Type,
    /* [optional][in] */ VARIANT Filename,
    /* [optional][in] */ VARIANT Quality,
    /* [optional][in] */ VARIANT IncludeDocProperties,
    /* [optional][in] */ VARIANT IgnorePrintAreas,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT OpenAfterPublish,
    /* [optional][in] */ VARIANT FixedFormatExtClassPtr);


void __RPC_STUB IRange_ExportAsFixedFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget] */ HRESULT __stdcall IRange_get_CountLarge_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_get_CountLarge_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext] */ HRESULT __stdcall IRange_CalculateRowMajorOrder_Proxy( 
    IRange * This,
    /* [retval][out] */ VARIANT *RHS);


void __RPC_STUB IRange_CalculateRowMajorOrder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IRange_INTERFACE_DEFINED__ */


#ifndef ___Worksheet_INTERFACE_DEFINED__
#define ___Worksheet_INTERFACE_DEFINED__

/* interface _Worksheet */
/* [object][oleautomation][nonextensible][dual][helpcontext][uuid] */ 


EXTERN_C const IID IID__Worksheet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208D8-0000-0000-C000-000000000046")
    _Worksheet : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Delete( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeName( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get__CodeName( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put__CodeName( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Index( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Move( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Next( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnDoubleClick( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnDoubleClick( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSheetActivate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSheetActivate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnSheetDeactivate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnSheetDeactivate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_PageSetup( 
            /* [retval][out] */ PageSetup	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Previous( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE __PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintPreview( 
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Protect( 
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT DrawingObjects,
            /* [optional][in] */ VARIANT Contents,
            /* [optional][in] */ VARIANT Scenarios,
            /* [optional][in] */ VARIANT UserInterfaceOnly,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectContents( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectDrawingObjects( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectionMode( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectScenarios( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _SaveAs( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Select( 
            /* [optional][in] */ VARIANT Replace,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Unprotect( 
            /* [optional][in] */ VARIANT Password,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Visible( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlSheetVisibility *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_Visible( 
            /* [lcid][in] */ long lcid,
            /* [in] */ XlSheetVisibility RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Shapes( 
            /* [retval][out] */ Shapes **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransitionExpEval( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TransitionExpEval( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Arcs( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFilterMode( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoFilterMode( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SetBackgroundPicture( 
            /* [in] */ BSTR Filename) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Buttons( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Calculate( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableCalculation( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableCalculation( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Cells( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ChartObjects( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE CheckBoxes( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CheckSpelling( 
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [optional][in] */ VARIANT AlwaysSuggest,
            /* [optional][in] */ VARIANT SpellLang,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CircularReference( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearArrows( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConsolidationFunction( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlConsolidationFunction *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConsolidationOptions( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConsolidationSources( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayAutomaticPageBreaks( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayAutomaticPageBreaks( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Drawings( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE DrawingObjects( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE DropDowns( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableAutoFilter( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableAutoFilter( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableSelection( 
            /* [retval][out] */ XlEnableSelection *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableSelection( 
            /* [in] */ XlEnableSelection RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableOutlining( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableOutlining( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnablePivotTable( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnablePivotTable( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Evaluate( 
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Evaluate( 
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_FilterMode( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ResetAllPageBreaks( void) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE GroupBoxes( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE GroupObjects( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Labels( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Lines( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ListBoxes( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Names( 
            /* [retval][out] */ Names	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE OLEObjects( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnCalculate( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnCalculate( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnData( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnData( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_OnEntry( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put_OnEntry( 
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE OptionButtons( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Outline( 
            /* [retval][out] */ Outline	**RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Ovals( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Paste( 
            /* [optional][in] */ VARIANT Destination,
            /* [optional][in] */ VARIANT Link,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _PasteSpecial( 
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Link,
            /* [optional][in] */ VARIANT DisplayAsIcon,
            /* [optional][in] */ VARIANT IconFileName,
            /* [optional][in] */ VARIANT IconIndex,
            /* [optional][in] */ VARIANT IconLabel,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Pictures( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PivotTables( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PivotTableWizard( 
            /* [optional][in] */ VARIANT SourceType,
            /* [optional][in] */ VARIANT SourceData,
            /* [optional][in] */ VARIANT TableDestination,
            /* [optional][in] */ VARIANT TableName,
            /* [optional][in] */ VARIANT RowGrand,
            /* [optional][in] */ VARIANT ColumnGrand,
            /* [optional][in] */ VARIANT SaveData,
            /* [optional][in] */ VARIANT HasAutoFormat,
            /* [optional][in] */ VARIANT AutoPage,
            /* [optional][in] */ VARIANT Reserved,
            /* [optional][in] */ VARIANT BackgroundQuery,
            /* [optional][in] */ VARIANT OptimizeCache,
            /* [optional][in] */ VARIANT PageFieldOrder,
            /* [optional][in] */ VARIANT PageFieldWrapCount,
            /* [optional][in] */ VARIANT ReadData,
            /* [optional][in] */ VARIANT Connection,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ PivotTable **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Range( 
            /* [in] */ VARIANT Cell1,
            /* [optional][in] */ VARIANT Cell2,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Rectangles( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Rows( 
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Scenarios( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ScrollArea( 
            /* [retval][out] */ BSTR *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_ScrollArea( 
            /* [in] */ BSTR RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE ScrollBars( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowAllData( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ShowDataForm( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE Spinners( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardHeight( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_StandardWidth( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_StandardWidth( 
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE TextBoxes( 
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_TransitionFormEntry( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_TransitionFormEntry( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Type( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlSheetType *RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_UsedRange( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_HPageBreaks( 
            /* [retval][out] */ HPageBreaks **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_VPageBreaks( 
            /* [retval][out] */ vPageBreaks **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_QueryTables( 
            /* [retval][out] */ QueryTables **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayPageBreaks( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayPageBreaks( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Comments( 
            /* [retval][out] */ Comments **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Hyperlinks( 
            /* [retval][out] */ HyperLinks **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ClearCircles( void) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE CircleInvalid( void) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get__DisplayRightToLeft( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE put__DisplayRightToLeft( 
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoFilter( 
            /* [retval][out] */ AutoFilter **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayRightToLeft( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayRightToLeft( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE get_Scripts( 
            /* [retval][out] */ Scripts **RHS) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _CheckSpelling( 
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [optional][in] */ VARIANT AlwaysSuggest,
            /* [optional][in] */ VARIANT SpellLang,
            /* [optional][in] */ VARIANT IgnoreFinalYaa,
            /* [optional][in] */ VARIANT SpellScript,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Tab( 
            /* [retval][out] */ Tab **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_MailEnvelope( 
            /* [retval][out] */ MsoEnvelope **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE SaveAs( 
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT Local) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_CustomProperties( 
            /* [retval][out] */ CustomProperties **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_SmartTags( 
            /* [retval][out] */ SmartTags **RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Protection( 
            /* [retval][out] */ Protection **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PasteSpecial( 
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Link,
            /* [optional][in] */ VARIANT DisplayAsIcon,
            /* [optional][in] */ VARIANT IconFileName,
            /* [optional][in] */ VARIANT IconIndex,
            /* [optional][in] */ VARIANT IconLabel,
            /* [optional][in] */ VARIANT NoHTMLFormatting,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE Protect( 
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT DrawingObjects,
            /* [optional][in] */ VARIANT Contents,
            /* [optional][in] */ VARIANT Scenarios,
            /* [optional][in] */ VARIANT UserInterfaceOnly,
            /* [optional][in] */ VARIANT AllowFormattingCells,
            /* [optional][in] */ VARIANT AllowFormattingColumns,
            /* [optional][in] */ VARIANT AllowFormattingRows,
            /* [optional][in] */ VARIANT AllowInsertingColumns,
            /* [optional][in] */ VARIANT AllowInsertingRows,
            /* [optional][in] */ VARIANT AllowInsertingHyperlinks,
            /* [optional][in] */ VARIANT AllowDeletingColumns,
            /* [optional][in] */ VARIANT AllowDeletingRows,
            /* [optional][in] */ VARIANT AllowSorting,
            /* [optional][in] */ VARIANT AllowFiltering,
            /* [optional][in] */ VARIANT AllowUsingPivotTables) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_ListObjects( 
            /* [retval][out] */ ListObjects **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE XmlDataQuery( 
            /* [in] */ BSTR XPath,
            /* [optional][in] */ VARIANT SelectionNamespaces,
            /* [optional][in] */ VARIANT Map,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE XmlMapQuery( 
            /* [in] */ BSTR XPath,
            /* [optional][in] */ VARIANT SelectionNamespaces,
            /* [optional][in] */ VARIANT Map,
            /* [retval][out] */ Range	**RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableFormatConditionsCalculation( 
            /* [retval][out] */ VARIANT_BOOL *RHS) = 0;
        
        virtual /* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableFormatConditionsCalculation( 
            /* [in] */ VARIANT_BOOL RHS) = 0;
        
        virtual /* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE get_Sort( 
            /* [retval][out] */ Sort **RHS) = 0;
        
        virtual /* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE ExportAsFixedFormat( 
            /* [in] */ XlFixedFormatType Type,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Quality,
            /* [optional][in] */ VARIANT IncludeDocProperties,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT OpenAfterPublish,
            /* [optional][in] */ VARIANT FixedFormatExtClassPtr) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct _WorksheetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Worksheet * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Worksheet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Worksheet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Worksheet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Worksheet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Worksheet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Worksheet * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Application )( 
            _Worksheet * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Creator )( 
            _Worksheet * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            _Worksheet * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Delete )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeName )( 
            _Worksheet * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__CodeName )( 
            _Worksheet * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put__CodeName )( 
            _Worksheet * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Index )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Move )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            _Worksheet * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            _Worksheet * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Next )( 
            _Worksheet * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnDoubleClick )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnDoubleClick )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSheetActivate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSheetActivate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnSheetDeactivate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnSheetDeactivate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PageSetup )( 
            _Worksheet * This,
            /* [retval][out] */ PageSetup	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Previous )( 
            _Worksheet * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *__PrintOut )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintPreview )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_Protect )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT DrawingObjects,
            /* [optional][in] */ VARIANT Contents,
            /* [optional][in] */ VARIANT Scenarios,
            /* [optional][in] */ VARIANT UserInterfaceOnly,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectContents )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectDrawingObjects )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionMode )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectScenarios )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_SaveAs )( 
            _Worksheet * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Select )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Replace,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Unprotect )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Password,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Visible )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlSheetVisibility *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Visible )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ XlSheetVisibility RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Shapes )( 
            _Worksheet * This,
            /* [retval][out] */ Shapes **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransitionExpEval )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransitionExpEval )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Arcs )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFilterMode )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoFilterMode )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SetBackgroundPicture )( 
            _Worksheet * This,
            /* [in] */ BSTR Filename);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Buttons )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Calculate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableCalculation )( 
            _Worksheet * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableCalculation )( 
            _Worksheet * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Cells )( 
            _Worksheet * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ChartObjects )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *CheckBoxes )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSpelling )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [optional][in] */ VARIANT AlwaysSuggest,
            /* [optional][in] */ VARIANT SpellLang,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CircularReference )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearArrows )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            _Worksheet * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConsolidationFunction )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlConsolidationFunction *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConsolidationOptions )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ConsolidationSources )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayAutomaticPageBreaks )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayAutomaticPageBreaks )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Drawings )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *DrawingObjects )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *DropDowns )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableAutoFilter )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableAutoFilter )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableSelection )( 
            _Worksheet * This,
            /* [retval][out] */ XlEnableSelection *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableSelection )( 
            _Worksheet * This,
            /* [in] */ XlEnableSelection RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableOutlining )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableOutlining )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnablePivotTable )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnablePivotTable )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Evaluate )( 
            _Worksheet * This,
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *_Evaluate )( 
            _Worksheet * This,
            /* [in] */ VARIANT Name,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FilterMode )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ResetAllPageBreaks )( 
            _Worksheet * This);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *GroupBoxes )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *GroupObjects )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Labels )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Lines )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ListBoxes )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Names )( 
            _Worksheet * This,
            /* [retval][out] */ Names	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *OLEObjects )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnCalculate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnCalculate )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnData )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnData )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OnEntry )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OnEntry )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *OptionButtons )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Outline )( 
            _Worksheet * This,
            /* [retval][out] */ Outline	**RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Ovals )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Paste )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Destination,
            /* [optional][in] */ VARIANT Link,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_PasteSpecial )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Link,
            /* [optional][in] */ VARIANT DisplayAsIcon,
            /* [optional][in] */ VARIANT IconFileName,
            /* [optional][in] */ VARIANT IconIndex,
            /* [optional][in] */ VARIANT IconLabel,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Pictures )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PivotTables )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PivotTableWizard )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT SourceType,
            /* [optional][in] */ VARIANT SourceData,
            /* [optional][in] */ VARIANT TableDestination,
            /* [optional][in] */ VARIANT TableName,
            /* [optional][in] */ VARIANT RowGrand,
            /* [optional][in] */ VARIANT ColumnGrand,
            /* [optional][in] */ VARIANT SaveData,
            /* [optional][in] */ VARIANT HasAutoFormat,
            /* [optional][in] */ VARIANT AutoPage,
            /* [optional][in] */ VARIANT Reserved,
            /* [optional][in] */ VARIANT BackgroundQuery,
            /* [optional][in] */ VARIANT OptimizeCache,
            /* [optional][in] */ VARIANT PageFieldOrder,
            /* [optional][in] */ VARIANT PageFieldWrapCount,
            /* [optional][in] */ VARIANT ReadData,
            /* [optional][in] */ VARIANT Connection,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ PivotTable **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Range )( 
            _Worksheet * This,
            /* [in] */ VARIANT Cell1,
            /* [optional][in] */ VARIANT Cell2,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Rectangles )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Rows )( 
            _Worksheet * This,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Scenarios )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ScrollArea )( 
            _Worksheet * This,
            /* [retval][out] */ BSTR *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ScrollArea )( 
            _Worksheet * This,
            /* [in] */ BSTR RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *ScrollBars )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowAllData )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ShowDataForm )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *Spinners )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardHeight )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StandardWidth )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ double *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_StandardWidth )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ double RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *TextBoxes )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Index,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TransitionFormEntry )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TransitionFormEntry )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Type )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ XlSheetType *RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UsedRange )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HPageBreaks )( 
            _Worksheet * This,
            /* [retval][out] */ HPageBreaks **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_VPageBreaks )( 
            _Worksheet * This,
            /* [retval][out] */ vPageBreaks **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QueryTables )( 
            _Worksheet * This,
            /* [retval][out] */ QueryTables **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayPageBreaks )( 
            _Worksheet * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayPageBreaks )( 
            _Worksheet * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Comments )( 
            _Worksheet * This,
            /* [retval][out] */ Comments **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Hyperlinks )( 
            _Worksheet * This,
            /* [retval][out] */ HyperLinks **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ClearCircles )( 
            _Worksheet * This);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *CircleInvalid )( 
            _Worksheet * This);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get__DisplayRightToLeft )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext][hidden][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put__DisplayRightToLeft )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ long RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoFilter )( 
            _Worksheet * This,
            /* [retval][out] */ AutoFilter **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayRightToLeft )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayRightToLeft )( 
            _Worksheet * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][hidden][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Scripts )( 
            _Worksheet * This,
            /* [retval][out] */ Scripts **RHS);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_PrintOut )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][hidden][id] */ HRESULT ( STDMETHODCALLTYPE *_CheckSpelling )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT CustomDictionary,
            /* [optional][in] */ VARIANT IgnoreUppercase,
            /* [optional][in] */ VARIANT AlwaysSuggest,
            /* [optional][in] */ VARIANT SpellLang,
            /* [optional][in] */ VARIANT IgnoreFinalYaa,
            /* [optional][in] */ VARIANT SpellScript,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Tab )( 
            _Worksheet * This,
            /* [retval][out] */ Tab **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MailEnvelope )( 
            _Worksheet * This,
            /* [retval][out] */ MsoEnvelope **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *SaveAs )( 
            _Worksheet * This,
            /* [in] */ BSTR Filename,
            /* [optional][in] */ VARIANT FileFormat,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT WriteResPassword,
            /* [optional][in] */ VARIANT ReadOnlyRecommended,
            /* [optional][in] */ VARIANT CreateBackup,
            /* [optional][in] */ VARIANT AddToMru,
            /* [optional][in] */ VARIANT TextCodepage,
            /* [optional][in] */ VARIANT TextVisualLayout,
            /* [optional][in] */ VARIANT Local);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CustomProperties )( 
            _Worksheet * This,
            /* [retval][out] */ CustomProperties **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SmartTags )( 
            _Worksheet * This,
            /* [retval][out] */ SmartTags **RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Protection )( 
            _Worksheet * This,
            /* [retval][out] */ Protection **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PasteSpecial )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Format,
            /* [optional][in] */ VARIANT Link,
            /* [optional][in] */ VARIANT DisplayAsIcon,
            /* [optional][in] */ VARIANT IconFileName,
            /* [optional][in] */ VARIANT IconIndex,
            /* [optional][in] */ VARIANT IconLabel,
            /* [optional][in] */ VARIANT NoHTMLFormatting,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *Protect )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT Password,
            /* [optional][in] */ VARIANT DrawingObjects,
            /* [optional][in] */ VARIANT Contents,
            /* [optional][in] */ VARIANT Scenarios,
            /* [optional][in] */ VARIANT UserInterfaceOnly,
            /* [optional][in] */ VARIANT AllowFormattingCells,
            /* [optional][in] */ VARIANT AllowFormattingColumns,
            /* [optional][in] */ VARIANT AllowFormattingRows,
            /* [optional][in] */ VARIANT AllowInsertingColumns,
            /* [optional][in] */ VARIANT AllowInsertingRows,
            /* [optional][in] */ VARIANT AllowInsertingHyperlinks,
            /* [optional][in] */ VARIANT AllowDeletingColumns,
            /* [optional][in] */ VARIANT AllowDeletingRows,
            /* [optional][in] */ VARIANT AllowSorting,
            /* [optional][in] */ VARIANT AllowFiltering,
            /* [optional][in] */ VARIANT AllowUsingPivotTables);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ListObjects )( 
            _Worksheet * This,
            /* [retval][out] */ ListObjects **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *XmlDataQuery )( 
            _Worksheet * This,
            /* [in] */ BSTR XPath,
            /* [optional][in] */ VARIANT SelectionNamespaces,
            /* [optional][in] */ VARIANT Map,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *XmlMapQuery )( 
            _Worksheet * This,
            /* [in] */ BSTR XPath,
            /* [optional][in] */ VARIANT SelectionNamespaces,
            /* [optional][in] */ VARIANT Map,
            /* [retval][out] */ Range	**RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *PrintOut )( 
            _Worksheet * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableFormatConditionsCalculation )( 
            _Worksheet * This,
            /* [retval][out] */ VARIANT_BOOL *RHS);
        
        /* [helpcontext][propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableFormatConditionsCalculation )( 
            _Worksheet * This,
            /* [in] */ VARIANT_BOOL RHS);
        
        /* [helpcontext][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Sort )( 
            _Worksheet * This,
            /* [retval][out] */ Sort **RHS);
        
        /* [helpcontext][id] */ HRESULT ( STDMETHODCALLTYPE *ExportAsFixedFormat )( 
            _Worksheet * This,
            /* [in] */ XlFixedFormatType Type,
            /* [optional][in] */ VARIANT Filename,
            /* [optional][in] */ VARIANT Quality,
            /* [optional][in] */ VARIANT IncludeDocProperties,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT OpenAfterPublish,
            /* [optional][in] */ VARIANT FixedFormatExtClassPtr);
        
        END_INTERFACE
    } _WorksheetVtbl;

    interface _Worksheet
    {
        CONST_VTBL struct _WorksheetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Worksheet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Worksheet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Worksheet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Worksheet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Worksheet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Worksheet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Worksheet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Worksheet_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define _Worksheet_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define _Worksheet_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define _Worksheet_Activate(This,lcid)	\
    ( (This)->lpVtbl -> Activate(This,lcid) ) 

#define _Worksheet_Copy(This,Before,After,lcid)	\
    ( (This)->lpVtbl -> Copy(This,Before,After,lcid) ) 

#define _Worksheet_Delete(This,lcid)	\
    ( (This)->lpVtbl -> Delete(This,lcid) ) 

#define _Worksheet_get_CodeName(This,RHS)	\
    ( (This)->lpVtbl -> get_CodeName(This,RHS) ) 

#define _Worksheet_get__CodeName(This,RHS)	\
    ( (This)->lpVtbl -> get__CodeName(This,RHS) ) 

#define _Worksheet_put__CodeName(This,RHS)	\
    ( (This)->lpVtbl -> put__CodeName(This,RHS) ) 

#define _Worksheet_get_Index(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Index(This,lcid,RHS) ) 

#define _Worksheet_Move(This,Before,After,lcid)	\
    ( (This)->lpVtbl -> Move(This,Before,After,lcid) ) 

#define _Worksheet_get_Name(This,RHS)	\
    ( (This)->lpVtbl -> get_Name(This,RHS) ) 

#define _Worksheet_put_Name(This,RHS)	\
    ( (This)->lpVtbl -> put_Name(This,RHS) ) 

#define _Worksheet_get_Next(This,RHS)	\
    ( (This)->lpVtbl -> get_Next(This,RHS) ) 

#define _Worksheet_get_OnDoubleClick(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnDoubleClick(This,lcid,RHS) ) 

#define _Worksheet_put_OnDoubleClick(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnDoubleClick(This,lcid,RHS) ) 

#define _Worksheet_get_OnSheetActivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSheetActivate(This,lcid,RHS) ) 

#define _Worksheet_put_OnSheetActivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSheetActivate(This,lcid,RHS) ) 

#define _Worksheet_get_OnSheetDeactivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnSheetDeactivate(This,lcid,RHS) ) 

#define _Worksheet_put_OnSheetDeactivate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnSheetDeactivate(This,lcid,RHS) ) 

#define _Worksheet_get_PageSetup(This,RHS)	\
    ( (This)->lpVtbl -> get_PageSetup(This,RHS) ) 

#define _Worksheet_get_Previous(This,RHS)	\
    ( (This)->lpVtbl -> get_Previous(This,RHS) ) 

#define _Worksheet___PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid)	\
    ( (This)->lpVtbl -> __PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid) ) 

#define _Worksheet_PrintPreview(This,EnableChanges,lcid)	\
    ( (This)->lpVtbl -> PrintPreview(This,EnableChanges,lcid) ) 

#define _Worksheet__Protect(This,Password,DrawingObjects,Contents,Scenarios,UserInterfaceOnly,lcid)	\
    ( (This)->lpVtbl -> _Protect(This,Password,DrawingObjects,Contents,Scenarios,UserInterfaceOnly,lcid) ) 

#define _Worksheet_get_ProtectContents(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ProtectContents(This,lcid,RHS) ) 

#define _Worksheet_get_ProtectDrawingObjects(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ProtectDrawingObjects(This,lcid,RHS) ) 

#define _Worksheet_get_ProtectionMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ProtectionMode(This,lcid,RHS) ) 

#define _Worksheet_get_ProtectScenarios(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ProtectScenarios(This,lcid,RHS) ) 

#define _Worksheet__SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AddToMru,TextCodepage,TextVisualLayout,lcid)	\
    ( (This)->lpVtbl -> _SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AddToMru,TextCodepage,TextVisualLayout,lcid) ) 

#define _Worksheet_Select(This,Replace,lcid)	\
    ( (This)->lpVtbl -> Select(This,Replace,lcid) ) 

#define _Worksheet_Unprotect(This,Password,lcid)	\
    ( (This)->lpVtbl -> Unprotect(This,Password,lcid) ) 

#define _Worksheet_get_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Visible(This,lcid,RHS) ) 

#define _Worksheet_put_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Visible(This,lcid,RHS) ) 

#define _Worksheet_get_Shapes(This,RHS)	\
    ( (This)->lpVtbl -> get_Shapes(This,RHS) ) 

#define _Worksheet_get_TransitionExpEval(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_TransitionExpEval(This,lcid,RHS) ) 

#define _Worksheet_put_TransitionExpEval(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_TransitionExpEval(This,lcid,RHS) ) 

#define _Worksheet_Arcs(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Arcs(This,Index,lcid,RHS) ) 

#define _Worksheet_get_AutoFilterMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_AutoFilterMode(This,lcid,RHS) ) 

#define _Worksheet_put_AutoFilterMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_AutoFilterMode(This,lcid,RHS) ) 

#define _Worksheet_SetBackgroundPicture(This,Filename)	\
    ( (This)->lpVtbl -> SetBackgroundPicture(This,Filename) ) 

#define _Worksheet_Buttons(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Buttons(This,Index,lcid,RHS) ) 

#define _Worksheet_Calculate(This,lcid)	\
    ( (This)->lpVtbl -> Calculate(This,lcid) ) 

#define _Worksheet_get_EnableCalculation(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableCalculation(This,RHS) ) 

#define _Worksheet_put_EnableCalculation(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableCalculation(This,RHS) ) 

#define _Worksheet_get_Cells(This,RHS)	\
    ( (This)->lpVtbl -> get_Cells(This,RHS) ) 

#define _Worksheet_ChartObjects(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> ChartObjects(This,Index,lcid,RHS) ) 

#define _Worksheet_CheckBoxes(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> CheckBoxes(This,Index,lcid,RHS) ) 

#define _Worksheet_CheckSpelling(This,CustomDictionary,IgnoreUppercase,AlwaysSuggest,SpellLang,lcid)	\
    ( (This)->lpVtbl -> CheckSpelling(This,CustomDictionary,IgnoreUppercase,AlwaysSuggest,SpellLang,lcid) ) 

#define _Worksheet_get_CircularReference(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_CircularReference(This,lcid,RHS) ) 

#define _Worksheet_ClearArrows(This,lcid)	\
    ( (This)->lpVtbl -> ClearArrows(This,lcid) ) 

#define _Worksheet_get_Columns(This,RHS)	\
    ( (This)->lpVtbl -> get_Columns(This,RHS) ) 

#define _Worksheet_get_ConsolidationFunction(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ConsolidationFunction(This,lcid,RHS) ) 

#define _Worksheet_get_ConsolidationOptions(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ConsolidationOptions(This,lcid,RHS) ) 

#define _Worksheet_get_ConsolidationSources(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_ConsolidationSources(This,lcid,RHS) ) 

#define _Worksheet_get_DisplayAutomaticPageBreaks(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayAutomaticPageBreaks(This,lcid,RHS) ) 

#define _Worksheet_put_DisplayAutomaticPageBreaks(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayAutomaticPageBreaks(This,lcid,RHS) ) 

#define _Worksheet_Drawings(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Drawings(This,Index,lcid,RHS) ) 

#define _Worksheet_DrawingObjects(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> DrawingObjects(This,Index,lcid,RHS) ) 

#define _Worksheet_DropDowns(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> DropDowns(This,Index,lcid,RHS) ) 

#define _Worksheet_get_EnableAutoFilter(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EnableAutoFilter(This,lcid,RHS) ) 

#define _Worksheet_put_EnableAutoFilter(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EnableAutoFilter(This,lcid,RHS) ) 

#define _Worksheet_get_EnableSelection(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableSelection(This,RHS) ) 

#define _Worksheet_put_EnableSelection(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableSelection(This,RHS) ) 

#define _Worksheet_get_EnableOutlining(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EnableOutlining(This,lcid,RHS) ) 

#define _Worksheet_put_EnableOutlining(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EnableOutlining(This,lcid,RHS) ) 

#define _Worksheet_get_EnablePivotTable(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_EnablePivotTable(This,lcid,RHS) ) 

#define _Worksheet_put_EnablePivotTable(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_EnablePivotTable(This,lcid,RHS) ) 

#define _Worksheet_Evaluate(This,Name,lcid,RHS)	\
    ( (This)->lpVtbl -> Evaluate(This,Name,lcid,RHS) ) 

#define _Worksheet__Evaluate(This,Name,lcid,RHS)	\
    ( (This)->lpVtbl -> _Evaluate(This,Name,lcid,RHS) ) 

#define _Worksheet_get_FilterMode(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_FilterMode(This,lcid,RHS) ) 

#define _Worksheet_ResetAllPageBreaks(This)	\
    ( (This)->lpVtbl -> ResetAllPageBreaks(This) ) 

#define _Worksheet_GroupBoxes(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> GroupBoxes(This,Index,lcid,RHS) ) 

#define _Worksheet_GroupObjects(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> GroupObjects(This,Index,lcid,RHS) ) 

#define _Worksheet_Labels(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Labels(This,Index,lcid,RHS) ) 

#define _Worksheet_Lines(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Lines(This,Index,lcid,RHS) ) 

#define _Worksheet_ListBoxes(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> ListBoxes(This,Index,lcid,RHS) ) 

#define _Worksheet_get_Names(This,RHS)	\
    ( (This)->lpVtbl -> get_Names(This,RHS) ) 

#define _Worksheet_OLEObjects(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> OLEObjects(This,Index,lcid,RHS) ) 

#define _Worksheet_get_OnCalculate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnCalculate(This,lcid,RHS) ) 

#define _Worksheet_put_OnCalculate(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnCalculate(This,lcid,RHS) ) 

#define _Worksheet_get_OnData(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnData(This,lcid,RHS) ) 

#define _Worksheet_put_OnData(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnData(This,lcid,RHS) ) 

#define _Worksheet_get_OnEntry(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_OnEntry(This,lcid,RHS) ) 

#define _Worksheet_put_OnEntry(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_OnEntry(This,lcid,RHS) ) 

#define _Worksheet_OptionButtons(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> OptionButtons(This,Index,lcid,RHS) ) 

#define _Worksheet_get_Outline(This,RHS)	\
    ( (This)->lpVtbl -> get_Outline(This,RHS) ) 

#define _Worksheet_Ovals(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Ovals(This,Index,lcid,RHS) ) 

#define _Worksheet_Paste(This,Destination,Link,lcid)	\
    ( (This)->lpVtbl -> Paste(This,Destination,Link,lcid) ) 

#define _Worksheet__PasteSpecial(This,Format,Link,DisplayAsIcon,IconFileName,IconIndex,IconLabel,lcid)	\
    ( (This)->lpVtbl -> _PasteSpecial(This,Format,Link,DisplayAsIcon,IconFileName,IconIndex,IconLabel,lcid) ) 

#define _Worksheet_Pictures(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Pictures(This,Index,lcid,RHS) ) 

#define _Worksheet_PivotTables(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> PivotTables(This,Index,lcid,RHS) ) 

#define _Worksheet_PivotTableWizard(This,SourceType,SourceData,TableDestination,TableName,RowGrand,ColumnGrand,SaveData,HasAutoFormat,AutoPage,Reserved,BackgroundQuery,OptimizeCache,PageFieldOrder,PageFieldWrapCount,ReadData,Connection,lcid,RHS)	\
    ( (This)->lpVtbl -> PivotTableWizard(This,SourceType,SourceData,TableDestination,TableName,RowGrand,ColumnGrand,SaveData,HasAutoFormat,AutoPage,Reserved,BackgroundQuery,OptimizeCache,PageFieldOrder,PageFieldWrapCount,ReadData,Connection,lcid,RHS) ) 

#define _Worksheet_get_Range(This,Cell1,Cell2,RHS)	\
    ( (This)->lpVtbl -> get_Range(This,Cell1,Cell2,RHS) ) 

#define _Worksheet_Rectangles(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Rectangles(This,Index,lcid,RHS) ) 

#define _Worksheet_get_Rows(This,RHS)	\
    ( (This)->lpVtbl -> get_Rows(This,RHS) ) 

#define _Worksheet_Scenarios(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Scenarios(This,Index,lcid,RHS) ) 

#define _Worksheet_get_ScrollArea(This,RHS)	\
    ( (This)->lpVtbl -> get_ScrollArea(This,RHS) ) 

#define _Worksheet_put_ScrollArea(This,RHS)	\
    ( (This)->lpVtbl -> put_ScrollArea(This,RHS) ) 

#define _Worksheet_ScrollBars(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> ScrollBars(This,Index,lcid,RHS) ) 

#define _Worksheet_ShowAllData(This,lcid)	\
    ( (This)->lpVtbl -> ShowAllData(This,lcid) ) 

#define _Worksheet_ShowDataForm(This,lcid)	\
    ( (This)->lpVtbl -> ShowDataForm(This,lcid) ) 

#define _Worksheet_Spinners(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> Spinners(This,Index,lcid,RHS) ) 

#define _Worksheet_get_StandardHeight(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_StandardHeight(This,lcid,RHS) ) 

#define _Worksheet_get_StandardWidth(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_StandardWidth(This,lcid,RHS) ) 

#define _Worksheet_put_StandardWidth(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_StandardWidth(This,lcid,RHS) ) 

#define _Worksheet_TextBoxes(This,Index,lcid,RHS)	\
    ( (This)->lpVtbl -> TextBoxes(This,Index,lcid,RHS) ) 

#define _Worksheet_get_TransitionFormEntry(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_TransitionFormEntry(This,lcid,RHS) ) 

#define _Worksheet_put_TransitionFormEntry(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_TransitionFormEntry(This,lcid,RHS) ) 

#define _Worksheet_get_Type(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Type(This,lcid,RHS) ) 

#define _Worksheet_get_UsedRange(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_UsedRange(This,lcid,RHS) ) 

#define _Worksheet_get_HPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_HPageBreaks(This,RHS) ) 

#define _Worksheet_get_VPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_VPageBreaks(This,RHS) ) 

#define _Worksheet_get_QueryTables(This,RHS)	\
    ( (This)->lpVtbl -> get_QueryTables(This,RHS) ) 

#define _Worksheet_get_DisplayPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_DisplayPageBreaks(This,RHS) ) 

#define _Worksheet_put_DisplayPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> put_DisplayPageBreaks(This,RHS) ) 

#define _Worksheet_get_Comments(This,RHS)	\
    ( (This)->lpVtbl -> get_Comments(This,RHS) ) 

#define _Worksheet_get_Hyperlinks(This,RHS)	\
    ( (This)->lpVtbl -> get_Hyperlinks(This,RHS) ) 

#define _Worksheet_ClearCircles(This)	\
    ( (This)->lpVtbl -> ClearCircles(This) ) 

#define _Worksheet_CircleInvalid(This)	\
    ( (This)->lpVtbl -> CircleInvalid(This) ) 

#define _Worksheet_get__DisplayRightToLeft(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get__DisplayRightToLeft(This,lcid,RHS) ) 

#define _Worksheet_put__DisplayRightToLeft(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put__DisplayRightToLeft(This,lcid,RHS) ) 

#define _Worksheet_get_AutoFilter(This,RHS)	\
    ( (This)->lpVtbl -> get_AutoFilter(This,RHS) ) 

#define _Worksheet_get_DisplayRightToLeft(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_DisplayRightToLeft(This,lcid,RHS) ) 

#define _Worksheet_put_DisplayRightToLeft(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_DisplayRightToLeft(This,lcid,RHS) ) 

#define _Worksheet_get_Scripts(This,RHS)	\
    ( (This)->lpVtbl -> get_Scripts(This,RHS) ) 

#define _Worksheet__PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid)	\
    ( (This)->lpVtbl -> _PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid) ) 

#define _Worksheet__CheckSpelling(This,CustomDictionary,IgnoreUppercase,AlwaysSuggest,SpellLang,IgnoreFinalYaa,SpellScript,lcid)	\
    ( (This)->lpVtbl -> _CheckSpelling(This,CustomDictionary,IgnoreUppercase,AlwaysSuggest,SpellLang,IgnoreFinalYaa,SpellScript,lcid) ) 

#define _Worksheet_get_Tab(This,RHS)	\
    ( (This)->lpVtbl -> get_Tab(This,RHS) ) 

#define _Worksheet_get_MailEnvelope(This,RHS)	\
    ( (This)->lpVtbl -> get_MailEnvelope(This,RHS) ) 

#define _Worksheet_SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AddToMru,TextCodepage,TextVisualLayout,Local)	\
    ( (This)->lpVtbl -> SaveAs(This,Filename,FileFormat,Password,WriteResPassword,ReadOnlyRecommended,CreateBackup,AddToMru,TextCodepage,TextVisualLayout,Local) ) 

#define _Worksheet_get_CustomProperties(This,RHS)	\
    ( (This)->lpVtbl -> get_CustomProperties(This,RHS) ) 

#define _Worksheet_get_SmartTags(This,RHS)	\
    ( (This)->lpVtbl -> get_SmartTags(This,RHS) ) 

#define _Worksheet_get_Protection(This,RHS)	\
    ( (This)->lpVtbl -> get_Protection(This,RHS) ) 

#define _Worksheet_PasteSpecial(This,Format,Link,DisplayAsIcon,IconFileName,IconIndex,IconLabel,NoHTMLFormatting,lcid)	\
    ( (This)->lpVtbl -> PasteSpecial(This,Format,Link,DisplayAsIcon,IconFileName,IconIndex,IconLabel,NoHTMLFormatting,lcid) ) 

#define _Worksheet_Protect(This,Password,DrawingObjects,Contents,Scenarios,UserInterfaceOnly,AllowFormattingCells,AllowFormattingColumns,AllowFormattingRows,AllowInsertingColumns,AllowInsertingRows,AllowInsertingHyperlinks,AllowDeletingColumns,AllowDeletingRows,AllowSorting,AllowFiltering,AllowUsingPivotTables)	\
    ( (This)->lpVtbl -> Protect(This,Password,DrawingObjects,Contents,Scenarios,UserInterfaceOnly,AllowFormattingCells,AllowFormattingColumns,AllowFormattingRows,AllowInsertingColumns,AllowInsertingRows,AllowInsertingHyperlinks,AllowDeletingColumns,AllowDeletingRows,AllowSorting,AllowFiltering,AllowUsingPivotTables) ) 

#define _Worksheet_get_ListObjects(This,RHS)	\
    ( (This)->lpVtbl -> get_ListObjects(This,RHS) ) 

#define _Worksheet_XmlDataQuery(This,XPath,SelectionNamespaces,Map,RHS)	\
    ( (This)->lpVtbl -> XmlDataQuery(This,XPath,SelectionNamespaces,Map,RHS) ) 

#define _Worksheet_XmlMapQuery(This,XPath,SelectionNamespaces,Map,RHS)	\
    ( (This)->lpVtbl -> XmlMapQuery(This,XPath,SelectionNamespaces,Map,RHS) ) 

#define _Worksheet_PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid)	\
    ( (This)->lpVtbl -> PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid) ) 

#define _Worksheet_get_EnableFormatConditionsCalculation(This,RHS)	\
    ( (This)->lpVtbl -> get_EnableFormatConditionsCalculation(This,RHS) ) 

#define _Worksheet_put_EnableFormatConditionsCalculation(This,RHS)	\
    ( (This)->lpVtbl -> put_EnableFormatConditionsCalculation(This,RHS) ) 

#define _Worksheet_get_Sort(This,RHS)	\
    ( (This)->lpVtbl -> get_Sort(This,RHS) ) 

#define _Worksheet_ExportAsFixedFormat(This,Type,Filename,Quality,IncludeDocProperties,IgnorePrintAreas,From,To,OpenAfterPublish,FixedFormatExtClassPtr)	\
    ( (This)->lpVtbl -> ExportAsFixedFormat(This,Type,Filename,Quality,IncludeDocProperties,IgnorePrintAreas,From,To,OpenAfterPublish,FixedFormatExtClassPtr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpcontext][hidden][propput][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_put__DisplayRightToLeft_Proxy( 
    _Worksheet * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ long RHS);


void __RPC_STUB _Worksheet_put__DisplayRightToLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_AutoFilter_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ AutoFilter **RHS);


void __RPC_STUB _Worksheet_get_AutoFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_DisplayRightToLeft_Proxy( 
    _Worksheet * This,
    /* [lcid][in] */ long lcid,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Worksheet_get_DisplayRightToLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_put_DisplayRightToLeft_Proxy( 
    _Worksheet * This,
    /* [lcid][in] */ long lcid,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Worksheet_put_DisplayRightToLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_Scripts_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ Scripts **RHS);


void __RPC_STUB _Worksheet_get_Scripts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Worksheet__PrintOut_Proxy( 
    _Worksheet * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [optional][in] */ VARIANT PrToFileName,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Worksheet__PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][hidden][id] */ HRESULT STDMETHODCALLTYPE _Worksheet__CheckSpelling_Proxy( 
    _Worksheet * This,
    /* [optional][in] */ VARIANT CustomDictionary,
    /* [optional][in] */ VARIANT IgnoreUppercase,
    /* [optional][in] */ VARIANT AlwaysSuggest,
    /* [optional][in] */ VARIANT SpellLang,
    /* [optional][in] */ VARIANT IgnoreFinalYaa,
    /* [optional][in] */ VARIANT SpellScript,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Worksheet__CheckSpelling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_Tab_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ Tab **RHS);


void __RPC_STUB _Worksheet_get_Tab_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_MailEnvelope_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ MsoEnvelope **RHS);


void __RPC_STUB _Worksheet_get_MailEnvelope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_SaveAs_Proxy( 
    _Worksheet * This,
    /* [in] */ BSTR Filename,
    /* [optional][in] */ VARIANT FileFormat,
    /* [optional][in] */ VARIANT Password,
    /* [optional][in] */ VARIANT WriteResPassword,
    /* [optional][in] */ VARIANT ReadOnlyRecommended,
    /* [optional][in] */ VARIANT CreateBackup,
    /* [optional][in] */ VARIANT AddToMru,
    /* [optional][in] */ VARIANT TextCodepage,
    /* [optional][in] */ VARIANT TextVisualLayout,
    /* [optional][in] */ VARIANT Local);


void __RPC_STUB _Worksheet_SaveAs_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_CustomProperties_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ CustomProperties **RHS);


void __RPC_STUB _Worksheet_get_CustomProperties_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_SmartTags_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ SmartTags **RHS);


void __RPC_STUB _Worksheet_get_SmartTags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_Protection_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ Protection **RHS);


void __RPC_STUB _Worksheet_get_Protection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_PasteSpecial_Proxy( 
    _Worksheet * This,
    /* [optional][in] */ VARIANT Format,
    /* [optional][in] */ VARIANT Link,
    /* [optional][in] */ VARIANT DisplayAsIcon,
    /* [optional][in] */ VARIANT IconFileName,
    /* [optional][in] */ VARIANT IconIndex,
    /* [optional][in] */ VARIANT IconLabel,
    /* [optional][in] */ VARIANT NoHTMLFormatting,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Worksheet_PasteSpecial_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_Protect_Proxy( 
    _Worksheet * This,
    /* [optional][in] */ VARIANT Password,
    /* [optional][in] */ VARIANT DrawingObjects,
    /* [optional][in] */ VARIANT Contents,
    /* [optional][in] */ VARIANT Scenarios,
    /* [optional][in] */ VARIANT UserInterfaceOnly,
    /* [optional][in] */ VARIANT AllowFormattingCells,
    /* [optional][in] */ VARIANT AllowFormattingColumns,
    /* [optional][in] */ VARIANT AllowFormattingRows,
    /* [optional][in] */ VARIANT AllowInsertingColumns,
    /* [optional][in] */ VARIANT AllowInsertingRows,
    /* [optional][in] */ VARIANT AllowInsertingHyperlinks,
    /* [optional][in] */ VARIANT AllowDeletingColumns,
    /* [optional][in] */ VARIANT AllowDeletingRows,
    /* [optional][in] */ VARIANT AllowSorting,
    /* [optional][in] */ VARIANT AllowFiltering,
    /* [optional][in] */ VARIANT AllowUsingPivotTables);


void __RPC_STUB _Worksheet_Protect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_ListObjects_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ ListObjects **RHS);


void __RPC_STUB _Worksheet_get_ListObjects_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_XmlDataQuery_Proxy( 
    _Worksheet * This,
    /* [in] */ BSTR XPath,
    /* [optional][in] */ VARIANT SelectionNamespaces,
    /* [optional][in] */ VARIANT Map,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB _Worksheet_XmlDataQuery_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_XmlMapQuery_Proxy( 
    _Worksheet * This,
    /* [in] */ BSTR XPath,
    /* [optional][in] */ VARIANT SelectionNamespaces,
    /* [optional][in] */ VARIANT Map,
    /* [retval][out] */ Range	**RHS);


void __RPC_STUB _Worksheet_XmlMapQuery_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_PrintOut_Proxy( 
    _Worksheet * This,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT Copies,
    /* [optional][in] */ VARIANT Preview,
    /* [optional][in] */ VARIANT ActivePrinter,
    /* [optional][in] */ VARIANT PrintToFile,
    /* [optional][in] */ VARIANT Collate,
    /* [optional][in] */ VARIANT PrToFileName,
    /* [optional][in] */ VARIANT IgnorePrintAreas,
    /* [lcid][in] */ long lcid);


void __RPC_STUB _Worksheet_PrintOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_EnableFormatConditionsCalculation_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ VARIANT_BOOL *RHS);


void __RPC_STUB _Worksheet_get_EnableFormatConditionsCalculation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propput][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_put_EnableFormatConditionsCalculation_Proxy( 
    _Worksheet * This,
    /* [in] */ VARIANT_BOOL RHS);


void __RPC_STUB _Worksheet_put_EnableFormatConditionsCalculation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][propget][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_get_Sort_Proxy( 
    _Worksheet * This,
    /* [retval][out] */ Sort **RHS);


void __RPC_STUB _Worksheet_get_Sort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpcontext][id] */ HRESULT STDMETHODCALLTYPE _Worksheet_ExportAsFixedFormat_Proxy( 
    _Worksheet * This,
    /* [in] */ XlFixedFormatType Type,
    /* [optional][in] */ VARIANT Filename,
    /* [optional][in] */ VARIANT Quality,
    /* [optional][in] */ VARIANT IncludeDocProperties,
    /* [optional][in] */ VARIANT IgnorePrintAreas,
    /* [optional][in] */ VARIANT From,
    /* [optional][in] */ VARIANT To,
    /* [optional][in] */ VARIANT OpenAfterPublish,
    /* [optional][in] */ VARIANT FixedFormatExtClassPtr);


void __RPC_STUB _Worksheet_ExportAsFixedFormat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* ___Worksheet_INTERFACE_DEFINED__ */


#ifndef __IWorksheets_INTERFACE_DEFINED__
#define __IWorksheets_INTERFACE_DEFINED__

/* interface IWorksheets */
/* [object][hidden][helpcontext][uuid] */ 


EXTERN_C const IID IID_IWorksheets;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("000208B1-0001-0000-C000-000000000046")
    IWorksheets : public IDispatch
    {
    public:
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Application( 
            /* [retval][out] */ Application	**RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Creator( 
            /* [retval][out] */ XlCreator *RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Parent( 
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Add( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [optional][in] */ VARIANT Count,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Copy( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Count( 
            /* [retval][out] */ long *RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Delete( 
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall FillAcrossSheets( 
            /* [in] */ Range	*Range,
            /* [defaultvalue][optional][in] */ XlFillWith Type,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Move( 
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__NewEnum( 
            /* [retval][out] */ IUnknown **RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall __PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PrintPreview( 
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall Select( 
            /* [optional][in] */ VARIANT Replace,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_HPageBreaks( 
            /* [retval][out] */ HPageBreaks **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_VPageBreaks( 
            /* [retval][out] */ vPageBreaks **RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get_Visible( 
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS) = 0;
        
        virtual /* [helpcontext][propput] */ HRESULT __stdcall put_Visible( 
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS) = 0;
        
        virtual /* [helpcontext][propget] */ HRESULT __stdcall get__Default( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS) = 0;
        
        virtual /* [helpcontext][hidden] */ HRESULT __stdcall _PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid) = 0;
        
        virtual /* [helpcontext] */ HRESULT __stdcall PrintOut( 
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IWorksheetsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IWorksheets * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IWorksheets * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IWorksheets * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IWorksheets * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IWorksheets * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IWorksheets * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IWorksheets * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Application )( 
            IWorksheets * This,
            /* [retval][out] */ Application	**RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Creator )( 
            IWorksheets * This,
            /* [retval][out] */ XlCreator *RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Parent )( 
            IWorksheets * This,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Add )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [optional][in] */ VARIANT Count,
            /* [optional][in] */ VARIANT Type,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Copy )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Count )( 
            IWorksheets * This,
            /* [retval][out] */ long *RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Delete )( 
            IWorksheets * This,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext] */ HRESULT ( __stdcall *FillAcrossSheets )( 
            IWorksheets * This,
            /* [in] */ Range	*Range,
            /* [defaultvalue][optional][in] */ XlFillWith Type,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Item )( 
            IWorksheets * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Move )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT Before,
            /* [optional][in] */ VARIANT After,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__NewEnum )( 
            IWorksheets * This,
            /* [retval][out] */ IUnknown **RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *__PrintOut )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PrintPreview )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT EnableChanges,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext] */ HRESULT ( __stdcall *Select )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT Replace,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_HPageBreaks )( 
            IWorksheets * This,
            /* [retval][out] */ HPageBreaks **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_VPageBreaks )( 
            IWorksheets * This,
            /* [retval][out] */ vPageBreaks **RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get_Visible )( 
            IWorksheets * This,
            /* [lcid][in] */ long lcid,
            /* [retval][out] */ VARIANT *RHS);
        
        /* [helpcontext][propput] */ HRESULT ( __stdcall *put_Visible )( 
            IWorksheets * This,
            /* [lcid][in] */ long lcid,
            /* [in] */ VARIANT RHS);
        
        /* [helpcontext][propget] */ HRESULT ( __stdcall *get__Default )( 
            IWorksheets * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDispatch **RHS);
        
        /* [helpcontext][hidden] */ HRESULT ( __stdcall *_PrintOut )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [lcid][in] */ long lcid);
        
        /* [helpcontext] */ HRESULT ( __stdcall *PrintOut )( 
            IWorksheets * This,
            /* [optional][in] */ VARIANT From,
            /* [optional][in] */ VARIANT To,
            /* [optional][in] */ VARIANT Copies,
            /* [optional][in] */ VARIANT Preview,
            /* [optional][in] */ VARIANT ActivePrinter,
            /* [optional][in] */ VARIANT PrintToFile,
            /* [optional][in] */ VARIANT Collate,
            /* [optional][in] */ VARIANT PrToFileName,
            /* [optional][in] */ VARIANT IgnorePrintAreas,
            /* [lcid][in] */ long lcid);
        
        END_INTERFACE
    } IWorksheetsVtbl;

    interface IWorksheets
    {
        CONST_VTBL struct IWorksheetsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IWorksheets_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IWorksheets_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IWorksheets_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IWorksheets_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IWorksheets_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IWorksheets_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IWorksheets_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IWorksheets_get_Application(This,RHS)	\
    ( (This)->lpVtbl -> get_Application(This,RHS) ) 

#define IWorksheets_get_Creator(This,RHS)	\
    ( (This)->lpVtbl -> get_Creator(This,RHS) ) 

#define IWorksheets_get_Parent(This,RHS)	\
    ( (This)->lpVtbl -> get_Parent(This,RHS) ) 

#define IWorksheets_Add(This,Before,After,Count,Type,lcid,RHS)	\
    ( (This)->lpVtbl -> Add(This,Before,After,Count,Type,lcid,RHS) ) 

#define IWorksheets_Copy(This,Before,After,lcid)	\
    ( (This)->lpVtbl -> Copy(This,Before,After,lcid) ) 

#define IWorksheets_get_Count(This,RHS)	\
    ( (This)->lpVtbl -> get_Count(This,RHS) ) 

#define IWorksheets_Delete(This,lcid)	\
    ( (This)->lpVtbl -> Delete(This,lcid) ) 

#define IWorksheets_FillAcrossSheets(This,Range,Type,lcid)	\
    ( (This)->lpVtbl -> FillAcrossSheets(This,Range,Type,lcid) ) 

#define IWorksheets_get_Item(This,Index,RHS)	\
    ( (This)->lpVtbl -> get_Item(This,Index,RHS) ) 

#define IWorksheets_Move(This,Before,After,lcid)	\
    ( (This)->lpVtbl -> Move(This,Before,After,lcid) ) 

#define IWorksheets_get__NewEnum(This,RHS)	\
    ( (This)->lpVtbl -> get__NewEnum(This,RHS) ) 

#define IWorksheets___PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid)	\
    ( (This)->lpVtbl -> __PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,lcid) ) 

#define IWorksheets_PrintPreview(This,EnableChanges,lcid)	\
    ( (This)->lpVtbl -> PrintPreview(This,EnableChanges,lcid) ) 

#define IWorksheets_Select(This,Replace,lcid)	\
    ( (This)->lpVtbl -> Select(This,Replace,lcid) ) 

#define IWorksheets_get_HPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_HPageBreaks(This,RHS) ) 

#define IWorksheets_get_VPageBreaks(This,RHS)	\
    ( (This)->lpVtbl -> get_VPageBreaks(This,RHS) ) 

#define IWorksheets_get_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> get_Visible(This,lcid,RHS) ) 

#define IWorksheets_put_Visible(This,lcid,RHS)	\
    ( (This)->lpVtbl -> put_Visible(This,lcid,RHS) ) 

#define IWorksheets_get__Default(This,Index,RHS)	\
    ( (This)->lpVtbl -> get__Default(This,Index,RHS) ) 

#define IWorksheets__PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid)	\
    ( (This)->lpVtbl -> _PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,lcid) ) 

#define IWorksheets_PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid)	\
    ( (This)->lpVtbl -> PrintOut(This,From,To,Copies,Preview,ActivePrinter,PrintToFile,Collate,PrToFileName,IgnorePrintAreas,lcid) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IWorksheets_INTERFACE_DEFINED__ */


#ifndef __AppEvents_DISPINTERFACE_DEFINED__
#define __AppEvents_DISPINTERFACE_DEFINED__

/* dispinterface AppEvents */
/* [hidden][helpstring][uuid] */ 


EXTERN_C const IID DIID_AppEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00024413-0000-0000-C000-000000000046")
    AppEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct AppEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            AppEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            AppEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            AppEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            AppEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            AppEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            AppEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            AppEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } AppEventsVtbl;

    interface AppEvents
    {
        CONST_VTBL struct AppEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define AppEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define AppEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define AppEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define AppEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define AppEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define AppEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define AppEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __AppEvents_DISPINTERFACE_DEFINED__ */


#ifndef __WorkbookEvents_DISPINTERFACE_DEFINED__
#define __WorkbookEvents_DISPINTERFACE_DEFINED__

/* dispinterface WorkbookEvents */
/* [hidden][helpcontext][uuid] */ 


EXTERN_C const IID DIID_WorkbookEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00024412-0000-0000-C000-000000000046")
    WorkbookEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct WorkbookEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            WorkbookEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            WorkbookEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            WorkbookEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            WorkbookEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            WorkbookEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            WorkbookEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            WorkbookEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } WorkbookEventsVtbl;

    interface WorkbookEvents
    {
        CONST_VTBL struct WorkbookEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define WorkbookEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define WorkbookEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define WorkbookEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define WorkbookEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define WorkbookEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define WorkbookEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define WorkbookEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __WorkbookEvents_DISPINTERFACE_DEFINED__ */


#ifndef __PivotCaches_DISPINTERFACE_DEFINED__
#define __PivotCaches_DISPINTERFACE_DEFINED__

/* dispinterface PivotCaches */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_PivotCaches;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0002441D-0000-0000-C000-000000000046")
    PivotCaches : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct PivotCachesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PivotCaches * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PivotCaches * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PivotCaches * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PivotCaches * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PivotCaches * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PivotCaches * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PivotCaches * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } PivotCachesVtbl;

    interface PivotCaches
    {
        CONST_VTBL struct PivotCachesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PivotCaches_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PivotCaches_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PivotCaches_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PivotCaches_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PivotCaches_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PivotCaches_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PivotCaches_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __PivotCaches_DISPINTERFACE_DEFINED__ */


#ifndef __Names_DISPINTERFACE_DEFINED__
#define __Names_DISPINTERFACE_DEFINED__

/* dispinterface Names */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Names;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000208B8-0000-0000-C000-000000000046")
    Names : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct NamesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Names * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Names * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Names * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Names * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Names * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Names * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Names * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } NamesVtbl;

    interface Names
    {
        CONST_VTBL struct NamesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Names_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Names_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Names_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Names_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Names_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Names_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Names_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Names_DISPINTERFACE_DEFINED__ */


#ifndef __Name_DISPINTERFACE_DEFINED__
#define __Name_DISPINTERFACE_DEFINED__

/* dispinterface Name */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Name;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000208B9-0000-0000-C000-000000000046")
    Name : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct NameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Name * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Name * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Name * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Name * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Name * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Name * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Name * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } NameVtbl;

    interface Name
    {
        CONST_VTBL struct NameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Name_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Name_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Name_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Name_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Name_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Name_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Name_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Name_DISPINTERFACE_DEFINED__ */


#ifndef __Borders_DISPINTERFACE_DEFINED__
#define __Borders_DISPINTERFACE_DEFINED__

/* dispinterface Borders */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Borders;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00020855-0000-0000-C000-000000000046")
    Borders : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct BordersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Borders * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Borders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Borders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Borders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Borders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Borders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Borders * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } BordersVtbl;

    interface Borders
    {
        CONST_VTBL struct BordersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Borders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Borders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Borders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Borders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Borders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Borders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Borders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Borders_DISPINTERFACE_DEFINED__ */


#ifndef __Border_DISPINTERFACE_DEFINED__
#define __Border_DISPINTERFACE_DEFINED__

/* dispinterface Border */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Border;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00020854-0000-0000-C000-000000000046")
    Border : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct BorderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Border * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Border * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Border * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Border * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Border * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Border * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Border * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } BorderVtbl;

    interface Border
    {
        CONST_VTBL struct BorderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Border_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Border_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Border_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Border_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Border_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Border_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Border_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Border_DISPINTERFACE_DEFINED__ */


#ifndef __Interior_DISPINTERFACE_DEFINED__
#define __Interior_DISPINTERFACE_DEFINED__

/* dispinterface Interior */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Interior;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00020870-0000-0000-C000-000000000046")
    Interior : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct InteriorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Interior * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Interior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Interior * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Interior * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Interior * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Interior * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Interior * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } InteriorVtbl;

    interface Interior
    {
        CONST_VTBL struct InteriorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Interior_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Interior_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Interior_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Interior_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Interior_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Interior_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Interior_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Interior_DISPINTERFACE_DEFINED__ */


#ifndef __Outline_DISPINTERFACE_DEFINED__
#define __Outline_DISPINTERFACE_DEFINED__

/* dispinterface Outline */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Outline;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000208AB-0000-0000-C000-000000000046")
    Outline : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct OutlineVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Outline * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Outline * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Outline * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Outline * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Outline * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Outline * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Outline * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } OutlineVtbl;

    interface Outline
    {
        CONST_VTBL struct OutlineVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Outline_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Outline_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Outline_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Outline_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Outline_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Outline_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Outline_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Outline_DISPINTERFACE_DEFINED__ */


#ifndef __PageSetup_DISPINTERFACE_DEFINED__
#define __PageSetup_DISPINTERFACE_DEFINED__

/* dispinterface PageSetup */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_PageSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000208B4-0000-0000-C000-000000000046")
    PageSetup : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct PageSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            PageSetup * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            PageSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            PageSetup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            PageSetup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            PageSetup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            PageSetup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            PageSetup * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } PageSetupVtbl;

    interface PageSetup
    {
        CONST_VTBL struct PageSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define PageSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define PageSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define PageSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define PageSetup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define PageSetup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define PageSetup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define PageSetup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __PageSetup_DISPINTERFACE_DEFINED__ */


#ifndef __Font_DISPINTERFACE_DEFINED__
#define __Font_DISPINTERFACE_DEFINED__

/* dispinterface Font */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Font;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("0002084D-0000-0000-C000-000000000046")
    Font : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct FontVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Font * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Font * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Font * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Font * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Font * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Font * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Font * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } FontVtbl;

    interface Font
    {
        CONST_VTBL struct FontVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Font_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Font_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Font_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Font_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Font_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Font_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Font_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Font_DISPINTERFACE_DEFINED__ */


#ifndef __Range_DISPINTERFACE_DEFINED__
#define __Range_DISPINTERFACE_DEFINED__

/* dispinterface Range */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Range;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00020846-0000-0000-C000-000000000046")
    Range : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct RangeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Range * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Range * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Range * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Range * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Range * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Range * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Range * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } RangeVtbl;

    interface Range
    {
        CONST_VTBL struct RangeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Range_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Range_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Range_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Range_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Range_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Range_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Range_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Range_DISPINTERFACE_DEFINED__ */


#ifndef __DocEvents_DISPINTERFACE_DEFINED__
#define __DocEvents_DISPINTERFACE_DEFINED__

/* dispinterface DocEvents */
/* [hidden][helpcontext][uuid] */ 


EXTERN_C const IID DIID_DocEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("00024411-0000-0000-C000-000000000046")
    DocEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DocEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DocEvents * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DocEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DocEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DocEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DocEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DocEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DocEvents * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DocEventsVtbl;

    interface DocEvents
    {
        CONST_VTBL struct DocEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DocEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define DocEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define DocEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define DocEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define DocEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define DocEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define DocEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DocEvents_DISPINTERFACE_DEFINED__ */


#ifndef __Worksheets_DISPINTERFACE_DEFINED__
#define __Worksheets_DISPINTERFACE_DEFINED__

/* dispinterface Worksheets */
/* [helpcontext][uuid] */ 


EXTERN_C const IID DIID_Worksheets;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("000208B1-0000-0000-C000-000000000046")
    Worksheets : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct WorksheetsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            Worksheets * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ 
            __RPC__deref_out  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            Worksheets * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            Worksheets * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            Worksheets * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            Worksheets * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            Worksheets * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            Worksheets * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } WorksheetsVtbl;

    interface Worksheets
    {
        CONST_VTBL struct WorksheetsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define Worksheets_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define Worksheets_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define Worksheets_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define Worksheets_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define Worksheets_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define Worksheets_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define Worksheets_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __Worksheets_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Worksheet;

#ifdef __cplusplus

class DECLSPEC_UUID("00020820-0000-0000-C000-000000000046")
Worksheet;
#endif

EXTERN_C const CLSID CLSID_Application;

#ifdef __cplusplus

class DECLSPEC_UUID("00024500-0000-0000-C000-000000000046")
Application;
#endif

EXTERN_C const CLSID CLSID_Workbook;

#ifdef __cplusplus

class DECLSPEC_UUID("00020819-0000-0000-C000-000000000046")
Workbook;
#endif
#endif /* __Office_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


